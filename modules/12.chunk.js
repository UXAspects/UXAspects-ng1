(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"1TeR":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-modal-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-modal-header-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Type *<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dynamic-select</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.types<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dynamic-select</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Text Keywords *<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter keywords<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchkeywords<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType === <span class="token punctuation">\'</span>String<span class="token punctuation">\'</span> || vm.selectedType === <span class="token punctuation">\'</span>Mail<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType === <span class="token punctuation">\'</span>String<span class="token punctuation">\'</span> || vm.selectedType === <span class="token punctuation">\'</span>Mail<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>ANY OF the following<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ANY<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.any<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType === <span class="token punctuation">\'</span>String<span class="token punctuation">\'</span> || vm.selectedType === <span class="token punctuation">\'</span>Mail<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>ALL OF the following<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ALL<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.all<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType === <span class="token punctuation">\'</span>String<span class="token punctuation">\'</span> || vm.selectedType === <span class="token punctuation">\'</span>Mail<span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>NONE OF the following<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NONE<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.exclude<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-modal-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary m-r-sm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.search()<span class="token punctuation">"</span></span> <span class="token attr-name">ng-disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectedType === <span class="token punctuation">\'</span><span class="token punctuation">\'</span> || vm.text === <span class="token punctuation">\'</span><span class="token punctuation">\'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.cancel();<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="search-history-modal-header">\n    <div class="search-icon"></div>\n    <h1 class="search-history-modal-header-title">Search</h1>\n</div>\n<div class="search-history-modal-content">\n    <div class="section">\n        <p>Type *</p>\n        <dynamic-select ng-model="vm.selectedType" source="vm.types" options="vm.selectOptions">\n        </dynamic-select>\n        <hr>\n    </div>\n    <div class="section">\n        <p>Text Keywords *</p>\n        <input type="text" class="form-control" placeholder="Enter keywords" ng-model="vm.text" name="searchkeywords" />\n        <hr ng-if="vm.selectedType === \'String\' || vm.selectedType === \'Mail\'">\n    </div>\n    <div class="section" ng-if="vm.selectedType === \'String\' || vm.selectedType === \'Mail\'">\n        <p>ANY OF the following</p>\n        <input type="text" class="form-control" placeholder="ANY" ng-model="vm.any" />\n        <hr>\n    </div>\n    <div class="section" ng-if="vm.selectedType === \'String\' || vm.selectedType === \'Mail\'">\n        <p>ALL OF the following</p>\n        <input type="text" class="form-control" placeholder="ALL" ng-model="vm.all" />\n        <hr>\n    </div>\n    <div class="section" ng-if="vm.selectedType === \'String\' || vm.selectedType === \'Mail\'">\n        <p>NONE OF the following</p>\n        <input type="text" class="form-control" placeholder="NONE" ng-model="vm.exclude" />\n    </div>\n</div>\n<div class="search-history-modal-footer">\n    <button class="btn btn-primary m-r-sm" ng-click="vm.search()" ng-disabled="vm.selectedType === \'\' || vm.text === \'\'">Search</button>\n    <button class="btn btn-secondary" ng-click="vm.cancel();">Cancel</button>\n</div>'}},"3vLH":function(n,a,s){var t={"./addFieldPanel.html":"Cswj","./addFieldPanel.js":"I1Cu","./authorComponent.html":"V6WI","./componentArray.snippet.js":"RN7n","./controller.js":"ri8i","./custodianComponent.html":"5NE2","./custodianComponent.js":"ykPC","./custodianPanel.html":"FLxL","./custodianPanel.js":"6kVz","./dateRangeComponent.html":"eost","./dateRangeComponent.js":"dUKW","./fileNameComponent.html":"m7XT","./fileTypesComponent.html":"KQk4","./fileTypesComponent.js":"Ad01","./fileTypesPanel.html":"YhdK","./fileTypesPanel.js":"zz0X","./keywordComponent.html":"CXBd","./layout.html":"XlPE","./modalController.js":"fWV6","./modalLayout.html":"H5io","./modalLayout.snippet.html":"6UiF","./repositoryComponent.html":"GnTo","./repositoryComponent.js":"ZLTU","./repositoryPanel.html":"AUMa","./repositoryPanel.js":"NjGb","./searchBuilderIdService.js":"vBWf","./searchBuilderPanelService.js":"Xv84","./searchGroup.snippet.html":"VmVP","./searchQuery.snippet.js":"RqwO","./styles.css":"KoHG","./textComponent.html":"M8Fy"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="3vLH"},"5NE2":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustodianComponentCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Custodian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dynamic-select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.custodians<span class="token punctuation">"</span></span> <span class="token attr-name">select-as</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">track-by</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dynamic-select</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon show-panel-btn<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.showPanel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-menu text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component ng-controller="CustodianComponentCtrl as vm">\n  <label class="form-label">Custodian</label>\n  <div class="input-group">\n    <dynamic-select multiple ng-model="model" source="vm.custodians" select-as="name" track-by="id" options="vm.selectOptions">\n    </dynamic-select>\n    <span class="input-group-addon show-panel-btn" ng-click="vm.showPanel()"><span class="hpe-icon hpe-menu text-black"></span></span>\n  </div>\n</search-component>\n'}},"6UiF":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dismiss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-icon button-dark btn-circular btn-close<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-header-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search builder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-scroll-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-scroller<span class="token punctuation">"</span></span> <span class="token attr-name">scroll-config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.scrollBarConfig<span class="token punctuation">"</span></span> <span class="token attr-name">scroll-pane</span> <span class="token attr-name">scroll-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Search Builder Should Go Here --\x3e</span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.ok()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>'}},"6kVz":function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'CustodianPanelCtrl\'</span><span class="token punctuation">,</span> CustodianPanelCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nCustodianPanelCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">CustodianPanelCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store the filter text</span>\n    vm<span class="token punctuation">.</span>filterText <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store all the possible fields</span>\n    vm<span class="token punctuation">.</span>custodians <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">selectCustodian</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        custodian<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">!</span>custodian<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//when the panel is dismissed resolve the deferred object</span>\n    searchBuilderPanel<span class="token punctuation">.</span><span class="token function">onDismiss</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> selectedCustodians <span class="token operator">=</span> vm<span class="token punctuation">.</span>custodians<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> custodian<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//we only want to return custodians names</span>\n        <span class="token keyword">var</span> custodians <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        selectedCustodians<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            custodians<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>custodian<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>custodians<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//check any items already selected in the search component</span>\n    <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> data <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> custodians <span class="token operator">=</span> data<span class="token punctuation">.</span>custodians<span class="token punctuation">;</span>\n\n        custodians<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>custodians<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                data<span class="token punctuation">:</span> custodian<span class="token punctuation">,</span>\n                checked<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//if there are no selected custodians then stop here</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n        data<span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>custodians<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//if it is a match set the checked value to true</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>custodian<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id <span class="token operator">===</span> selected<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span> custodian<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('CustodianPanelCtrl', CustodianPanelCtrl);\n\nCustodianPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\n\nfunction CustodianPanelCtrl($scope, searchBuilderPanel) {\n    var vm = this;\n\n    //store the filter text\n    vm.filterText = '';\n\n    //store all the possible fields\n    vm.custodians = [];\n\n    vm.selectCustodian = function (custodian) {\n        custodian.checked = !custodian.checked;\n    };\n\n    //when the panel is dismissed resolve the deferred object\n    searchBuilderPanel.onDismiss(function (deferred) {\n        var selectedCustodians = vm.custodians.filter(function (custodian) {\n            return custodian.checked;\n        });\n\n        //we only want to return custodians names\n        var custodians = [];\n\n        selectedCustodians.forEach(function (custodian) {\n            custodians.push(custodian.data);\n        });\n\n        if (deferred) deferred.resolve(custodians);\n    });\n\n    //check any items already selected in the search component\n    prepareItems();\n\n    function prepareItems() {\n        var data = searchBuilderPanel.getData();\n\n        var custodians = data.custodians;\n\n        custodians.forEach(function (custodian) {\n            vm.custodians.push({\n                data: custodian,\n                checked: false\n            });\n        });\n\n        //if there are no selected custodians then stop here\n        if (!data.selected) return;\n\n        data.selected.forEach(function (selected) {\n            vm.custodians.forEach(function (custodian) {\n                //if it is a match set the checked value to true\n                if (custodian.data.id === selected.id) { custodian.checked = true; }\n            });\n        });\n    }\n}"}},"9gLR":function(n,a,s){var t={"./controller.js":"EvB3","./layout.html":"cl18","./modalController.js":"k6qR","./modalLayout.html":"1TeR","./styles.css":"M67U"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="9gLR"},AUMa:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-sm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RepositoryPanelCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Find a repository<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-field-list<span class="token punctuation">"</span></span> <span class="token attr-name">list-item-filter</span> <span class="token attr-name">filter-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-name<span class="token punctuation">"</span></span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>repo in vm.repositories<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{ repo.name }}<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectRepository(repo)<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ <span class="token punctuation">\'</span>option-deselected<span class="token punctuation">\'</span>: !repo.checked, <span class="token punctuation">\'</span>option-selected<span class="token punctuation">\'</span>: repo.checked }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-checkmark text-accent option-check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        {{ repo.name }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="m-sm" ng-controller="RepositoryPanelCtrl as vm">\n    <input type="text" placeholder="Find a repository" class="form-control" ng-model="vm.filterText" force-focus>\n    <ul class="add-field-list" list-item-filter filter-text="vm.filterText">\n      <li class="field-name" ng-repeat="repo in vm.repositories" key="{{ repo.name }}" ng-click="vm.selectRepository(repo)" ng-class="{ \'option-deselected\': !repo.checked, \'option-selected\': repo.checked }">\n        <span class="hpe-icon hpe-checkmark text-accent option-check"></span>\n        {{ repo.name }}\n      </li>\n    </ul>\n</div>\n'}},Ad01:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'FileTypesComponentCtrl\'</span><span class="token punctuation">,</span> FileTypesComponentCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nFileTypesComponentCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">FileTypesComponentCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//use this to allow the side panel to select options</span>\n    vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>selectOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        placeholder<span class="token punctuation">:</span> <span class="token string">\'Select File Types\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>fileTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"AVI"</span><span class="token punctuation">,</span> <span class="token string">"BMP"</span><span class="token punctuation">,</span> <span class="token string">"CSV"</span><span class="token punctuation">,</span> <span class="token string">"DOC"</span><span class="token punctuation">,</span> <span class="token string">"EXE"</span><span class="token punctuation">,</span> <span class="token string">"GIF"</span><span class="token punctuation">,</span> <span class="token string">"JPG"</span><span class="token punctuation">,</span> <span class="token string">"MOV"</span><span class="token punctuation">,</span> <span class="token string">"PDF"</span><span class="token punctuation">,</span> <span class="token string">"PNG"</span><span class="token punctuation">,</span> <span class="token string">"PPT"</span><span class="token punctuation">,</span> <span class="token string">"RTF"</span><span class="token punctuation">,</span> <span class="token string">"TXT"</span><span class="token punctuation">,</span> <span class="token string">"XLS"</span><span class="token punctuation">,</span> <span class="token string">"ZIP"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">showPanel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'Select File Types\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'fileTypesPanel.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//pass in any currently selected file types</span>\n        vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">openPanel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            fileTypes<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>fileTypes<span class="token punctuation">,</span>\n            selected<span class="token punctuation">:</span> $scope<span class="token punctuation">.</span>model\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//wait for an update on selected repositories</span>\n        vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selectedFileTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $scope<span class="token punctuation">.</span>model <span class="token operator">=</span> selectedFileTypes<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:'angular.module(\'app\').controller(\'FileTypesComponentCtrl\', FileTypesComponentCtrl);\n\nFileTypesComponentCtrl.$inject = [\'$scope\', \'searchBuilderPanel\'];\n\nfunction FileTypesComponentCtrl($scope, searchBuilderPanel) {\n\n    var vm = this;\n\n    //use this to allow the side panel to select options\n    vm.deferred = null;\n\n    vm.selectOptions = {\n        placeholder: \'Select File Types\'\n    };\n\n    vm.fileTypes = ["AVI", "BMP", "CSV", "DOC", "EXE", "GIF", "JPG", "MOV", "PDF", "PNG", "PPT", "RTF", "TXT", "XLS", "ZIP"];\n\n    vm.showPanel = function () {\n        searchBuilderPanel.setPanelHeader(\'Select File Types\');\n        searchBuilderPanel.setPanelTemplate(\'fileTypesPanel.html\');\n\n        //pass in any currently selected file types\n        vm.deferred = searchBuilderPanel.openPanel({\n            fileTypes: vm.fileTypes,\n            selected: $scope.model\n        });\n\n        //wait for an update on selected repositories\n        vm.deferred.then(function (selectedFileTypes) {\n            $scope.model = selectedFileTypes;\n        });\n    };\n}'}},CR2z:function(n,a,s){var t={"./app.css":"PhWE","./app.html":"l2Kv","./app.ts":"OeT4"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="CR2z"},CXBd:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter Keyword<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component>\n    <input placeholder="Enter Keyword" class="form-control" ng-model="model" force-focus />\n</search-component>\n'}},Cswj:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-sm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AddFieldPanelCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Find a field<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-field-list<span class="token punctuation">"</span></span> <span class="token attr-name">list-item-filter</span> <span class="token attr-name">filter-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-name<span class="token punctuation">"</span></span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field in vm.fields<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{ field.name }}<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectField(field)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ field.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="m-sm" ng-controller="AddFieldPanelCtrl as vm">\n    <input type="text" placeholder="Find a field" class="form-control" ng-model="vm.filterText" force-focus>\n    <ul class="add-field-list" list-item-filter filter-text="vm.filterText">\n      <li class="field-name" ng-repeat="field in vm.fields" key="{{ field.name }}" ng-click="vm.selectField(field)">{{ field.name }}</li>\n    </ul>\n</div>\n'}},EvB3:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'SearchHistoryDemoCtrl\'</span><span class="token punctuation">,</span> SearchHistoryDemoCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nSearchHistoryDemoCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'$modal\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">SearchHistoryDemoCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> $modal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>scrollConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n        autoReinitialise<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        showOnlyOnHover<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        enableKeyboardNavigation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        isScrollableH<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        scrollMargin<span class="token punctuation">:</span> <span class="token number">5</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>searches <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"periwinkle documents" AND ("Emma Hart" OR "ehart")\'</span><span class="token punctuation">,</span>\n            any<span class="token punctuation">:</span> <span class="token string">\'PDF, DOC, DOCX, XLS, PPT\'</span><span class="token punctuation">,</span>\n            all<span class="token punctuation">:</span> <span class="token string">\'16/03/2016 - 18/11/2016\'</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">\'"Recycle Bin", "Trash"\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"attendance record" AND "Tim Walsh"\'</span><span class="token punctuation">,</span>\n            any<span class="token punctuation">:</span> <span class="token string">\'XLS, XLSX\'</span><span class="token punctuation">,</span>\n            all<span class="token punctuation">:</span> <span class="token string">\'File Archives, Time Off Docs\'</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">\'"Recycle Bin", "Trash"\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-folder\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Helena\\\'s Workbook\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-user\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Lauren Scott\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"meeting notes"\'</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">\'"Recycle Bin", "Trash"\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"time off allowance"\'</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">\'"Recycle Bin", "Trash"\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-folder\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Gabriel\\\'s Workbook\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"hr links" AND ("hr connect" OR "hr@company.com")\'</span><span class="token punctuation">,</span>\n            any<span class="token punctuation">:</span> <span class="token string">"HR, Human Resources, HR Connect"</span><span class="token punctuation">,</span>\n            all<span class="token punctuation">:</span> <span class="token string">"12/09/2016 - 22/10/2016"</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">\'"Mail"\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-user-manager\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'Joshua Smith\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> <span class="token string">\'hpe-mail\'</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> <span class="token string">\'"weekly rota"\'</span><span class="token punctuation">,</span>\n            any<span class="token punctuation">:</span> <span class="token string">"Joshua Smith, Michael Tucker"</span><span class="token punctuation">,</span>\n            all<span class="token punctuation">:</span> <span class="token string">"10/11/2016"</span><span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> <span class="token string">"Donny Piper"</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">storeSearches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getHistory</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>searches <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'mySearches\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">openModal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> modalInstance <span class="token operator">=</span> $modal<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            templateUrl<span class="token punctuation">:</span> <span class="token string">\'search-history-ng1/modalLayout.html\'</span><span class="token punctuation">,</span>\n            controller<span class="token punctuation">:</span> <span class="token string">\'SearchHistoryModalDemoCtrl\'</span><span class="token punctuation">,</span>\n            controllerAs<span class="token punctuation">:</span> <span class="token string">\'vm\'</span><span class="token punctuation">,</span>\n            keyboard<span class="token punctuation">:</span> <span class="token string">\'true\'</span><span class="token punctuation">,</span>\n            size<span class="token punctuation">:</span> <span class="token string">\'md\'</span><span class="token punctuation">,</span>\n            windowClass<span class="token punctuation">:</span> <span class="token string">\'square-modal-window\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        modalInstance<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">===</span> <span class="token string">"cancel"</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n            vm<span class="token punctuation">.</span>searches <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'mySearches\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            vm<span class="token punctuation">.</span>searches<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            vm<span class="token punctuation">.</span>searches<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token function">storeSearches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>search<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>searches<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span>searches<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">storeSearches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">storeSearches</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">\'mySearches\'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searches<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('SearchHistoryDemoCtrl', SearchHistoryDemoCtrl);\n\nSearchHistoryDemoCtrl.$inject = ['$scope', '$modal'];\n\nfunction SearchHistoryDemoCtrl($scope, $modal) {\n    var vm = this;\n\n    vm.scrollConfig = {\n        autoReinitialise: true,\n        showOnlyOnHover: false,\n        enableKeyboardNavigation: true,\n        isScrollableH: false,\n        scrollMargin: 5\n    };\n\n    vm.searches = [\n        {\n            icon: 'hpe-search',\n            text: '\"periwinkle documents\" AND (\"Emma Hart\" OR \"ehart\")',\n            any: 'PDF, DOC, DOCX, XLS, PPT',\n            all: '16/03/2016 - 18/11/2016',\n            exclude: '\"Recycle Bin\", \"Trash\"'\n        }, {\n            icon: 'hpe-search',\n            text: '\"attendance record\" AND \"Tim Walsh\"',\n            any: 'XLS, XLSX',\n            all: 'File Archives, Time Off Docs',\n            exclude: '\"Recycle Bin\", \"Trash\"'\n        }, {\n            icon: 'hpe-folder',\n            text: 'Helena\\'s Workbook'\n        }, {\n            icon: 'hpe-user',\n            text: 'Lauren Scott'\n        }, {\n            icon: 'hpe-search',\n            text: '\"meeting notes\"',\n            exclude: '\"Recycle Bin\", \"Trash\"'\n        }, {\n            icon: 'hpe-search',\n            text: '\"time off allowance\"',\n            exclude: '\"Recycle Bin\", \"Trash\"'\n        }, {\n            icon: 'hpe-folder',\n            text: 'Gabriel\\'s Workbook'\n        }, {\n            icon: 'hpe-search',\n            text: '\"hr links\" AND (\"hr connect\" OR \"hr@company.com\")',\n            any: \"HR, Human Resources, HR Connect\",\n            all: \"12/09/2016 - 22/10/2016\",\n            exclude: '\"Mail\"'\n        }, {\n            icon: 'hpe-user-manager',\n            text: 'Joshua Smith'\n        }, {\n            icon: 'hpe-mail',\n            text: '\"weekly rota\"',\n            any: \"Joshua Smith, Michael Tucker\",\n            all: \"10/11/2016\",\n            exclude: \"Donny Piper\"\n        }\n    ];\n\n    storeSearches();\n\n    vm.getHistory = function () {\n        vm.searches = JSON.parse(localStorage.getItem('mySearches'));\n    };\n\n    vm.openModal = function () {\n        var modalInstance = $modal.open({\n            animation: false,\n            templateUrl: 'search-history-ng1/modalLayout.html',\n            controller: 'SearchHistoryModalDemoCtrl',\n            controllerAs: 'vm',\n            keyboard: 'true',\n            size: 'md',\n            windowClass: 'square-modal-window'\n        });\n\n        modalInstance.result.then(function (result) {\n            if (result === \"cancel\") return;\n\n            vm.searches = JSON.parse(localStorage.getItem('mySearches'));\n            vm.searches.unshift(result);\n            vm.searches.pop();\n\n            storeSearches();\n        });\n    };\n\n    vm.search = function (search) {\n        vm.searches.unshift(search);\n        vm.searches.pop();\n        storeSearches();\n    };\n\n    function storeSearches() {\n        localStorage.setItem('mySearches', JSON.stringify(vm.searches));\n    }\n}"}},ExRS:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-toolbar</span> <span class="token attr-name">place-holder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search...<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-search</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.search<span class="token punctuation">"</span></span>\n            <span class="token attr-name">close-search</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Cancel<span class="token punctuation">"</span></span>\n            <span class="token attr-name">search-typeahead</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-toolbar</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="col-sm-12">\n        <search-toolbar place-holder="Search..."\n            on-search="vm.search"\n            close-search="Cancel"\n            search-typeahead="vm.list">\n        </search-toolbar>\n    </div>\n</div>'}},FLxL:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-sm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustodianPanelCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Find a custodian<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-field-list<span class="token punctuation">"</span></span> <span class="token attr-name">list-item-filter</span> <span class="token attr-name">filter-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-name<span class="token punctuation">"</span></span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>custodian in vm.custodians<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{ custodian.data.id }}<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectCustodian(custodian)<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ <span class="token punctuation">\'</span>option-deselected<span class="token punctuation">\'</span>: !custodian.checked, <span class="token punctuation">\'</span>option-selected<span class="token punctuation">\'</span>: custodian.checked }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-checkmark text-accent option-check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> {{ custodian.data.name }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="m-sm" ng-controller="CustodianPanelCtrl as vm">\n  <input type="text" placeholder="Find a custodian" class="form-control" ng-model="vm.filterText" force-focus>\n  <ul class="add-field-list" list-item-filter filter-text="vm.filterText">\n    <li class="field-name" ng-repeat="custodian in vm.custodians" key="{{ custodian.data.id }}" ng-click="vm.selectCustodian(custodian)" ng-class="{ \'option-deselected\': !custodian.checked, \'option-selected\': custodian.checked }">\n      <span class="hpe-icon hpe-checkmark text-accent option-check"></span> {{ custodian.data.name }}\n    </li>\n  </ul>\n</div>\n'}},GnTo:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RepositoryComponentCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dynamic-select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.repositories<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dynamic-select</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon show-panel-btn<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.showPanel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-menu text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component ng-controller="RepositoryComponentCtrl as vm">\n  <label class="form-label">Repository</label>\n  <div class="input-group">\n    <dynamic-select multiple ng-model="model" source="vm.repositories" options="vm.selectOptions">\n    </dynamic-select>\n    <span class="input-group-addon show-panel-btn" ng-click="vm.showPanel()"><span class="hpe-icon hpe-menu text-black"></span></span>\n  </div>\n</search-component>\n'}},H5io:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dismiss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-icon button-dark btn-circular btn-close<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-header-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search builder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-scroll-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modal-inset-panel</span> <span class="token attr-name">show-panel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.panelOpen<span class="token punctuation">"</span></span> <span class="token attr-name">panel-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.getPanelWidth()<span class="token punctuation">"</span></span> <span class="token attr-name">panel-side</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.getPanelSide()<span class="token punctuation">"</span></span>\n        <span class="token attr-name">on-dismiss</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.onDismiss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modal-inset-header</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.getPanelHeader()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modal-inset-header</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modal-inset-content</span> <span class="token attr-name">panel-template</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.panelService.getPanelTemplate()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modal-inset-content</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modal-inset-panel</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-scroller<span class="token punctuation">"</span></span> <span class="token attr-name">scroll-config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.scrollBarConfig<span class="token punctuation">"</span></span> <span class="token attr-name">scroll-pane</span> <span class="token attr-name">scroll-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-builder</span> <span class="token attr-name">search-query</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.searchQuery<span class="token punctuation">"</span></span> <span class="token attr-name">components</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.components<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Text Keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>or<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add text keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addKeywordField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>locations<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>ANY of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>or<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>type<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>ALL of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>and<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>exclusions<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>NONE of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>not<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n                    <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-builder</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spark</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.type<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.searchPercentage<span class="token punctuation">"</span></span> <span class="token attr-name">fillheight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">bottom-left-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.searchEstimateLabel<span class="token punctuation">"</span></span> <span class="token attr-name">bottom-right-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.approxItemLabel<span class="token punctuation">"</span></span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pull-left text-left col-sm-4 search-builder-spark-padding<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spark</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.ok()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="dismiss">\n    <button class="btn btn-icon button-dark btn-circular btn-close" ng-click="vm.cancel()"><i class="hpe-icon hpe-close"></i></button>\n</div>\n\n<div class="search-builder-header">\n    <div class="search-builder-header-inline">\n        <div class="search-icon"></div>\n        <h1 class="search-builder-title">Search builder</h1>\n    </div>\n</div>\n\n<div class="search-builder-scroll-container">\n    <modal-inset-panel show-panel="vm.panelService.panelOpen" panel-width="vm.panelService.getPanelWidth()" panel-side="vm.panelService.getPanelSide()"\n        on-dismiss="vm.panelService.onDismiss">\n        <modal-inset-header>\n            <h3 ng-bind="vm.panelService.getPanelHeader()"></h3>\n        </modal-inset-header>\n        <modal-inset-content panel-template="vm.panelService.getPanelTemplate()">\n        </modal-inset-content>\n    </modal-inset-panel>\n\n    <div class="search-builder-scroller" scroll-config="vm.scrollBarConfig" scroll-pane scroll-name="search-builder">\n        <div class="search-builder-body">\n            <search-builder search-query="vm.searchQuery" components="vm.components">\n                <search-group group-id="\'keywords\'" group-title="\'Text Keywords\'" operator="\'or\'" button-text="\'Add text keywords\'" add-field="vm.addKeywordField"></search-group>\n                <search-group group-id="\'locations\'" group-title="\'ANY of the following\'" operator="\'or\'" button-text="\'Add a field\'" add-field="vm.addCustomField"></search-group>\n                <search-group group-id="\'type\'" group-title="\'ALL of the following\'" operator="\'and\'" button-text="\'Add a field\'" add-field="vm.addCustomField"></search-group>\n                <search-group group-id="\'exclusions\'" group-title="\'NONE of the following\'" operator="\'not\'" button-text="\'Add a field\'"\n                    add-field="vm.addCustomField"></search-group>\n            </search-builder>\n        </div>\n    </div>\n</div>\n\n<div class="search-builder-footer">\n    <spark type="vm.type" value="vm.searchPercentage" fillheight="3" bottom-left-label="vm.searchEstimateLabel" bottom-right-label="vm.approxItemLabel"\n        class="pull-left text-left col-sm-4 search-builder-spark-padding"></spark>\n\n    <button type="button" class="btn button-primary m-r-xs" ng-click="vm.ok()">Search</button>\n    <button type="button" class="btn button-secondary" ng-click="vm.cancel()">Cancel</button>\n</div>'}},I1Cu:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'AddFieldPanelCtrl\'</span><span class="token punctuation">,</span> AddFieldPanelCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nAddFieldPanelCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderId\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">AddFieldPanelCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">,</span> searchBuilderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>searchQuery <span class="token operator">=</span> $scope<span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>searchQuery <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store the filter text</span>\n    vm<span class="token punctuation">.</span>filterText <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store all the possible fields</span>\n    vm<span class="token punctuation">.</span>fields <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'author\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Date Range\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'daterange\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'File Name\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'filename\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'File Type\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'filetypes\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Repository\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'repository\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'Text\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> <span class="token string">\'text\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">selectField</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//resolve the deferred object</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">closePanel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            id<span class="token punctuation">:</span> searchBuilderId<span class="token punctuation">.</span><span class="token function">generateComponentId</span><span class="token punctuation">(</span>field<span class="token punctuation">.</span>component<span class="token punctuation">,</span> vm<span class="token punctuation">.</span>searchQuery<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> field<span class="token punctuation">.</span>component\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('AddFieldPanelCtrl', AddFieldPanelCtrl);\n\nAddFieldPanelCtrl.$inject = ['$scope', 'searchBuilderPanel', 'searchBuilderId'];\n\nfunction AddFieldPanelCtrl($scope, searchBuilderPanel, searchBuilderId) {\n    var vm = this;\n\n    vm.searchQuery = $scope.$parent.vm.searchQuery || {};\n\n    //store the filter text\n    vm.filterText = '';\n\n    //store all the possible fields\n    vm.fields = [{\n        name: 'Author',\n        component: 'author'\n    }, {\n        name: 'Custodian',\n        component: 'custodian'\n    }, {\n        name: 'Date Range',\n        component: 'daterange'\n    }, {\n        name: 'File Name',\n        component: 'filename'\n    }, {\n        name: 'File Type',\n        component: 'filetypes'\n    }, {\n        name: 'Repository',\n        component: 'repository'\n    }, {\n        name: 'Text',\n        component: 'text'\n    }];\n\n    vm.selectField = function (field) {\n        //resolve the deferred object\n        searchBuilderPanel.closePanel({\n            id: searchBuilderId.generateComponentId(field.component, vm.searchQuery),\n            component: field.component\n        });\n    };\n}"}},KQk4:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FileTypesComponentCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>File types<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dynamic-select</span> <span class="token attr-name">multiple</span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">source</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.fileTypes<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectOptions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dynamic-select</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon show-panel-btn<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.showPanel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-menu text-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component ng-controller="FileTypesComponentCtrl as vm">\n  <label class="form-label">File types</label>\n  <div class="input-group">\n    <dynamic-select multiple ng-model="model" source="vm.fileTypes" options="vm.selectOptions">\n    </dynamic-select>\n    <span class="input-group-addon show-panel-btn" ng-click="vm.showPanel()"><span class="hpe-icon hpe-menu text-black"></span></span>\n  </div>\n</search-component>\n'}},KoHG:function(n,a){n.exports={snippet:'<span class="token selector">.search-builder-title-icon</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 33px<span class="token punctuation">;</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list</span> <span class="token punctuation">{</span>\n    <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 8px 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 17px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 10px<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name .repository-check</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> opacity 0.2s linear<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name.option-deselected .option-check</span> <span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name.option-deselected:hover .option-check</span> <span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.add-field-list .field-name.option-selected .option-check</span> <span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.show-panel-btn</span> <span class="token punctuation">{</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".search-builder-title-icon {\n    font-size: 33px;\n    margin-right: 15px;\n}\n\n.add-field-list {\n    list-style-type: none;\n    padding: 0;\n    margin: 8px 5px;\n}\n\n.add-field-list .field-name {\n    font-size: 17px;\n    padding: 3px 10px;\n    cursor: pointer;\n}\n\n.add-field-list .field-name:hover {\n    background-color: #f2f2f2;\n}\n\n.add-field-list .field-name .repository-check {\n    margin-right: 10px;\n    transition: opacity 0.2s linear;\n}\n\n.add-field-list .field-name.option-deselected .option-check {\n    opacity: 0;\n}\n\n.add-field-list .field-name.option-deselected:hover .option-check {\n    opacity: 0.5;\n}\n\n.add-field-list .field-name.option-selected .option-check {\n    opacity: 1;\n}\n\n.show-panel-btn {\n    cursor: pointer;\n}"}},M67U:function(n,a){n.exports={snippet:'<span class="token selector">.search-history-container</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 350px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-scrollpane</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history</span> <span class="token punctuation">{</span>\n\t<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n\t<span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 10px 10px 8px 15px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history .search-history-icon</span> <span class="token punctuation">{</span>\n\t<span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> \n\n<span class="token selector">.search-history-container .search-history .search-history-detail</span> <span class="token punctuation">{</span>\n\t<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0px 15px<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history .search-history-detail p</span> <span class="token punctuation">{</span>\n  <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n  <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history .search-history-detail .search-criteria</span> <span class="token punctuation">{</span>\n\t<span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history .search-history-detail .search-criteria span</span> <span class="token punctuation">{</span>\n \t<span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n  <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container .search-history .search-history-detail .search-criteria:last-of-type span</span> <span class="token punctuation">{</span>\n\t<span class="token property">color</span><span class="token punctuation">:</span> #CE6A79<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n  <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container li:last-of-type hr</span> <span class="token punctuation">{</span>\n\t<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container li hr</span> <span class="token punctuation">{</span>\n\t<span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-container li:hover</span> <span class="token punctuation">{</span>\n\t<span class="token property">background-color</span><span class="token punctuation">:</span> #F6F7F8<span class="token punctuation">;</span>\n\t<span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-modal-header</span> <span class="token punctuation">{</span>\n\t<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n\t<span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>\n\t<span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-modal-header-title</span> <span class="token punctuation">{</span>\n\t<span class="token property">margin-top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n\t<span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-modal-content</span> <span class="token punctuation">{</span>\n\t<span class="token property">padding</span><span class="token punctuation">:</span> 0px 20px 10px 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-modal-content .section</span> <span class="token punctuation">{</span>\n\t<span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.search-history-modal-footer</span> <span class="token punctuation">{</span>\n\t<span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n\t<span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".search-history-container {\n  width: 350px;\n  height: 600px;\n  overflow: auto;\n}\n\n.search-history-scrollpane {\n  height: 100%;\n}\n\n.search-history-container .search-history {\n\tdisplay: flex;\n\tflex-direction: row;\n  padding: 10px 10px 8px 15px;\n}\n\n.search-history-container .search-history .search-history-icon {\n\tflex: none;\n  vertical-align: middle;\n  margin-top: 3px;\n} \n\n.search-history-container .search-history .search-history-detail {\n\tflex: 1;\n  padding: 0px 15px;\n  overflow: hidden;\n}\n\n.search-history-container .search-history .search-history-detail p {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 25px;\n  margin-bottom: 3px;\n}\n\n.search-history-container .search-history .search-history-detail .search-criteria {\n\tfont-size: 13px;\n}\n\n.search-history-container .search-history .search-history-detail .search-criteria span {\n \tfont-size: 16px;\n  margin-left: 5px;\n}\n\n.search-history-container .search-history .search-history-detail .search-criteria:last-of-type span {\n\tcolor: #CE6A79;\n  font-size: 16px;\n  margin-left: 5px;\n}\n\n.search-history-container li:last-of-type hr {\n\tdisplay: none;\n}\n\n.search-history-container li hr {\n\tmargin: 0px;\n}\n\n.search-history-container li:hover {\n\tbackground-color: #F6F7F8;\n\tcursor: pointer;\n}\n\n.search-history-modal-header {\n\tdisplay: flex;\n\tbackground-color: #f2f2f2;\n\tpadding: 20px;\n}\n\n.search-history-modal-header-title {\n\tmargin-top: 0px;\n\tcolor: black;\n}\n\n.search-history-modal-content {\n\tpadding: 0px 20px 10px 20px;\n}\n\n.search-history-modal-content .section {\n\tmargin-top: 20px;\n}\n\n.search-history-modal-footer {\n\tpadding: 20px;\n\ttext-align: right;\n}"}},M8Fy:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter text<span class="token punctuation">"</span></span> <span class="token attr-name">expanding-textarea</span> <span class="token attr-name">disable-return</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">max-visible-lines</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component>\n    <label class="form-label">Text</label>\n    <textarea class="form-control" rows="1" placeholder="Enter text" expanding-textarea disable-return="true" max-visible-lines="2" ng-model="model" force-focus></textarea>\n</search-component>\n'}},MDq8:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder</span> <span class="token attr-name">[(query)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">[components]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder</span><span class="token punctuation">></span></span>',example:'<ux-search-builder [(query)]="query" [components]="components"></ux-search-builder>'}},NjGb:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'RepositoryPanelCtrl\'</span><span class="token punctuation">,</span> RepositoryPanelCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nRepositoryPanelCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">RepositoryPanelCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store the filter text</span>\n    vm<span class="token punctuation">.</span>filterText <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store all the possible fields</span>\n    vm<span class="token punctuation">.</span>repositories <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">selectRepository</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>repository<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        repository<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">!</span>repository<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//when the panel is dismissed resolve the deferred object</span>\n    searchBuilderPanel<span class="token punctuation">.</span><span class="token function">onDismiss</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> selectedRepositories <span class="token operator">=</span> vm<span class="token punctuation">.</span>repositories<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>repo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> repo<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//we only want to return repository names</span>\n        <span class="token keyword">var</span> repositoryNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        selectedRepositories<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>repo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            repositoryNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>repo<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>repositoryNames<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//check any items already selected in the search component</span>\n    <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> data <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> repositories <span class="token operator">=</span> data<span class="token punctuation">.</span>repositories<span class="token punctuation">;</span>\n\n        repositories<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>repository<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>repositories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token punctuation">:</span> repository<span class="token punctuation">,</span>\n                checked<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//if there are no selected repositories then stop here</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n        data<span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>repositories<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>repository<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//if it is a match set the checked value to true</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>repository<span class="token punctuation">.</span>name <span class="token operator">===</span> selected<span class="token punctuation">)</span> repository<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('RepositoryPanelCtrl', RepositoryPanelCtrl);\n\nRepositoryPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\n\nfunction RepositoryPanelCtrl($scope, searchBuilderPanel) {\n    var vm = this;\n\n    //store the filter text\n    vm.filterText = '';\n\n    //store all the possible fields\n    vm.repositories = [];\n\n    vm.selectRepository = function (repository) {\n        repository.checked = !repository.checked;\n    };\n\n    //when the panel is dismissed resolve the deferred object\n    searchBuilderPanel.onDismiss(function (deferred) {\n        var selectedRepositories = vm.repositories.filter(function (repo) {\n            return repo.checked;\n        });\n\n        //we only want to return repository names\n        var repositoryNames = [];\n\n        selectedRepositories.forEach(function (repo) {\n            repositoryNames.push(repo.name);\n        });\n\n        if (deferred) deferred.resolve(repositoryNames);\n    });\n\n    //check any items already selected in the search component\n    prepareItems();\n\n    function prepareItems() {\n        var data = searchBuilderPanel.getData();\n\n        var repositories = data.repositories;\n\n        repositories.forEach(function (repository) {\n            vm.repositories.push({\n                name: repository,\n                checked: false\n            });\n        });\n\n        //if there are no selected repositories then stop here\n        if (!data.selected) return;\n\n        data.selected.forEach(function (selected) {\n            vm.repositories.forEach(function (repository) {\n                //if it is a match set the checked value to true\n                if (repository.name === selected) repository.checked = true;\n            });\n        });\n    }\n}"}},OeT4:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> OnInit<span class="token punctuation">,</span> ViewChild<span class="token punctuation">,</span> ElementRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    expanded<span class="token punctuation">:</span> boolean<span class="token punctuation">;</span>\n    searchText<span class="token punctuation">:</span> string<span class="token punctuation">;</span>\n    searchedFor<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'searchFieldRight\'</span><span class="token punctuation">)</span>\n    searchFieldRight<span class="token punctuation">:</span> ElementRef<span class="token punctuation">;</span>\n\n    <span class="token function">onSearch</span><span class="token punctuation">(</span>searchText<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Execute search here</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchedFor <span class="token operator">=</span> searchText<span class="token punctuation">;</span>\n\n        <span class="token comment">// Close the search field if needed</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>expanded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onSearchRight</span><span class="token punctuation">(</span>searchText<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Execute search here</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchedFor <span class="token operator">=</span> searchText<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>searchFieldRight<span class="token punctuation">.</span>nativeElement<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    expanded: boolean;\n    searchText: string;\n    searchedFor: string = '';\n\n    @ViewChild('searchFieldRight')\n    searchFieldRight: ElementRef;\n\n    onSearch(searchText: string) {\n        // Execute search here\n        this.searchedFor = searchText;\n\n        // Close the search field if needed\n        this.expanded = false;\n    }\n\n    onSearchRight(searchText: string) {\n        // Execute search here\n        this.searchedFor = searchText;\n        this.searchFieldRight.nativeElement.blur();\n    }\n}"}},PhWE:function(n,a){n.exports={snippet:'<span class="token selector">.demo-toolbar</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #cccccc<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 4px 8px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.demo-toolbar > *</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 1 0 auto<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.demo-toolbar-right</span> <span class="token punctuation">{</span>\n    <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:".demo-toolbar {\n    display: flex;\n    width: 100%;\n    border: 1px solid #cccccc;\n    padding: 4px 8px;\n}\n\n.demo-toolbar > * {\n    flex: 1 0 auto;\n    position: relative;\n    display: flex;\n    align-items: center;\n}\n\n.demo-toolbar-right {\n    justify-content: flex-end;\n}\n"}},RBTV:function(n,a,s){var t={"./controller.js":"ovum","./layout.html":"ExRS"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="RBTV"},RN7n:function(n,a){n.exports={snippet:'vm<span class="token punctuation">.</span>components <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'authorComponent.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'custodianComponent.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'}},RqwO:function(n,a){n.exports={snippet:'<span class="token punctuation">{</span>\n    <span class="token string">"keywords"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">"keyword-0"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span>\n            <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token string">"Austin"</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"keyword-1"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span>\n            <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token string">"Dallas"</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">"locations"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">"repository-0"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"repository"</span><span class="token punctuation">,</span>\n            <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token string">"Email"</span><span class="token punctuation">,</span>\n                <span class="token string">"Archives"</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">"daterange-0"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"daterange"</span><span class="token punctuation">,</span>\n            <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token string">"from"</span><span class="token punctuation">:</span> <span class="token string">"2016-03-02T00:00:00.000Z"</span><span class="token punctuation">,</span>\n                <span class="token string">"to"</span><span class="token punctuation">:</span> <span class="token string">"2016-03-22T00:00:00.000Z"</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">"filetypes-0"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"filetypes"</span><span class="token punctuation">,</span>\n            <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token string">"DOC"</span><span class="token punctuation">,</span>\n                <span class="token string">"PDF"</span><span class="token punctuation">,</span>\n                <span class="token string">"PPT"</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'}},V6WI:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Author<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter Author<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component>\n    <label class="form-label">Author</label>\n    <input placeholder="Enter Author" class="form-control" ng-model="model" force-focus />\n</search-component>\n'}},VmVP:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-builder</span> <span class="token attr-name">search-query</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.searchQuery<span class="token punctuation">"</span></span> <span class="token attr-name">components</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.components<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Text Keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>or<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n    <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add text keywords<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addKeywordField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>locations<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>ANY of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>or<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n    <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>type<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>ALL of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>and<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n    <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-group</span> <span class="token attr-name">group-id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>exclusions<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">group-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>NONE of the following<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>not<span class="token punctuation">\'</span><span class="token punctuation">"</span></span>\n    <span class="token attr-name">button-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>Add a field<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">add-field</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.addCustomField<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-group</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-builder</span><span class="token punctuation">></span></span>'}},Vpsy:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>value<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>',example:'<input class="form-control" type="number" [(ngModel)]="value" />'}},XlPE:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.openModal()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-deployment<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>Launch Search Builder Modal\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',example:'<button type="button" class="btn button-primary" ng-click="vm.openModal()">\n  <span class="hpe-icon hpe-deployment" aria-hidden="true"></span>&nbsp;Launch Search Builder Modal\n</button>'}},Xv84:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nsearchBuilderPanel<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$q\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">searchBuilderPanel</span><span class="token punctuation">(</span>$q<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store basic panel properties</span>\n    vm<span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>panelWidth <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>panelSide <span class="token operator">=</span> <span class="token string">\'right\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store content properties</span>\n    vm<span class="token punctuation">.</span>panelHeader <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>panelTemplate <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store a deferred object to allow returning of values</span>\n    vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//allow the storing of some data while the panel is open</span>\n    vm<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// allow custom on dismiss event</span>\n    vm<span class="token punctuation">.</span>dismissEventHandlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//action functions</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">openPanel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> $q<span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//store any new data - replace any exisiting data</span>\n        vm<span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>\n\n        <span class="token comment">//reset dismiss event handlers</span>\n        vm<span class="token punctuation">.</span>dismissEventHandlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//show panel</span>\n        vm<span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span>promise<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">closePanel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//if deferred is not null then either resolve or reject deferred</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>deferred <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">else</span> vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//we no longer need the deferred object - it has been resolved or rejected</span>\n        vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//hide the panel</span>\n        vm<span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//remove any template so everything is reinstantiated correctly</span>\n        vm<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">onDismiss</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>eventHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//if an argument was passed then we can assume that this is subscribing to the dismiss event</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>eventHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>dismissEventHandlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>eventHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//allow a handler to resolve deferred</span>\n        <span class="token keyword">var</span> resolved <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//otherwise call all event handlers and pass them the deferred object in case they want to resolve it</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>dismissEventHandlers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> handler <span class="token operator">=</span> vm<span class="token punctuation">.</span>dismissEventHandlers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//call function with deferred</span>\n            <span class="token keyword">var</span> didResolved <span class="token operator">=</span> <span class="token function">handler</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>deferred<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>didResolved <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> resolved <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//if deferred has not yet been resolved then reject</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>resolved <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>deferred<span class="token punctuation">)</span> vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//remove any template so everything is reinstantiated correctly</span>\n        vm<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//setters</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">setPanelHeader</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>header<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>panelHeader <span class="token operator">=</span> header<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">setPanelTemplate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>panelTemplate <span class="token operator">=</span> template<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">setData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//getters</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getPanelWidth</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>panelWidth<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getPanelSide</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>panelSide<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getPanelHeader</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>panelHeader<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getPanelTemplate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>panelTemplate<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> vm<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').service('searchBuilderPanel', searchBuilderPanel);\n\nsearchBuilderPanel.$inject = ['$q'];\n\nfunction searchBuilderPanel($q) {\n    var vm = this;\n\n    //store basic panel properties\n    vm.panelOpen = false;\n    vm.panelWidth = 400;\n    vm.panelSide = 'right';\n\n    //store content properties\n    vm.panelHeader = '';\n    vm.panelTemplate = '';\n\n    //store a deferred object to allow returning of values\n    vm.deferred = null;\n\n    //allow the storing of some data while the panel is open\n    vm.data = null;\n\n    // allow custom on dismiss event\n    vm.dismissEventHandlers = [];\n\n    //action functions\n    vm.openPanel = function (data) {\n        vm.deferred = $q.defer();\n\n        //store any new data - replace any exisiting data\n        vm.data = data;\n\n        //reset dismiss event handlers\n        vm.dismissEventHandlers = [];\n\n        //show panel\n        vm.panelOpen = true;\n\n        return vm.deferred.promise;\n    };\n\n    vm.closePanel = function (result) {\n        //if deferred is not null then either resolve or reject deferred\n        if (vm.deferred !== null) {\n            if (result) vm.deferred.resolve(result);\n            else vm.deferred.reject();\n        }\n\n        //we no longer need the deferred object - it has been resolved or rejected\n        vm.deferred = null;\n\n        //hide the panel\n        vm.panelOpen = false;\n\n        //remove any template so everything is reinstantiated correctly\n        vm.setPanelHeader('');\n        vm.setPanelTemplate('');\n    };\n\n    vm.onDismiss = function (eventHandler) {\n\n        //if an argument was passed then we can assume that this is subscribing to the dismiss event\n        if (eventHandler) {\n            vm.dismissEventHandlers.push(eventHandler);\n            return;\n        }\n\n        //allow a handler to resolve deferred\n        var resolved = false;\n\n        //otherwise call all event handlers and pass them the deferred object in case they want to resolve it\n        for (var i = 0; i < vm.dismissEventHandlers.length; i++) {\n            var handler = vm.dismissEventHandlers[i];\n\n            //call function with deferred\n            var didResolved = handler(vm.deferred);\n\n            if (didResolved === true) resolved = true;\n        }\n\n        //if deferred has not yet been resolved then reject\n        if (resolved === false && vm.deferred) vm.deferred.reject();\n\n        //remove any template so everything is reinstantiated correctly\n        vm.setPanelHeader('');\n        vm.setPanelTemplate('');\n    };\n\n    //setters\n    vm.setPanelHeader = function (header) {\n        vm.panelHeader = header;\n    };\n\n    vm.setPanelTemplate = function (template) {\n        vm.panelTemplate = template;\n    };\n\n    vm.setData = function (data) {\n        vm.data = data;\n    };\n\n    //getters\n    vm.getPanelWidth = function () {\n        return vm.panelWidth;\n    };\n\n    vm.getPanelSide = function () {\n        return vm.panelSide;\n    };\n\n    vm.getPanelHeader = function () {\n        return vm.panelHeader;\n    };\n\n    vm.getPanelTemplate = function () {\n        return vm.panelTemplate;\n    };\n\n    vm.getData = function () {\n        return vm.data;\n    };\n\n    return vm;\n}"}},YhdK:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-sm<span class="token punctuation">"</span></span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FileTypesPanelCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Find a file type<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>add-field-list<span class="token punctuation">"</span></span> <span class="token attr-name">list-item-filter</span> <span class="token attr-name">filter-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.filterText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-name<span class="token punctuation">"</span></span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileType in vm.fileTypes<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{{ fileType.name }}<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.selectFileType(fileType)<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ <span class="token punctuation">\'</span>option-deselected<span class="token punctuation">\'</span>: !fileType.checked, <span class="token punctuation">\'</span>option-selected<span class="token punctuation">\'</span>: fileType.checked }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-checkmark text-accent option-check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> {{ fileType.name }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',example:'<div class="m-sm" ng-controller="FileTypesPanelCtrl as vm">\n  <input type="text" placeholder="Find a file type" class="form-control" ng-model="vm.filterText" force-focus>\n  <ul class="add-field-list" list-item-filter filter-text="vm.filterText">\n    <li class="field-name" ng-repeat="fileType in vm.fileTypes" key="{{ fileType.name }}" ng-click="vm.selectFileType(fileType)" ng-class="{ \'option-deselected\': !fileType.checked, \'option-selected\': fileType.checked }">\n      <span class="hpe-icon hpe-checkmark text-accent option-check"></span> {{ fileType.name }}\n    </li>\n  </ul>\n</div>\n'}},ZLTU:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'RepositoryComponentCtrl\'</span><span class="token punctuation">,</span> RepositoryComponentCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nRepositoryComponentCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">RepositoryComponentCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//use this to allow the side panel to select options</span>\n    vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>selectOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        placeholder<span class="token punctuation">:</span> <span class="token string">\'Select Repositories\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>repositories <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">"Filesystem"</span><span class="token punctuation">,</span>\n        <span class="token string">"Records Manager"</span><span class="token punctuation">,</span>\n        <span class="token string">"Email"</span><span class="token punctuation">,</span>\n        <span class="token string">"Legacy Email"</span><span class="token punctuation">,</span>\n        <span class="token string">"Archives"</span><span class="token punctuation">,</span>\n        <span class="token string">"Legacy Archives"</span><span class="token punctuation">,</span>\n        <span class="token string">"Miscellaneous"</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">showPanel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'Select Repositories\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'repositoryPanel.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//pass in any currently selected repositories</span>\n        vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">openPanel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            repositories<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>repositories<span class="token punctuation">,</span>\n            selected<span class="token punctuation">:</span> $scope<span class="token punctuation">.</span>model\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//wait for an update on selected repositories</span>\n        vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selectedRepositories<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $scope<span class="token punctuation">.</span>model <span class="token operator">=</span> selectedRepositories<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('RepositoryComponentCtrl', RepositoryComponentCtrl);\n\nRepositoryComponentCtrl.$inject = ['$scope', 'searchBuilderPanel'];\n\nfunction RepositoryComponentCtrl($scope, searchBuilderPanel) {\n\n    var vm = this;\n\n    //use this to allow the side panel to select options\n    vm.deferred = null;\n\n    vm.selectOptions = {\n        placeholder: 'Select Repositories'\n    };\n\n    vm.repositories = [\n        \"Filesystem\",\n        \"Records Manager\",\n        \"Email\",\n        \"Legacy Email\",\n        \"Archives\",\n        \"Legacy Archives\",\n        \"Miscellaneous\"\n    ];\n\n    vm.showPanel = function () {\n        searchBuilderPanel.setPanelHeader('Select Repositories');\n        searchBuilderPanel.setPanelTemplate('repositoryPanel.html');\n\n        //pass in any currently selected repositories\n        vm.deferred = searchBuilderPanel.openPanel({\n            repositories: vm.repositories,\n            selected: $scope.model\n        });\n\n        //wait for an update on selected repositories\n        vm.deferred.then(function (selectedRepositories) {\n            $scope.model = selectedRepositories;\n        });\n    };\n}"}},Zy1L:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modalOpen = true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-deployment m-r-xs<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    Launch Search Builder Modal\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Search Query<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>{{ preview }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- Search Builder modal definition --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modalOpen<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal<span class="token punctuation">"</span></span> <span class="token attr-name">tabindex</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span>\n    <span class="token attr-name">aria-modal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">aria-labelledby</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span>\n    <span class="token attr-name">bsModal</span> <span class="token attr-name">#modal</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bs-modal<span class="token punctuation">"</span></span> <span class="token attr-name">[config]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ show: true, animated: false, focus: false }<span class="token punctuation">"</span></span>\n    <span class="token attr-name">(onShown)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modalShown()<span class="token punctuation">"</span></span> <span class="token attr-name">(onHidden)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>document<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-dialog modal-lg search-builder-modal<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[cdkTrapFocus]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modalOpen<span class="token punctuation">"</span></span>\n        <span class="token attr-name">[cdkTrapFocusAutoCapture]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modal-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Close button --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-dismiss<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-icon button-dark btn-circular btn-close<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Close search builder modal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Modal header --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Search builder<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">#searchBuilderContent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token comment">&lt;!-- Search Builder --\x3e</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder</span> <span class="token attr-name">[(query)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span> <span class="token attr-name">[components]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>components<span class="token punctuation">"</span></span> <span class="token attr-name">(valid)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>valid = $event<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Text Keywords<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">addText</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Add a keyword<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addKeyword()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>any<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ANY of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>or<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>any<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>placeholders.any<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ALL of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>all<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>placeholders.all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-search-builder-group</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NONE of the following<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">operator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>not<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(add)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addField(<span class="token punctuation">\'</span>none<span class="token punctuation">\'</span>, $event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[showPlaceholder]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>placeholders.none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder-group</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-search-builder</span><span class="token punctuation">></span></span>\n\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Search/Cancel buttons --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-primary<span class="token punctuation">"</span></span> <span class="token attr-name">[disabled]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!valid<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>save()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    Search\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cancel()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n            <span class="token comment">&lt;!-- Side panel (used to select field type) --\x3e</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-item-display-panel</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-builder-panel<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[class.search-builder-panel-open]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[animate]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[inline]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n                <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Add Field<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(visible)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(visibleChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onPanelEvent($event)<span class="token punctuation">"</span></span>\n                <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400px<span class="token punctuation">"</span></span>\n                <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Field Type Panel<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Select a field type to add it to the search builder.<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">uxItemDisplayPanelContent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-list-panel<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">(keydown.esc)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen = false; $event.stopPropagation()<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[cdkTrapFocus]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                    <span class="token attr-name">[cdkTrapFocusAutoCapture]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token comment">&lt;!-- Field type filter field --\x3e</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Filter the field type list.<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Find a field<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[ngModel]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filter$ | async<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(ngModelChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>filter$.next($event)<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">[focusIf]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                    <span class="token comment">&lt;!-- List of field types --\x3e</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select-list</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>panelOpen<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Field type list<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">aria-description</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Select a field type to add it to the search builder.<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field-list<span class="token punctuation">"</span></span>\n                        <span class="token attr-name">(selectedChange)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectField($event[0])<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-select-list-item</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>let field of filteredFields<span class="token punctuation">"</span></span> <span class="token attr-name">[data]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>field<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            {{field.title}}\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select-list-item</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-select-list</span><span class="token punctuation">></span></span>\n\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-item-display-panel</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<button type="button" class="btn button-primary" (click)="modalOpen = true">\n    <span class="hpe-icon hpe-deployment m-r-xs" aria-hidden="true"></span>\n    Launch Search Builder Modal\n</button>\n\n<h4>Search Query</h4>\n\n<pre>{{ preview }}</pre>\n\n\x3c!-- Search Builder modal definition --\x3e\n<div *ngIf="modalOpen" class="modal" tabindex="-1" role="dialog"\n    aria-modal="true" aria-labelledby="search-builder-title"\n    bsModal #modal="bs-modal" [config]="{ show: true, animated: false, focus: false }"\n    (onShown)="modalShown()" (onHidden)="cancel()">\n\n    <div role="document" class="modal-dialog modal-lg search-builder-modal"\n        [cdkTrapFocus]="modalOpen"\n        [cdkTrapFocusAutoCapture]="true">\n\n        <div class="modal-content">\n\n            \x3c!-- Close button --\x3e\n            <div class="search-builder-dismiss" (click)="cancel()">\n                <button type="button" class="btn btn-icon button-dark btn-circular btn-close"\n                    aria-label="Close search builder modal">\n                    <i class="hpe-icon hpe-close"></i>\n                </button>\n            </div>\n\n            \x3c!-- Modal header --\x3e\n            <div class="search-builder-header">\n                <div class="search-builder-icon"></div>\n                <h1 id="search-builder-title" class="search-builder-title">Search builder</h1>\n            </div>\n\n            <div #searchBuilderContent class="search-builder-body">\n\n                \x3c!-- Search Builder --\x3e\n                <ux-search-builder [(query)]="query" [components]="components" (valid)="valid = $event">\n\n                    <ux-search-builder-group id="keywords"\n                        header="Text Keywords"\n                        addText="Add a keyword"\n                        (add)="addKeyword()">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="any"\n                        header="ANY of the following"\n                        operator="or"\n                        (add)="addField(\'any\', $event)"\n                        [showPlaceholder]="placeholders.any">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="all"\n                        header="ALL of the following"\n                        (add)="addField(\'all\', $event)"\n                        [showPlaceholder]="placeholders.all">\n                    </ux-search-builder-group>\n\n                    <ux-search-builder-group id="none"\n                        header="NONE of the following"\n                        operator="not"\n                        (add)="addField(\'none\', $event)"\n                        [showPlaceholder]="placeholders.none">\n                    </ux-search-builder-group>\n\n                </ux-search-builder>\n\n            </div>\n\n            \x3c!-- Search/Cancel buttons --\x3e\n            <div class="search-builder-footer">\n                <button type="button" class="btn button-primary" [disabled]="!valid" (click)="save()">\n                    Search\n                </button>\n                <button type="button" class="btn button-secondary" (click)="cancel()">Cancel</button>\n            </div>\n\n            \x3c!-- Side panel (used to select field type) --\x3e\n            <ux-item-display-panel class="search-builder-panel"\n                [class.search-builder-panel-open]="panelOpen"\n                [animate]="true"\n                [inline]="true"\n                header="Add Field"\n                [(visible)]="panelOpen"\n                (visibleChange)="onPanelEvent($event)"\n                width="400px"\n                role="dialog"\n                aria-label="Field Type Panel"\n                aria-description="Select a field type to add it to the search builder.">\n\n                <div uxItemDisplayPanelContent class="field-list-panel"\n                    (keydown.esc)="panelOpen = false; $event.stopPropagation()"\n                    [cdkTrapFocus]="panelOpen"\n                    [cdkTrapFocusAutoCapture]="true">\n\n                    \x3c!-- Field type filter field --\x3e\n                    <input type="text"\n                        aria-description="Filter the field type list."\n                        placeholder="Find a field"\n                        class="form-control"\n                        [ngModel]="filter$ | async"\n                        (ngModelChange)="filter$.next($event)"\n                        [focusIf]="panelOpen">\n\n                    \x3c!-- List of field types --\x3e\n                    <ux-select-list *ngIf="panelOpen"\n                        aria-label="Field type list"\n                        aria-description="Select a field type to add it to the search builder."\n                        class="field-list"\n                        (selectedChange)="selectField($event[0])">\n                        <ux-select-list-item *ngFor="let field of filteredFields" [data]="field">\n                            {{field.title}}\n                        </ux-select-list-item>\n                    </ux-select-list>\n\n                </div>\n            </ux-item-display-panel>\n        </div>\n    </div>\n</div>'}},a6bD:function(n,a){n.exports={snippet:'<span class="token selector">.search-builder-panel</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  \n  <span class="token selector">.search-builder-panel-open</span> <span class="token punctuation">{</span>\n    <span class="token property">pointer-events</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel</span> <span class="token punctuation">{</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e5e5e5<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list</span> <span class="token punctuation">{</span>\n    <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 8px 5px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list .field-list-item</span> <span class="token punctuation">{</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 17px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 10px<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector">.field-list-panel .field-list .field-list-item:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  ',example:".search-builder-panel {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    right: 0;\n    pointer-events: none;\n  }\n  \n  .search-builder-panel-open {\n    pointer-events: all;\n  }\n\n  .field-list-panel {\n    border-top: 1px solid #e5e5e5;\n    padding: 10px;\n  }\n\n  .field-list-panel .field-list {\n    list-style-type: none;\n    padding: 0;\n    margin: 8px 5px;\n  }\n\n  .field-list-panel .field-list .field-list-item {\n    font-size: 17px;\n    padding: 3px 10px;\n    cursor: pointer;\n  }\n\n  .field-list-panel .field-list .field-list-item:hover {\n    background-color: #f2f2f2;\n  }\n  "}},cl18:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-group<span class="token punctuation">"</span></span> <span class="token attr-name">dropdown</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.openModal()<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>NEW SEARCH<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn button-secondary dropdown-toggle<span class="token punctuation">"</span></span> <span class="token attr-name">dropdown-toggle</span> <span class="token attr-name">aria-haspopup</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>\n        <span class="token attr-name">aria-expanded</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.getHistory()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-history<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropdown-menu search-history-container<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-scrollpane<span class="token punctuation">"</span></span> <span class="token attr-name">scroll-config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.scrollConfig<span class="token punctuation">"</span></span>\n            <span class="token attr-name">scroll-pane</span> <span class="token attr-name">scroll-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchHistoryScroller<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search in vm.searches track by $index<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-item<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.search(search)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-lg search-history-icon text-primary<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.icon<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-history-detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-criteria<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.any<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ANY OF <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.any<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-criteria<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ALL OF <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-criteria<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.exclude<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>NONE OF <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search.exclude<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="btn-group" dropdown>\n    <button type="button" class="btn button-secondary" ng-click="vm.openModal()" disabled>NEW SEARCH</button>\n    <button type="button" class="btn button-secondary dropdown-toggle" dropdown-toggle aria-haspopup="true"\n        aria-expanded="false" ng-click="vm.getHistory()">\n        <span class="hpe-icon hpe-history" aria-hidden="true"></span>\n    </button>\n    <ul class="dropdown-menu search-history-container" role="menu">\n        <div class="search-history-scrollpane" scroll-config="vm.scrollConfig"\n            scroll-pane scroll-name="searchHistoryScroller">\n            <li ng-repeat="search in vm.searches track by $index" class="search-history-item" ng-click="vm.search(search)">\n                <div class="search-history">\n                    <i class="hpe-icon hpe-lg search-history-icon text-primary" ng-class="search.icon" aria-hidden="true"></i>\n                    <div class="search-history-detail">\n                        <p ng-bind="search.text"></p>\n                        <p class="search-criteria" ng-if="search.any">ANY OF <span ng-bind="search.any"></span></p>\n                        <p class="search-criteria" ng-if="search.all">ALL OF <span ng-bind="search.all"></span></p>\n                        <p class="search-criteria" ng-if="search.exclude">NONE OF <span ng-bind="search.exclude"></span></p>\n                    </div>\n                </div>\n                <hr>\n            </li>\n        </div>\n    </ul>\n</div>'}},"dS+D":function(n,a){n.exports={snippet:'<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PageComponent</span> <span class="token punctuation">{</span>\n    components<span class="token punctuation">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> MyNumberSearchComponent\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    query<span class="token punctuation">:</span> SearchBuilderQuery <span class="token operator">=</span> <span class="token punctuation">{</span>\n        numbers<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token number">0</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'number\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token number">22</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"export class PageComponent {\n    components: SearchBuilderComponentDefinition[] = [\n        {\n            name: 'number',\n            component: MyNumberSearchComponent\n        }\n    ];\n\n    query: SearchBuilderQuery = {\n        numbers: [\n            {\n                type: 'number',\n                value: 0\n            },\n            {\n                type: 'number',\n                value: 22\n            }\n        ]\n    };\n}"}},dUKW:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'DateRangeComponentCtrl\'</span><span class="token punctuation">,</span> DateRangeComponentCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">DateRangeComponentCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>model <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token keyword">from</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        to<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>fromOpened <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>toOpened <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">fromOpen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>fromOpened <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">toOpen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>toOpened <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('DateRangeComponentCtrl', DateRangeComponentCtrl);\n\nfunction DateRangeComponentCtrl() {\n    var vm = this;\n\n    vm.model = {\n        from: {},\n        to: {}\n    };\n\n    vm.fromOpened = false;\n    vm.toOpened = false;\n\n    vm.fromOpen = function (event) {\n        vm.fromOpened = true;\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    vm.toOpen = function (event) {\n        vm.toOpened = true;\n        event.preventDefault();\n        event.stopPropagation();\n    };\n}"}},eost:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>DateRangeComponentCtrl as vm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Date range<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- From Date Picker --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group p-r-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label control-label p-r-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>From<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group date m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.fromOpen($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.model.from<span class="token punctuation">"</span></span> <span class="token attr-name">date-time-picker-popup</span> <span class="token attr-name">choose-time</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">choose-timezone</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>\n              <span class="token attr-name">choose-date</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>From date<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.fromOpen($event)<span class="token punctuation">"</span></span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>dd-MM-yyyy<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">is-open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.fromOpened<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n        <span class="token comment">&lt;!-- To Date Picker --\x3e</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label control-label p-r-xs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>To<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group date m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.toOpen($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.model.to<span class="token punctuation">"</span></span> <span class="token attr-name">date-time-picker-popup</span> <span class="token attr-name">choose-time</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">choose-timezone</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>\n              <span class="token attr-name">choose-date</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>From date<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.toOpen($event)<span class="token punctuation">"</span></span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>dd-MM-yyyy<span class="token punctuation">\'</span><span class="token punctuation">"</span></span> <span class="token attr-name">is-open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.toOpened<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>',example:'<search-component ng-controller="DateRangeComponentCtrl as vm">\n  <label class="form-label">Date range</label>\n\n  <div class="row">\n\n    <div class="col-sm-12">\n\n      <div class="form-inline">\n\n        \x3c!-- From Date Picker --\x3e\n        <div class="form-group p-r-md">\n          <label class="form-label control-label p-r-xs">From</label>\n          <div class="input-group date m-nil">\n            <span class="input-group-addon" ng-click="vm.fromOpen($event)">\n            <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\n          </span>\n            <input type="text" class="form-control" ng-model="vm.model.from" date-time-picker-popup choose-time="false" choose-timezone="false"\n              choose-date="true" aria-label="From date" ng-click="vm.fromOpen($event)" date-format="\'dd-MM-yyyy\'" is-open="vm.fromOpened">\n          </div>\n        </div>\n\n        \x3c!-- To Date Picker --\x3e\n        <div class="form-group">\n          <label class="form-label control-label p-r-xs">To</label>\n          <div class="input-group date m-nil">\n            <span class="input-group-addon" ng-click="vm.toOpen($event)">\n            <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\n          </span>\n            <input type="text" class="form-control" ng-model="vm.model.to" date-time-picker-popup choose-time="false" choose-timezone="false"\n              choose-date="true" aria-label="From date" ng-click="vm.toOpen($event)" date-format="\'dd-MM-yyyy\'" is-open="vm.toOpened">\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n</search-component>'}},fWV6:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"SearchBuilderDemoModalCtrl"</span><span class="token punctuation">,</span> SearchBuilderDemoModalCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nSearchBuilderDemoModalCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$modalInstance\'</span><span class="token punctuation">,</span> <span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderId\'</span><span class="token punctuation">,</span> <span class="token string">\'searchQuery\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">SearchBuilderDemoModalCtrl</span><span class="token punctuation">(</span>$modalInstance<span class="token punctuation">,</span> $scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">,</span> searchBuilderId<span class="token punctuation">,</span> searchQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//show previous search query where possible</span>\n    vm<span class="token punctuation">.</span>searchQuery <span class="token operator">=</span> searchQuery <span class="token operator">?</span> searchQuery <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// scrollbar conguration</span>\n    vm<span class="token punctuation">.</span>scrollBarConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n        resizeSensor<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        enableKeyboardNavigation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        contentUpdateSensor<span class="token punctuation">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//use a service to store these values - make them more accessible by all modal contents</span>\n    vm<span class="token punctuation">.</span>panelService <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">;</span>\n\n    <span class="token comment">// modal data</span>\n    vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">\'spark-primary\'</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>searchEstimateLabel <span class="token operator">=</span> <span class="token string">"&lt;span class=\'spark-label hidden-xxxs\'>&lt;span class=\'medium light\'>MATCHING ITEMS&lt;/span>&lt;/span>"</span><span class="token punctuation">;</span>\n    <span class="token function">updateApproxLabel</span><span class="token punctuation">(</span><span class="token string">\'Unavailable\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//must provide information on all possible components</span>\n    vm<span class="token punctuation">.</span>components <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'authorComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'custodianComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'daterange\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'dateRangeComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'keywordComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'filename\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'fileNameComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'filetypes\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'fileTypesComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'repository\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'repositoryComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'textComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'custodians\'</span><span class="token punctuation">,</span>\n        templateUrl<span class="token punctuation">:</span> <span class="token string">\'custodianComponent.html\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// modal properties</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">ok</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        $modalInstance<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searchQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        $modalInstance<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token string">"cancel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//ensure we dismiss any open panel if the modal is closing</span>\n    $scope<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">\'modal.closing\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">closePanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//adding a simple field that will be the same component everytime</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">addKeywordField</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            id<span class="token punctuation">:</span> searchBuilderId<span class="token punctuation">.</span><span class="token function">generateComponentId</span><span class="token punctuation">(</span><span class="token string">\'keyword\'</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span>searchQuery<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> <span class="token string">\'keyword\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//adding a field that may be a different component everytime</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">addCustomField</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//set the appropriate panel content</span>\n        vm<span class="token punctuation">.</span>panelService<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'Add Field\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span>panelService<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'addFieldPanel.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//the open panel function returns a deferred object which will be resolved or rejected accordingly</span>\n        <span class="token keyword">return</span> vm<span class="token punctuation">.</span>panelService<span class="token punctuation">.</span><span class="token function">openPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//this emulates the number of search results - and fakes approximate number of matching documents</span>\n    $scope<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">\'vm.searchQuery\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>nv<span class="token punctuation">,</span> ov<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>angular<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nv<span class="token punctuation">,</span> ov<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> complexity <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">calculateComplexity</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searchQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>complexity <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                <span class="token function">updateApproxLabel</span><span class="token punctuation">(</span><span class="token string">\'Unavailable\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token punctuation">(</span>complexity <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//set the color of the spark chart based on the search percentage</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">></span> <span class="token number">70</span><span class="token punctuation">)</span> vm<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">\'spark-critical\'</span><span class="token punctuation">;</span>\n            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">></span> <span class="token number">50</span><span class="token punctuation">)</span> vm<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">\'spark-warning\'</span><span class="token punctuation">;</span>\n            <span class="token keyword">else</span> vm<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">\'spark-ok\'</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//update the label to the correct number of items</span>\n            <span class="token function">updateApproxLabel</span><span class="token punctuation">(</span><span class="token string">\'Approx \'</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>searchPercentage <span class="token operator">+</span> <span class="token string">\'k items\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// this function returns dummy data for the number of search results based on search complexity</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">calculateComplexity</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">\'value\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> node<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'string\'</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span>\n                    <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>node<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> node<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span>\n                count <span class="token operator">+=</span> vm<span class="token punctuation">.</span><span class="token function">calculateComplexity</span><span class="token punctuation">(</span>node<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> count<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">updateApproxLabel</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>approxItemLabel <span class="token operator">=</span> <span class="token string">"&lt;span class=\'spark-label hidden-xxxs\'>&lt;span class=\'medium light\'>"</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">"&lt;/span>&lt;/span>"</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"angular.module(\"app\").controller(\"SearchBuilderDemoModalCtrl\", SearchBuilderDemoModalCtrl);\n\nSearchBuilderDemoModalCtrl.$inject = ['$modalInstance', '$scope', 'searchBuilderPanel', 'searchBuilderId', 'searchQuery'];\n\nfunction SearchBuilderDemoModalCtrl($modalInstance, $scope, searchBuilderPanel, searchBuilderId, searchQuery) {\n    var vm = this;\n\n    //show previous search query where possible\n    vm.searchQuery = searchQuery ? searchQuery : {};\n\n    // scrollbar conguration\n    vm.scrollBarConfig = {\n        resizeSensor: true,\n        enableKeyboardNavigation: true,\n        contentUpdateSensor: true\n    };\n\n    //use a service to store these values - make them more accessible by all modal contents\n    vm.panelService = searchBuilderPanel;\n\n    // modal data\n    vm.searchPercentage = 0;\n    vm.type = 'spark-primary';\n    vm.searchEstimateLabel = \"<span class='spark-label hidden-xxxs'><span class='medium light'>MATCHING ITEMS</span></span>\";\n    updateApproxLabel('Unavailable');\n\n    //must provide information on all possible components\n    vm.components = [{\n        name: 'author',\n        templateUrl: 'authorComponent.html'\n    }, {\n        name: 'custodian',\n        templateUrl: 'custodianComponent.html'\n    }, {\n        name: 'daterange',\n        templateUrl: 'dateRangeComponent.html'\n    }, {\n        name: 'keyword',\n        templateUrl: 'keywordComponent.html'\n    }, {\n        name: 'filename',\n        templateUrl: 'fileNameComponent.html'\n    }, {\n        name: 'filetypes',\n        templateUrl: 'fileTypesComponent.html'\n    }, {\n        name: 'repository',\n        templateUrl: 'repositoryComponent.html'\n    }, {\n        name: 'text',\n        templateUrl: 'textComponent.html'\n    }, {\n        name: 'custodians',\n        templateUrl: 'custodianComponent.html'\n    }];\n\n    // modal properties\n    vm.ok = function () {\n        $modalInstance.close(vm.searchQuery);\n    };\n\n    vm.cancel = function () {\n        $modalInstance.dismiss(\"cancel\");\n    };\n\n    //ensure we dismiss any open panel if the modal is closing\n    $scope.$on('modal.closing', function () {\n        searchBuilderPanel.closePanel();\n    });\n\n    //adding a simple field that will be the same component everytime\n    vm.addKeywordField = function () {\n        return {\n            id: searchBuilderId.generateComponentId('keyword', vm.searchQuery),\n            component: 'keyword'\n        };\n    };\n\n    //adding a field that may be a different component everytime\n    vm.addCustomField = function () {\n\n        //set the appropriate panel content\n        vm.panelService.setPanelHeader('Add Field');\n        vm.panelService.setPanelTemplate('addFieldPanel.html');\n\n        //the open panel function returns a deferred object which will be resolved or rejected accordingly\n        return vm.panelService.openPanel();\n    };\n\n    //this emulates the number of search results - and fakes approximate number of matching documents\n    $scope.$watch('vm.searchQuery', function (nv, ov) {\n        if (!angular.equals(nv, ov)) {\n            var complexity = vm.calculateComplexity(vm.searchQuery);\n\n            if (complexity === 0) {\n                vm.searchPercentage = 0;\n                updateApproxLabel('Unavailable');\n                return;\n            }\n\n            vm.searchPercentage = Math.max(100 - (complexity * 10), 0);\n\n            //set the color of the spark chart based on the search percentage\n            if (vm.searchPercentage > 70) vm.type = 'spark-critical';\n            else if (vm.searchPercentage > 50) vm.type = 'spark-warning';\n            else vm.type = 'spark-ok';\n\n            //update the label to the correct number of items\n            updateApproxLabel('Approx ' + vm.searchPercentage + 'k items');\n        }\n    }, true);\n\n    // this function returns dummy data for the number of search results based on search complexity\n    vm.calculateComplexity = function (node) {\n        var count = 0;\n\n        for (var key in node) {\n            if (key === 'value') {\n                if (!node[key] || (typeof node[key] === 'string' && node[key].trim().length === 0) ||\n                    (Array.isArray(node[key]) && node[key].length === 0)) {\n                    return 0;\n                }\n                return 1;\n            }\n\n            if (typeof node[key] === 'object')\n                count += vm.calculateComplexity(node[key]);\n        }\n\n        return count;\n    };\n\n    function updateApproxLabel(value) {\n        vm.approxItemLabel = \"<span class='spark-label hidden-xxxs'><span class='medium light'>\" + value + \"</span></span>\";\n    }\n}"}},gmUH:function(n,a,s){"use strict";s.r(a);var t=s("CcnG"),p=s("T/2f"),e=s("YZ8U"),l=s("mrSG"),o=s("AVdU"),c=s("yHOM"),u=function(n){function a(){return n.call(this,s("3vLH"))||this}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(c.a)("ComponentsSearchBuilderNg1Component")],a)}(o.a),i=s("f5YR"),k=(s("nmfD"),s("jFtu"),s("uwht"),s("ew9u"),s("zIf0"),s("uCBG")),r=s("Fq6B"),d=s("008C"),m=s("3xIc"),h=s("ny24"),g=s("ahDk"),f=s("buEt"),v=function(n){function a(a,t){var p=n.call(this,s("pO4k"))||this;return p._modalService=a,p._searchBuilderFocusService=t,p.playground={files:{"app.component.ts":p.snippets.raw.appTs,"app.component.html":p.snippets.raw.appHtml,"app.component.css":p.snippets.raw.appCss},modules:[{imports:["ModalModule"],library:"ngx-bootstrap/modal",forRoot:!0},{imports:["A11yModule"],library:"@angular/cdk/a11y"},{imports:["SearchBuilderModule","ItemDisplayPanelModule","SelectListModule","FocusIfModule"],library:"@ux-aspects/ux-aspects"}]},p.query={keywords:[{type:"keyword",value:null}],any:[],all:[],none:[]},p.preview=JSON.stringify(p.query,null,2),p.valid=!0,p.filter$=new m.a(""),p.modalOpen=!1,p.panelOpen=!1,p.placeholders={any:!1,all:!1,none:!1},p.components=[{name:"keyword",component:i.ke,config:{placeholder:"Enter keywords"}},{name:"author",component:i.ke,config:{label:"Author",placeholder:"Enter an Author"}},{name:"custodian",component:i.je,config:{label:"Custodian",placeholder:"Select Custodians",options:p.getCustodians(),multiple:!0}},{name:"date-range",component:i.ie,config:{label:"Date range"}},{name:"file-name",component:i.ke,config:{label:"File name",placeholder:"Enter a File Name"}},{name:"file-type",component:i.je,config:{label:"File types",placeholder:"Select File Types",options:["AVI","BMP","CSV","DOC","EXE","GIF","JPG","MOV","PDF","PNG","PPT","RTF","TXT","XLS","ZIP"],multiple:!0}},{name:"repository",component:i.je,config:{label:"Repository",placeholder:"Enter a Repository",options:["Filesystem","Records Manager","Email","Legacy Email","Archives","Legacy Archives","Miscellaneous"],multiple:!0}},{name:"text",component:i.ke,config:{label:"Text",placeholder:"Enter Text"}}],p.fields=[{title:"Author",type:"author"},{title:"Custodian",type:"custodian"},{title:"Date Range",type:"date-range"},{title:"File Name",type:"file-name"},{title:"File Type",type:"file-type"},{title:"Repository",type:"repository"},{title:"Text",type:"text"}],p._field$=new f.a,p._onDestroy=new f.a,p._modalService.onHide.pipe(Object(h.a)(p._onDestroy)).subscribe(function(){return p.cancel()}),p.filter$.pipe(Object(h.a)(p._onDestroy)).subscribe(function(n){p.filteredFields=p.fields.filter(function(a){return a.title.toLowerCase().indexOf(n.toLowerCase())>=0})}),p}return Object(l.__extends)(a,n),a.prototype.ngOnDestroy=function(){this._onDestroy.next(),this._onDestroy.complete()},a.prototype.save=function(){this.preview=JSON.stringify(this.query,null,2),this.modalOpen=!1},a.prototype.cancel=function(){this.query=JSON.parse(this.preview),this.modalOpen=!1},a.prototype.addKeyword=function(){var n=this.query.keywords.push({type:"keyword",value:null});this._searchBuilderFocusService.setFocus("keywords",n-1)},a.prototype.addField=function(n,a){var s=this,t=a.currentTarget;this.showPanel(),this.placeholders[n]=!0,this._field$.pipe(Object(g.d)()).subscribe(function(a){if(s.placeholders[n]=!1,a){var p=s.query[n].push({type:a.type,value:null});s._searchBuilderFocusService.setFocus(n,p-1)}else t.focus()}),a.stopPropagation()},a.prototype.showPanel=function(){this.filter$.next(""),this.panelOpen=!0},a.prototype.onPanelEvent=function(n){n||this._field$.next(null)},a.prototype.selectField=function(n){n&&(this._field$.next(n),this.panelOpen=!1)},a.prototype.getCustodians=function(){for(var n=[],a=0;a<20;a++)n.push(chance.name());return n},a.prototype.modalShown=function(){this._searchBuilderFocusService.setFocus("keywords",0)},Object(l.__decorate)([Object(c.a)("ComponentsSearchBuilderComponent")],a)}(o.a),y=s("W9B5"),b=function(n){function a(){var a=n.call(this,s("9gLR"))||this;return a.playground=Object(y.a)({html:a.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SearchHistoryDemoCtrl as vm"},htmlTemplates:[{id:"modalLayout.html",content:a.snippets.raw.modalLayoutHtml}],css:[a.snippets.raw.stylesCss],js:[a.snippets.raw.controllerJs,a.snippets.raw.modalControllerJs]}),a}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(c.a)("ComponentsSearchHistoryNg1Component")],a)}(o.a),x=function(n){function a(){var a=n.call(this,s("RBTV"))||this;return a.playground=Object(y.a)({html:a.snippets.raw.layoutHtml,htmlAttributes:{"ng-controller":"SearchToolbarDemoCtrl as vm"},js:[a.snippets.raw.controllerJs,a.snippets.raw.modalControllerJs]}),a}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(c.a)("ComponentsSearchToolbarNg1Component")],a)}(o.a),w=function(n){function a(){var a=n.call(this,s("CR2z"))||this;return a.playground={files:{"app.component.ts":a.snippets.raw.appTs,"app.component.html":a.snippets.raw.appHtml,"app.component.css":a.snippets.raw.appCss},modules:[{imports:["ToolbarSearchModule","ColorServiceModule","TooltipModule"],library:"@ux-aspects/ux-aspects"}]},a.searchedFor="",a}return Object(l.__extends)(a,n),a.prototype.onSearch=function(n){this.searchedFor=n,this.expanded=!1},a.prototype.onSearchRight=function(n){this.searchedFor=n,this.searchFieldRight.nativeElement.blur()},Object(l.__decorate)([Object(c.a)("ComponentsToolbarSearchComponent")],a)}(o.a),C={category:e.b.resolveCategoryData(e.a.Components,"Search")},S=function(){return function(n,a){a.registerResolver(n)}}(),T=s("WmtN"),P=s("HRZI"),F=s("pMnS"),O=s("GBPT"),R=s("ueff"),B=s("lOTE"),D=s("rYg0"),E=s("MM1k"),I=s("XnS2"),M=s("r1ng"),N=s("COk8"),A=s("9hoY"),$=s("+gXg"),j=s("rpQh"),L=s("2RDK"),H=s("ZYCi"),q=s("Ip0R"),_=t["\u0275crt"]({encapsulation:2,styles:[[".search-icon{width:30px;height:30px;background-image:url(assets/IconSearchColorized.png);background-size:100% 100%;margin-top:8px;margin-right:15px;min-width:30px}.search-builder-header-inline{display:flex}.search-builder-spark-padding{padding-top:6px;min-width:210px}@media (max-width:440px){.search-builder-spark-padding{display:none}}.search-builder-title-icon{font-size:33px;margin-right:15px}.add-field-list{list-style-type:none;padding:0;margin:8px 5px}.add-field-list .field-name{font-size:17px;padding:3px 10px;cursor:pointer}.add-field-list .field-name:hover{background-color:#f2f2f2}.add-field-list .field-name .repository-check{margin-right:10px;transition:opacity .2s linear}.add-field-list .field-name.option-deselected .option-check{opacity:0}.add-field-list .field-name.option-deselected:hover .option-check{opacity:.5}.add-field-list .field-name.option-selected .option-check{opacity:1}.show-panel-btn{cursor:pointer}.code-modal-body{height:520px;overflow-y:hidden}.code-modal-list{list-style-type:none;width:100%;padding:0}.code-modal-list .code-section{font-size:18px;padding:10px 20px;color:#fff;transition:background-color .3s linear;cursor:pointer}.code-modal-list .code-section.active,.code-modal-list .code-section:hover{background-color:rgba(0,0,0,.2)}"]],data:{}});function U(n){return t["\u0275vid"](2,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-builder-wrapper",[],null,null,null,null,null)),t["\u0275did"](1,999424,null,0,E.a,[t.ElementRef,t.Injector],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](5,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,[" The Search Builder provides a visual way for the user to easily build up complex search queries using predefined components.\n  Click the button below to view all of the code used to produce the sample search builder modal above."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,1,"uxd-search-builder-code-wrapper",[],null,null,null,null,null)),t["\u0275did"](9,999424,null,0,I.a,[t.ElementRef,t.Injector],{snippets:[0,"snippets"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](11,0,null,null,1,"h4",[["id","search-builder-directive"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Builder Directive"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](14,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](16,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-builder"])),(n()(),t["\u0275ted"](-1,null,[" directive is designed to act as a container for "])),(n()(),t["\u0275eld"](19,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-group"])),(n()(),t["\u0275ted"](-1,null,[" and "])),(n()(),t["\u0275eld"](22,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,["  directives. It provides a way to access the generated search query object and register the components that can be added."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](26,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](27,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](29,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following attributes are available to configure the behavior of the "])),(n()(),t["\u0275eld"](31,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-builder"])),(n()(),t["\u0275ted"](-1,null,[":"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](35,0,null,null,17,"uxd-api-properties",[],null,null,null,A.b,A.a)),t["\u0275did"](36,49152,null,0,$.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](38,0,null,0,14,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](39,0,null,null,8,"tr",[["binding","variable"],["name","search-query"],["required","true"],["type","object"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](40,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This should be a binding to an object that will store the current search query generated by the "])),(n()(),t["\u0275eld"](42,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-builder"])),(n()(),t["\u0275ted"](-1,0,[".\n      If this initially has a value, the "])),(n()(),t["\u0275eld"](45,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-builder"])),(n()(),t["\u0275ted"](-1,0,[" will automatically update to show the correct groups\n      and components with the values specified.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](49,0,null,null,2,"tr",[["binding","variable"],["name","components"],["required","true"],["type","array"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](50,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This should provide an array containing information on the components that can be added to it. Each component should\n      be given a unique name and a template url.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](54,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following is an example of how the component array might look:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](57,0,null,null,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](58,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](60,0,null,null,1,"h4",[["id","search-group-directive"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Group Directive"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](63,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](65,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-group"])),(n()(),t["\u0275ted"](-1,null,[" directive acts as a container for "])),(n()(),t["\u0275eld"](68,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" directives. Each group should\n  represent a specific operator (eg. and, or, not). It also provides a way to the user to add new fields to the groups."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](72,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](73,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](75,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following attributes can be used to configure the behavior of a "])),(n()(),t["\u0275eld"](77,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-group"])),(n()(),t["\u0275ted"](-1,null,[":"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](81,0,null,null,63,"uxd-api-properties",[["tableTitle",""]],null,null,null,A.b,A.a)),t["\u0275did"](82,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](84,0,null,0,60,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](85,0,null,null,2,"tr",[["binding","variable"],["name","group-id"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](86,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      \tThis should be a unique id given to each group to identify it in the generated search query.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](89,0,null,null,2,"tr",[["binding","variable"],["name","group-title"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](90,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This will specify the text that will display at the top of each group.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](93,0,null,null,11,"tr",[["binding","variable"],["name","operator"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](94,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This will specify the text that will display to the left of each group when more than one field has been added. The\n      color beside the operator label will be set depending on the operator specified. Recommended options are\n      "])),(n()(),t["\u0275eld"](96,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["'and'"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](99,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["'or'"])),(n()(),t["\u0275ted"](-1,0,[" and "])),(n()(),t["\u0275eld"](102,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["'not'"])),(n()(),t["\u0275ted"](-1,0,[".\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](106,0,null,null,2,"tr",[["binding","variable"],["name","button-text"],["required","true"],["type","string | string[]"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](107,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This will specify the text that goes along side the add field button. If there should be multiple\n      add field buttons this can be an array containing the text for each button.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](110,0,null,null,13,"tr",[["binding","variable"],["name","add-field"],["required","true"],["type","function | function[]"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](111,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This will specify the function to be called when the add field button is clicked. This function should return an\n      object that contains an "])),(n()(),t["\u0275eld"](113,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["id"])),(n()(),t["\u0275ted"](-1,0,[" property giving the field a unique id, and a "])),(n()(),t["\u0275eld"](116,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component"])),(n()(),t["\u0275ted"](-1,0,[" property\n      specifying the name of the component to be added. Additionally this function can return a "])),(n()(),t["\u0275eld"](119,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["$q.defer().promise"])),(n()(),t["\u0275ted"](-1,0,["\n      if the type of field will not immediately be known. If a promise is returned a placeholder field will be displayed\n      until the promise is either resolved or rejected.\n      "])),(n()(),t["\u0275eld"](122,0,null,0,0,"br",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,0,["\n      If there should be multiple add field buttons then this can be an array containing the function for each button.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](125,0,null,null,14,"tr",[["binding","variable"],["name","remove-field"],["type","function"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](126,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],binding:[2,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This will specify the function to be called when the remove field button is clicked. This function should accept\n      one argument containing the ID of the component being removed. It should return a boolean, "])),(n()(),t["\u0275eld"](128,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["true"])),(n()(),t["\u0275ted"](-1,0,[" indicating\n      that the component should be removed and "])),(n()(),t["\u0275eld"](131,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,0,[" indicating that the remove action should be cancelled.\n      Additionally this function can return a "])),(n()(),t["\u0275eld"](134,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["$q.defer().promise"])),(n()(),t["\u0275ted"](-1,0,[" to determine whether or not to remove the\n      field at a later point. The promise can either be resolved with a "])),(n()(),t["\u0275eld"](137,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["boolean"])),(n()(),t["\u0275ted"](-1,0,[" value or rejected, in which\n      case the field will not be removed.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](141,0,null,null,2,"tr",[["name","read-only"],["type","boolean"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](142,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Setting this to true will hide the add and remove buttons within the group.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](146,0,null,null,1,"h4",[["id","search-component-directive"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Component Directive"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](149,0,null,null,22,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](151,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" directive should be used to create a specific component that can be added to a "])),(n()(),t["\u0275eld"](154,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-group"])),(n()(),t["\u0275ted"](-1,null,[".\n  Each "])),(n()(),t["\u0275eld"](157,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" is responsible for setting the "])),(n()(),t["\u0275eld"](160,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" property on it\u2019s scope. It is this\n  value that will be displayed in the generated search query. For a "])),(n()(),t["\u0275eld"](163,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" that has a single control,\n  for example an "])),(n()(),t["\u0275eld"](166,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["input"])),(n()(),t["\u0275ted"](-1,null,[", simply setting the "])),(n()(),t["\u0275eld"](169,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ng-model"])),(n()(),t["\u0275ted"](-1,null,[" property will update the value automatically."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](173,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following example will demonstrate the simplest form of "])),(n()(),t["\u0275eld"](175,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[":"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](179,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](180,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](182,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["For a more complex "])),(n()(),t["\u0275eld"](184,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[", such as a date range, it may be required to have a controller that will\n  update the "])),(n()(),t["\u0275eld"](187,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" when values are changed. To specify a controller simply add an "])),(n()(),t["\u0275eld"](190,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ng-controller"])),(n()(),t["\u0275ted"](-1,null,["  attribute to the "])),(n()(),t["\u0275eld"](193,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" tag."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](197,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following example will demonstrate a more complex "])),(n()(),t["\u0275eld"](199,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-component"])),(n()(),t["\u0275ted"](-1,null,[" that uses a controller to update the\n  "])),(n()(),t["\u0275eld"](202,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[":"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](206,0,null,null,18,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](208,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](211,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](212,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](214,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](215,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](218,0,null,0,5,"ux-tab",[["heading","JavaScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](219,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](221,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](222,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](226,0,null,null,1,"h4",[["id","search-builder-modal"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Builder Modal"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](229,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The Search Builder is designed to be used within a modal. A new modal layout was created specifically for the Search Builder.\n  To utilize the Search Builder modal set the "])),(n()(),t["\u0275eld"](231,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["windowClass"])),(n()(),t["\u0275ted"](-1,null,[" to "])),(n()(),t["\u0275eld"](234,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["'search-builder-modal-window'"])),(n()(),t["\u0275ted"](-1,null,[" when\n  specifying the modal options."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](238,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The modal template should be similar to the following code which has been set up to show a scrollbar when required."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](241,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](242,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](244,0,null,null,8,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](246,0,null,null,5,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Refer to the "])),(n()(),t["\u0275eld"](248,0,null,null,2,"a",[["fragment","custom-scrollbar-ng1"],["routerLink","/components/scrollbar"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,249).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p},null,null)),t["\u0275did"](249,671744,null,0,H.o,[H.m,H.a,q.LocationStrategy],{fragment:[0,"fragment"],routerLink:[1,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["Scrollbar"])),(n()(),t["\u0275ted"](-1,null,[" page for more information on how to configure the scrollbar."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](254,0,null,null,8,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](256,0,null,null,5,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Refer to the "])),(n()(),t["\u0275eld"](258,0,null,null,2,"a",[["fragment","modal-ng1"],["routerLink","/components/modals"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,259).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p},null,null)),t["\u0275did"](259,671744,null,0,H.o,[H.m,H.a,q.LocationStrategy],{fragment:[0,"fragment"],routerLink:[1,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["Modal View"])),(n()(),t["\u0275ted"](-1,null,[" page for more information on how to configure the modal."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](264,0,null,null,1,"h4",[["id","search-query-structure"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Query Structure"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](267,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The structure of the generated search query is an object that contains child objects for each group that has components.\n  The format is as follows:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](270,0,null,null,61,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](272,0,null,null,28,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["group id\n    "])),(n()(),t["\u0275eld"](274,0,null,null,25,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](276,0,null,null,10,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component id\n        "])),(n()(),t["\u0275eld"](278,0,null,null,7,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](280,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component name"])),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](283,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component value"])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](288,0,null,null,10,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component id\n        "])),(n()(),t["\u0275eld"](290,0,null,null,7,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](292,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component name"])),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](295,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component value"])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](302,0,null,null,28,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["group id\n    "])),(n()(),t["\u0275eld"](304,0,null,null,25,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](306,0,null,null,10,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component id\n        "])),(n()(),t["\u0275eld"](308,0,null,null,7,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](310,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component name"])),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](313,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component value"])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275eld"](318,0,null,null,10,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component id\n        "])),(n()(),t["\u0275eld"](320,0,null,null,7,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](322,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component name"])),(n()(),t["\u0275ted"](-1,null,["\n          "])),(n()(),t["\u0275eld"](325,0,null,null,1,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["component value"])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n      "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](333,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["An example of a search query is:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](336,0,null,null,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](337,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,1,0),n(a,9,0,s.snippets),n(a,27,0,"html",s.snippets.compiled.layoutHtml),n(a,40,0,"search-query","true","object","variable"),n(a,50,0,"components","true","array","variable"),n(a,58,0,"javascript",s.snippets.compiled.componentArraySnippetJs),n(a,73,0,"html",s.snippets.compiled.searchGroupSnippetHtml),n(a,82,0,""),n(a,86,0,"group-id","true","string","variable"),n(a,90,0,"group-title","true","string","variable"),n(a,94,0,"operator","true","string","variable"),n(a,107,0,"button-text","true","string | string[]","variable"),n(a,111,0,"add-field","true","function | function[]","variable"),n(a,126,0,"remove-field","function","variable"),n(a,142,0,"read-only","boolean"),n(a,180,0,"html",s.snippets.compiled.textComponentHtml),n(a,208,0,!1),n(a,212,0,"HTML"),n(a,215,0,"html",s.snippets.compiled.dateRangeComponentHtml),n(a,219,0,"JavaScript"),n(a,222,0,"javascript",s.snippets.compiled.dateRangeComponentJs),n(a,242,0,"html",s.snippets.compiled.modalLayoutSnippetHtml),n(a,249,0,"custom-scrollbar-ng1","/components/scrollbar"),n(a,259,0,"modal-ng1","/components/modals"),n(a,337,0,"javascript",s.snippets.compiled.searchQuerySnippetJs)},function(n,a){n(a,206,0,"left"===t["\u0275nov"](a,208).stacked,"right"===t["\u0275nov"](a,208).stacked),n(a,248,0,t["\u0275nov"](a,249).target,t["\u0275nov"](a,249).href),n(a,258,0,t["\u0275nov"](a,259).target,t["\u0275nov"](a,259).href)})}function V(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-builder-ng1",[],null,null,null,U,_)),t["\u0275did"](1,49152,null,0,u,[],null,null)],null,null)}var W=t["\u0275ccf"]("uxd-search-builder-ng1",u,V,{},{},[]),Q=s("A/u8"),G=t["\u0275crt"]({encapsulation:2,styles:[[".search-history-container{width:350px;height:600px;overflow:auto}.search-history-scrollpane{height:100%}.search-history-container .search-history{display:flex;flex-direction:row;padding:10px 10px 8px 15px}.search-history-container .search-history .search-history-icon{flex:none;vertical-align:middle;margin-top:3px}.search-history-container .search-history .search-history-detail{flex:1;padding:0 15px;overflow:hidden}.search-history-container .search-history .search-history-detail p{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;height:25px;margin-bottom:3px}.search-history-container .search-history .search-history-detail .search-criteria{font-size:13px}.search-history-container .search-history .search-history-detail .search-criteria span{font-size:16px;margin-left:5px}.search-history-container .search-history .search-history-detail .search-criteria:last-of-type span{color:#ce6a79;font-size:16px;margin-left:5px}.search-history-container li:last-of-type hr{display:none}.search-history-container li hr{margin:0}.search-history-container li:hover{background-color:#f6f7f8;cursor:pointer}.search-history-modal-header{display:flex;background-color:#f2f2f2;padding:20px}.search-history-modal-header-title{margin-top:0;color:#000}.search-history-modal-content{padding:0 20px 10px}.search-history-modal-content .section{margin-top:20px}.search-history-modal-footer{padding:20px;text-align:right}"]],data:{}});function z(n){return t["\u0275vid"](2,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-history-wrapper",[],null,null,null,null,null)),t["\u0275did"](1,999424,null,0,Q.a,[t.ElementRef,t.Injector],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](5,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search History can be saved and updated with the use of the "])),(n()(),t["\u0275eld"](7,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["localStorage"])),(n()(),t["\u0275ted"](-1,null,[" object. Data\n  stored here will have no expiration time and can be easily accessed from any page when required."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](11,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Please note that when using "])),(n()(),t["\u0275eld"](13,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["localStorage"])),(n()(),t["\u0275ted"](-1,null,[" you should include a fallback option to use cookies \nor if you are running a hybrid application you can use the "])),(n()(),t["\u0275eld"](16,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["PersistentDataService"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](20,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Using our above example you can click the "])),(n()(),t["\u0275eld"](22,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275eld"](23,0,null,null,0,"span",[["aria-hidden","true"],["class","hpe-icon hpe-history"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,[" icon\n  to see details of the last 10 searches."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](26,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](28,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["localStorage"])),(n()(),t["\u0275ted"](-1,null,[" object has the following methods which we use in our example above:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](32,0,null,null,20,"uxd-api-properties",[],null,null,null,A.b,A.a)),t["\u0275did"](33,49152,null,0,$.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](35,0,null,0,17,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](36,0,null,null,8,"tr",[["name","setItem"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](37,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This method takes 2 parameters, a "])),(n()(),t["\u0275eld"](39,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["key name"])),(n()(),t["\u0275ted"](-1,0,[" and "])),(n()(),t["\u0275eld"](42,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["key value"])),(n()(),t["\u0275ted"](-1,0,[" pair, and will add the key to\n      the storage or update it if it already exists.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](46,0,null,null,5,"tr",[["name","getItem"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](47,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n      This method takes a "])),(n()(),t["\u0275eld"](49,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["key name"])),(n()(),t["\u0275ted"](-1,0,[" as a parameter and returns its value (if it exists).\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](54,0,null,null,10,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](56,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](57,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": Refer to the "])),(n()(),t["\u0275eld"](60,0,null,null,2,"a",[["href","https://developer.mozilla.org/en-US/docs/Web/API/Storage"]],null,null,null,null,null)),t["\u0275did"](61,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["Storage API"])),(n()(),t["\u0275ted"](-1,null,["\n    for full documentation"])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](66,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["You can see the code used in our example by selecting the appropriate tabs below:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](69,0,null,null,39,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](71,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275eld"](74,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](75,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](77,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](78,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275eld"](81,0,null,0,5,"ux-tab",[["heading","JavaScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](82,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](84,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](85,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275eld"](88,0,null,0,5,"ux-tab",[["heading","Modal HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](89,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](91,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](92,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275eld"](95,0,null,0,5,"ux-tab",[["heading","Modal JavaScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](96,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](98,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](99,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275eld"](102,0,null,0,5,"ux-tab",[["heading","CSS"]],null,null,null,P.lc,P.X)),t["\u0275did"](103,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](105,0,null,0,1,"uxd-snippet",[["language","css"]],null,null,null,M.b,M.a)),t["\u0275did"](106,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n  "])),(n()(),t["\u0275ted"](-1,0,["\n"]))],function(n,a){var s=a.component;n(a,1,0),n(a,37,0,"setItem"),n(a,47,0,"getItem"),n(a,61,0),n(a,71,0,!1),n(a,75,0,"HTML"),n(a,78,0,"html",s.snippets.compiled.layoutHtml),n(a,82,0,"JavaScript"),n(a,85,0,"javascript",s.snippets.compiled.controllerJs),n(a,89,0,"Modal HTML"),n(a,92,0,"html",s.snippets.compiled.modalLayoutHtml),n(a,96,0,"Modal JavaScript"),n(a,99,0,"javascript",s.snippets.compiled.modalControllerJs),n(a,103,0,"CSS"),n(a,106,0,"css",s.snippets.compiled.stylesCss)},function(n,a){n(a,69,0,"left"===t["\u0275nov"](a,71).stacked,"right"===t["\u0275nov"](a,71).stacked)})}function X(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-history-ng1",[],null,null,null,z,G)),t["\u0275did"](1,49152,null,0,b,[],null,null)],null,null)}var J=t["\u0275ccf"]("uxd-search-history-ng1",b,X,{},{},[]),K=s("+QY0"),Z=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function Y(n){return t["\u0275vid"](2,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-toolbar-wrapper",[],null,null,null,null,null)),t["\u0275did"](1,999424,null,0,K.a,[t.ElementRef,t.Injector],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](5,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The Search Toolbar is contained in the "])),(n()(),t["\u0275eld"](7,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["search-toolbar"])),(n()(),t["\u0275ted"](-1,null,[" directive and the "])),(n()(),t["\u0275eld"](10,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,[".expand-input"])),(n()(),t["\u0275ted"](-1,null,[" class."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](14,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Toolbar takes the following attributes:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](17,0,null,null,23,"uxd-api-properties",[],null,null,null,A.b,A.a)),t["\u0275did"](18,49152,null,0,$.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](20,0,null,0,20,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](21,0,null,null,2,"tr",[["binding","variable"],["name","search-typeahead"],["required","true"],["type","array"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](22,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Name of the list where the typeahead data is stored.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](25,0,null,null,2,"tr",[["binding","literal"],["name","place-holder"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](26,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Placeholder text for an input.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](29,0,null,null,2,"tr",[["binding","literal"],["name","close-search"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](30,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Should be set to a value which when clicked closes the input text.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](33,0,null,null,2,"tr",[["binding","variable"],["name","on-search"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](34,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Defines the function to be called when the enter key is pressed. The function will be called with the current text entered in the field as an argument.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](37,0,null,null,2,"tr",[["binding","variable"],["name","on-focus"],["type","function"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](38,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],binding:[2,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n      Defines the function to be called when the search bar is focused.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](42,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["An example of the required HTML is as follows:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](45,0,null,null,18,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](47,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](50,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](51,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](53,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,M.b,M.a)),t["\u0275did"](54,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](57,0,null,0,5,"ux-tab",[["heading","JavaScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](58,180224,[[1,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](60,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,M.b,M.a)),t["\u0275did"](61,114688,null,0,N.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](65,0,null,null,6,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](67,0,null,null,3,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](68,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": This component can be used in an Angular application by importing the HybridModule."])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,1,0),n(a,22,0,"search-typeahead","true","array","variable"),n(a,26,0,"place-holder","true","string","literal"),n(a,30,0,"close-search","true","string","literal"),n(a,34,0,"on-search","true","function","variable"),n(a,38,0,"on-focus","function","variable"),n(a,47,0,!1),n(a,51,0,"HTML"),n(a,54,0,"html",s.snippets.compiled.layoutHtml),n(a,58,0,"JavaScript"),n(a,61,0,"javascript",s.snippets.compiled.controllerJs)},function(n,a){n(a,45,0,"left"===t["\u0275nov"](a,47).stacked,"right"===t["\u0275nov"](a,47).stacked)})}function nn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-toolbar-ng1",[],null,null,null,Y,Z)),t["\u0275did"](1,49152,null,0,x,[],null,null)],null,null)}var an=t["\u0275ccf"]("uxd-search-toolbar-ng1",x,nn,{},{},[]),sn=s("gIcY"),tn=s("eDkP"),pn=s("qAlS"),en=t["\u0275crt"]({encapsulation:0,styles:[[".demo-toolbar[_ngcontent-%COMP%]{display:flex;width:100%;border:1px solid #ccc;padding:4px 8px}.demo-toolbar[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{flex:1 0 auto;position:relative;display:flex;align-items:center}.demo-toolbar-right[_ngcontent-%COMP%]{justify-content:flex-end}"]],data:{}});function ln(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,4,"button",[["class","btn btn-link btn-icon button-secondary ux-toolbar-search-clear"],["type","button"]],null,[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(n.component.searchText="",p=!1!==t["\u0275nov"](n.parent,10).focus()&&p),p},null,null)),t["\u0275did"](1,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](3,0,null,null,0,"span",[["class","hpe-icon hpe-close"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "]))],function(n,a){n(a,1,0)},null)}function on(n){return t["\u0275vid"](0,[t["\u0275qud"](402653184,1,{searchFieldRight:0}),(n()(),t["\u0275eld"](1,0,null,null,78,"div",[["class","demo-toolbar"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](3,0,null,null,40,"div",[["class","demo-toolbar-left"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](5,0,null,null,23,"ux-toolbar-search",[["direction","right"]],[[2,"expanded",null],[2,"left",null],[2,"right",null],[2,"inverse",null],[4,"position",null],[4,"background-color",null],[40,"@expanded",0]],[[null,"expandedChange"],[null,"search"],["component","@expanded.start"],["component","@expanded.done"]],function(n,a,s){var p=!0,e=n.component;return"component:@expanded.start"===a&&(p=!1!==t["\u0275nov"](n,6).animationStart(s)&&p),"component:@expanded.done"===a&&(p=!1!==t["\u0275nov"](n,6).animationDone(s)&&p),"expandedChange"===a&&(p=!1!==(e.expanded=s)&&p),"search"===a&&(p=!1!==e.onSearch(s)&&p),p},P.sc,P.eb)),t["\u0275did"](6,1228800,null,2,i.jf,[t.ElementRef,i.H,t.Renderer2,t.PLATFORM_ID],{direction:[0,"direction"],expanded:[1,"expanded"]},{expandedChange:"expandedChange",search:"search"}),t["\u0275qud"](335544320,2,{field:0}),t["\u0275qud"](335544320,3,{button:0}),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275eld"](10,0,[["searchField",1]],0,6,"input",[["aria-label","Search"],["class","form-control"],["placeholder","Search"],["type","text"],["uxToolbarSearchField",""]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngModelChange"],[null,"input"],[null,"blur"],[null,"compositionstart"],[null,"compositionend"],[null,"keydown.enter"],[null,"keydown.escape"]],function(n,a,s){var p=!0,e=n.component;return"input"===a&&(p=!1!==t["\u0275nov"](n,11)._handleInput(s.target.value)&&p),"blur"===a&&(p=!1!==t["\u0275nov"](n,11).onTouched()&&p),"compositionstart"===a&&(p=!1!==t["\u0275nov"](n,11)._compositionStart()&&p),"compositionend"===a&&(p=!1!==t["\u0275nov"](n,11)._compositionEnd(s.target.value)&&p),"keydown.enter"===a&&(p=!1!==t["\u0275nov"](n,12).onEnter()&&p),"keydown.escape"===a&&(p=!1!==t["\u0275nov"](n,12).onEscape()&&p),"input"===a&&(p=!1!==t["\u0275nov"](n,12).onInput()&&p),"ngModelChange"===a&&(p=!1!==(e.searchText=s)&&p),p},null,null)),t["\u0275did"](11,16384,null,0,sn.c,[t.Renderer2,t.ElementRef,[2,sn.a]],null,null),t["\u0275did"](12,16384,[[2,4]],0,i.kf,[t.ElementRef],null,null),t["\u0275prd"](1024,null,sn.n,function(n,a){return[n,a]},[sn.c,i.kf]),t["\u0275did"](14,671744,null,0,sn.s,[[8,null],[8,null],[8,null],[6,sn.n]],{model:[0,"model"]},{update:"ngModelChange"}),t["\u0275prd"](2048,null,sn.o,null,[sn.s]),t["\u0275did"](16,16384,null,0,sn.p,[[4,sn.o]],null,null),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275eld"](18,16777216,null,0,6,"button",[["aria-label","Toggle Search"],["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxToolbarSearchButton",""],["uxTooltip","Search"]],null,[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,20).clickHandler()&&p),p},null,null)),t["\u0275did"](19,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](20,16384,[[3,4]],0,i.if,[t.ElementRef],null,null),t["\u0275did"](21,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](23,0,null,null,0,"span",[["class","hpe-icon hpe-search"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275and"](16777216,null,0,1,null,ln)),t["\u0275did"](27,16384,null,0,q.NgIf,[t.ViewContainerRef,t.TemplateRef],{ngIf:[0,"ngIf"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](30,16777216,null,null,5,"button",[["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxTooltip","Add"]],null,null,null,null,null)),t["\u0275did"](31,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](32,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](34,0,null,null,0,"span",[["class","hpe-icon hpe-add"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](37,16777216,null,null,5,"button",[["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxTooltip","Edit"]],null,null,null,null,null)),t["\u0275did"](38,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](39,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](41,0,null,null,0,"span",[["class","hpe-icon hpe-edit"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](45,0,null,null,33,"div",[["class","demo-toolbar-right"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](47,16777216,null,null,5,"button",[["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxTooltip","Grid View"]],null,null,null,null,null)),t["\u0275did"](48,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](49,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](51,0,null,null,0,"span",[["class","hpe-icon hpe-grid"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](54,16777216,null,null,5,"button",[["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxTooltip","List View"]],null,null,null,null,null)),t["\u0275did"](55,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](56,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](58,0,null,null,0,"span",[["class","hpe-icon hpe-list"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](61,0,null,null,16,"ux-toolbar-search",[["direction","left"]],[[2,"expanded",null],[2,"left",null],[2,"right",null],[2,"inverse",null],[4,"position",null],[4,"background-color",null],[40,"@expanded",0]],[[null,"search"],["component","@expanded.start"],["component","@expanded.done"]],function(n,a,s){var p=!0,e=n.component;return"component:@expanded.start"===a&&(p=!1!==t["\u0275nov"](n,62).animationStart(s)&&p),"component:@expanded.done"===a&&(p=!1!==t["\u0275nov"](n,62).animationDone(s)&&p),"search"===a&&(p=!1!==e.onSearchRight(s)&&p),p},P.sc,P.eb)),t["\u0275did"](62,1228800,null,2,i.jf,[t.ElementRef,i.H,t.Renderer2,t.PLATFORM_ID],{direction:[0,"direction"]},{search:"search"}),t["\u0275qud"](335544320,4,{field:0}),t["\u0275qud"](335544320,5,{button:0}),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275eld"](66,0,[[1,0],["searchFieldRight",1]],0,2,"input",[["aria-label","Search"],["class","form-control"],["placeholder","Search"],["type","text"],["uxToolbarSearchField",""]],null,[[null,"keydown.enter"],[null,"keydown.escape"],[null,"input"]],function(n,a,s){var p=!0;return"keydown.enter"===a&&(p=!1!==t["\u0275nov"](n,68).onEnter()&&p),"keydown.escape"===a&&(p=!1!==t["\u0275nov"](n,68).onEscape()&&p),"input"===a&&(p=!1!==t["\u0275nov"](n,68).onInput()&&p),p},null,null)),t["\u0275prd"](5120,null,sn.n,function(n){return[n]},[i.kf]),t["\u0275did"](68,16384,[[4,4]],0,i.kf,[t.ElementRef],null,null),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275eld"](70,16777216,null,0,6,"button",[["aria-label","Toggle Search"],["class","btn btn-link btn-icon button-secondary"],["type","button"],["uxToolbarSearchButton",""],["uxTooltip","Search"]],null,[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,72).clickHandler()&&p),p},null,null)),t["\u0275did"](71,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),t["\u0275did"](72,16384,[[5,4]],0,i.if,[t.ElementRef],null,null),t["\u0275did"](73,737280,null,0,i.nf,[t.ElementRef,t.ViewContainerRef,tn.a,pn.c,t.ChangeDetectorRef,t.Renderer2,i.pf],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](75,0,null,null,0,"span",[["class","hpe-icon hpe-search"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](81,0,null,null,3,"p",[["class","m-t-md"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Searched for: "])),(n()(),t["\u0275eld"](83,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](84,null,["",""])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](86,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](88,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The "])),(n()(),t["\u0275eld"](90,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-toolbar-search"])),(n()(),t["\u0275ted"](-1,null,[" component can be used to toggle the visibility of a search input box in the\n    context of a toolbar. Within this component, create an input field with the attribute\n    "])),(n()(),t["\u0275eld"](93,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["uxToolbarSearchField"])),(n()(),t["\u0275ted"](-1,null,[", which will act as the search input box, and a\n    button with the attribute "])),(n()(),t["\u0275eld"](96,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["uxToolbarSearchButton"])),(n()(),t["\u0275ted"](-1,null,[", which will toggle the visibility of the input field,\n    and submit the search text when input has been provided. Then, use the "])),(n()(),t["\u0275eld"](99,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["(search)"])),(n()(),t["\u0275ted"](-1,null,[" event to trigger the\n    application's search routine.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](103,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The search input field will expand to fill the dimensions of its parent, overlaying any other controls present. To\n    support this, ensure that the parent container has "])),(n()(),t["\u0275eld"](105,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["position: relative"])),(n()(),t["\u0275ted"](-1,null,[" specified.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](109,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    By default, the escape key is used to collapse the search field. Other keys or events can be used by binding to the\n    "])),(n()(),t["\u0275eld"](111,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["expanded"])),(n()(),t["\u0275ted"](-1,null,[" input property. For example, to collapse when focus is lost, attach a "])),(n()(),t["\u0275eld"](114,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["(blur)"])),(n()(),t["\u0275ted"](-1,null,["\n    handler to the input field and set the expanded state to false.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](118,0,null,null,8,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,['\n    Other components can be added as required. The toolbar search component on the left above shows how to include an\n    optional "clear" button to the input field using the built-in '])),(n()(),t["\u0275eld"](120,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-toolbar-search-clear"])),(n()(),t["\u0275ted"](-1,null,[" class. Another\n    common use-case is to include a "])),(n()(),t["\u0275eld"](123,0,null,null,2,"a",[["href","https://valor-software.com/ngx-bootstrap/#/typeahead"]],null,null,null,null,null)),t["\u0275did"](124,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["typeahead"])),(n()(),t["\u0275ted"](-1,null,[" list to\n    hint results as the user is typing.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](128,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following properties are available to configure "])),(n()(),t["\u0275eld"](130,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-toolbar-search"])),(n()(),t["\u0275ted"](-1,null,[":"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](134,0,null,null,18,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,A.b,A.a)),t["\u0275did"](135,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](137,0,null,0,15,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](138,0,null,null,2,"tr",[["name","expanded"],["type","boolean"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](139,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Whether the input field is visible. Use this to collapse or expand the control in response to other events.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](142,0,null,null,5,"tr",[["defaultValue","right"],["name","direction"],["type","'left' | 'right'"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](143,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        The direction in which the search box will expand. If the search button is aligned to the right edge of the\n        container, specify "])),(n()(),t["\u0275eld"](145,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["left"])),(n()(),t["\u0275ted"](-1,0,[".\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](149,0,null,null,2,"tr",[["defaultValue","false"],["name","alwaysExpanded"],["type","boolean"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](150,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Whether the input field should always appear in the expanded state.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](154,0,null,null,7,"uxd-api-properties",[["tableTitle","Output"]],null,null,null,A.b,A.a)),t["\u0275did"](155,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](157,0,null,0,4,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](158,0,null,null,2,"tr",[["name","search"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](159,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Emitted when a search query has been submitted, either by pressing enter when the search field has focus, or by\n        clicking the search button when the search field contains text. The event contains the search text.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](163,0,null,null,25,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](165,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,6,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](168,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](169,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](171,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](172,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](175,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](176,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](178,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](179,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](182,0,null,0,5,"ux-tab",[["heading","CSS"]],null,null,null,P.lc,P.X)),t["\u0275did"](183,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](185,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](186,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"]))],function(n,a){var s=a.component;n(a,6,0,"right",s.expanded),n(a,14,0,s.searchText),n(a,19,0),n(a,21,0,"Search"),n(a,27,0,s.searchText),n(a,31,0),n(a,32,0,"Add"),n(a,38,0),n(a,39,0,"Edit"),n(a,48,0),n(a,49,0,"Grid View"),n(a,55,0),n(a,56,0,"List View"),n(a,62,0,"left"),n(a,71,0),n(a,73,0,"Search"),n(a,124,0),n(a,135,0,"Inputs"),n(a,139,0,"expanded","boolean"),n(a,143,0,"direction","'left' | 'right'","right"),n(a,150,0,"alwaysExpanded","boolean","false"),n(a,155,0,"Output"),n(a,159,0,"search","string"),n(a,165,0,!1),n(a,169,0,"HTML"),n(a,172,0,s.snippets.compiled.appHtml),n(a,176,0,"TypeScript"),n(a,179,0,s.snippets.compiled.appTs),n(a,183,0,"CSS"),n(a,186,0,s.snippets.compiled.appCss)},function(n,a){var s=a.component;n(a,5,0,t["\u0275nov"](a,6).expanded,"left"===t["\u0275nov"](a,6).direction,"right"===t["\u0275nov"](a,6).direction,t["\u0275nov"](a,6).inverse,t["\u0275nov"](a,6)._position,t["\u0275nov"](a,6)._backgroundColor,t["\u0275nov"](a,6)._expandedAnimation),n(a,10,0,t["\u0275nov"](a,16).ngClassUntouched,t["\u0275nov"](a,16).ngClassTouched,t["\u0275nov"](a,16).ngClassPristine,t["\u0275nov"](a,16).ngClassDirty,t["\u0275nov"](a,16).ngClassValid,t["\u0275nov"](a,16).ngClassInvalid,t["\u0275nov"](a,16).ngClassPending),n(a,61,0,t["\u0275nov"](a,62).expanded,"left"===t["\u0275nov"](a,62).direction,"right"===t["\u0275nov"](a,62).direction,t["\u0275nov"](a,62).inverse,t["\u0275nov"](a,62)._position,t["\u0275nov"](a,62)._backgroundColor,t["\u0275nov"](a,62)._expandedAnimation),n(a,84,0,s.searchedFor),n(a,163,0,"left"===t["\u0275nov"](a,165).stacked,"right"===t["\u0275nov"](a,165).stacked)})}function cn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-toolbar-search",[],null,null,null,on,en)),t["\u0275did"](1,49152,null,0,w,[],null,null)],null,null)}var un=t["\u0275ccf"]("uxd-toolbar-search",w,cn,{},{},[]),kn=s("6aHO"),rn=s("lLAP"),dn=t["\u0275crt"]({encapsulation:0,styles:[[".search-builder-panel[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;right:0;pointer-events:none}.search-builder-panel-open[_ngcontent-%COMP%]{pointer-events:all}.field-list-panel[_ngcontent-%COMP%]{border-top:1px solid #e5e5e5;padding:10px}.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:8px 5px}.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%]   .field-list-item[_ngcontent-%COMP%]{font-size:17px;padding:3px 10px;cursor:pointer}.field-list-panel[_ngcontent-%COMP%]   .field-list[_ngcontent-%COMP%]   .field-list-item[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}"]],data:{}});function mn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,2,"ux-select-list-item",[["role","listitem"]],[[8,"tabIndex",0],[2,"selected",null],[1,"aria-selected",0]],[[null,"mousedown"],[null,"click"],[null,"keydown"]],function(n,a,s){var p=!0;return"mousedown"===a&&(p=!1!==t["\u0275nov"](n,1).onMouseDown(s)&&p),"click"===a&&(p=!1!==t["\u0275nov"](n,1).onClick(s)&&p),"keydown"===a&&(p=!1!==t["\u0275nov"](n,1).onKeydown(s)&&p),p},P.hc,P.T)),t["\u0275did"](1,180224,[[3,4]],0,i.ne,[i.ue,t.ElementRef,i.hc],{data:[0,"data"]},null),(n()(),t["\u0275ted"](2,0,["\n                            ","\n                        "]))],function(n,a){n(a,1,0,a.context.$implicit)},function(n,a){n(a,0,0,t["\u0275nov"](a,1).tabindex,t["\u0275nov"](a,1).selected,t["\u0275nov"](a,1).selected),n(a,2,0,a.context.$implicit.title)})}function hn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,7,"ux-select-list",[["aria-description","Select a field type to add it to the search builder."],["aria-label","Field type list"],["class","field-list"],["role","list"]],null,[[null,"selectedChange"]],function(n,a,s){var t=!0;return"selectedChange"===a&&(t=!1!==n.component.selectField(s[0])&&t),t},P.gc,P.S)),t["\u0275prd"](131584,null,i.ue,i.ue,[]),t["\u0275did"](2,1228800,null,1,i.me,[i.ue],null,{selectedChange:"selectedChange"}),t["\u0275qud"](603979776,3,{items:1}),(n()(),t["\u0275ted"](-1,0,["\n                        "])),(n()(),t["\u0275and"](16777216,null,0,1,null,mn)),t["\u0275did"](6,278528,null,0,q.NgForOf,[t.ViewContainerRef,t.TemplateRef,t.IterableDiffers],{ngForOf:[0,"ngForOf"]},null),(n()(),t["\u0275ted"](-1,0,["\n                    "]))],function(n,a){n(a,6,0,a.component.filteredFields)},null)}function gn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,16777216,null,null,96,"div",[["aria-labelledby","search-builder-title"],["aria-modal","true"],["bsModal",""],["class","modal"],["role","dialog"],["tabindex","-1"]],null,[[null,"onShown"],[null,"onHidden"],[null,"click"],[null,"keydown.esc"]],function(n,a,s){var p=!0,e=n.component;return"click"===a&&(p=!1!==t["\u0275nov"](n,1).onClick(s)&&p),"keydown.esc"===a&&(p=!1!==t["\u0275nov"](n,1).onEsc(s)&&p),"onShown"===a&&(p=!1!==e.modalShown()&&p),"onHidden"===a&&(p=!1!==e.cancel()&&p),p},null,null)),t["\u0275did"](1,212992,[["modal",4]],0,k.a,[t.ElementRef,t.ViewContainerRef,t.Renderer2,kn.a],{config:[0,"config"]},{onShown:"onShown",onHidden:"onHidden"}),t["\u0275pod"](2,{show:0,animated:1,focus:2}),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](4,0,null,null,91,"div",[["class","modal-dialog modal-lg search-builder-modal"],["role","document"]],null,null,null,null,null)),t["\u0275did"](5,1196032,null,0,rn.d,[t.ElementRef,rn.h,q.DOCUMENT],{enabled:[0,"enabled"],autoCapture:[1,"autoCapture"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n        "])),(n()(),t["\u0275eld"](7,0,null,null,87,"div",[["class","modal-content"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](10,0,null,null,7,"div",[["class","search-builder-dismiss"]],null,[[null,"click"]],function(n,a,s){var t=!0;return"click"===a&&(t=!1!==n.component.cancel()&&t),t},null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](12,0,null,null,4,"button",[["aria-label","Close search builder modal"],["class","btn btn-icon button-dark btn-circular btn-close"],["type","button"]],null,null,null,null,null)),t["\u0275did"](13,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275eld"](15,0,null,null,0,"i",[["class","hpe-icon hpe-close"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](20,0,null,null,6,"div",[["class","search-builder-header"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](22,0,null,null,0,"div",[["class","search-builder-icon"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](24,0,null,null,1,"h1",[["class","search-builder-title"],["id","search-builder-title"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search builder"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275eld"](28,0,[[1,0],["searchBuilderContent",1]],null,27,"div",[["class","search-builder-body"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n                "])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](31,0,null,null,23,"ux-search-builder",[],null,[[null,"queryChange"],[null,"valid"]],function(n,a,s){var t=!0,p=n.component;return"queryChange"===a&&(t=!1!==(p.query=s)&&t),"valid"===a&&(t=!1!==(p.valid=s)&&t),t},P.dc,P.P)),t["\u0275prd"](512,null,i.ge,i.ge,[]),t["\u0275did"](33,180224,null,0,i.ae,[i.ge],{components:[0,"components"],query:[1,"query"]},{queryChange:"queryChange",valid:"valid"}),(n()(),t["\u0275ted"](-1,0,["\n\n                    "])),(n()(),t["\u0275eld"](35,0,null,0,3,"ux-search-builder-group",[["addText","Add a keyword"],["header","Text Keywords"],["id","keywords"]],null,[[null,"add"]],function(n,a,s){var t=!0;return"add"===a&&(t=!1!==n.component.addKeyword()&&t),t},P.ec,P.Q)),t["\u0275prd"](512,null,i.de,i.de,[i.ge,i.be]),t["\u0275did"](37,245760,null,0,i.ce,[i.de,i.be],{id:[0,"id"],header:[1,"header"],addText:[2,"addText"]},{add:"add"}),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275ted"](-1,0,["\n\n                    "])),(n()(),t["\u0275eld"](40,0,null,0,3,"ux-search-builder-group",[["header","ANY of the following"],["id","any"],["operator","or"]],null,[[null,"add"]],function(n,a,s){var t=!0;return"add"===a&&(t=!1!==n.component.addField("any",s)&&t),t},P.ec,P.Q)),t["\u0275prd"](512,null,i.de,i.de,[i.ge,i.be]),t["\u0275did"](42,245760,null,0,i.ce,[i.de,i.be],{id:[0,"id"],header:[1,"header"],operator:[2,"operator"],showPlaceholder:[3,"showPlaceholder"]},{add:"add"}),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275ted"](-1,0,["\n\n                    "])),(n()(),t["\u0275eld"](45,0,null,0,3,"ux-search-builder-group",[["header","ALL of the following"],["id","all"]],null,[[null,"add"]],function(n,a,s){var t=!0;return"add"===a&&(t=!1!==n.component.addField("all",s)&&t),t},P.ec,P.Q)),t["\u0275prd"](512,null,i.de,i.de,[i.ge,i.be]),t["\u0275did"](47,245760,null,0,i.ce,[i.de,i.be],{id:[0,"id"],header:[1,"header"],showPlaceholder:[2,"showPlaceholder"]},{add:"add"}),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275ted"](-1,0,["\n\n                    "])),(n()(),t["\u0275eld"](50,0,null,0,3,"ux-search-builder-group",[["header","NONE of the following"],["id","none"],["operator","not"]],null,[[null,"add"]],function(n,a,s){var t=!0;return"add"===a&&(t=!1!==n.component.addField("none",s)&&t),t},P.ec,P.Q)),t["\u0275prd"](512,null,i.de,i.de,[i.ge,i.be]),t["\u0275did"](52,245760,null,0,i.ce,[i.de,i.be],{id:[0,"id"],header:[1,"header"],operator:[2,"operator"],showPlaceholder:[3,"showPlaceholder"]},{add:"add"}),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275ted"](-1,0,["\n\n                "])),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](58,0,null,null,9,"div",[["class","search-builder-footer"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](60,0,null,null,2,"button",[["class","btn button-primary"],["type","button"]],[[8,"disabled",0]],[[null,"click"]],function(n,a,s){var t=!0;return"click"===a&&(t=!1!==n.component.save()&&t),t},null,null)),t["\u0275did"](61,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["\n                    Search\n                "])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](64,0,null,null,2,"button",[["class","btn button-secondary"],["type","button"]],null,[[null,"click"]],function(n,a,s){var t=!0;return"click"===a&&(t=!1!==n.component.cancel()&&t),t},null,null)),t["\u0275did"](65,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["Cancel"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](70,0,null,null,23,"ux-item-display-panel",[["aria-description","Select a field type to add it to the search builder."],["aria-label","Field Type Panel"],["class","search-builder-panel ux-side-panel ux-item-display-panel"],["header","Add Field"],["role","dialog"],["width","400px"]],[[2,"search-builder-panel-open",null],[2,"open",null],[2,"inline",null],[1,"aria-modal",0],[2,"animate",null],[4,"width",null]],[[null,"visibleChange"],["document","keyup.escape"],["document","click"]],function(n,a,s){var p=!0,e=n.component;return"document:keyup.escape"===a&&(p=!1!==t["\u0275nov"](n,72).closePanel()&&p),"document:click"===a&&(p=!1!==t["\u0275nov"](n,72).clickHandler(s)&&p),"visibleChange"===a&&(p=!1!==(e.panelOpen=s)&&p),"visibleChange"===a&&(p=!1!==e.onPanelEvent(s)&&p),p},P.Ob,P.A)),t["\u0275prd"](512,null,i.ug,i.ug,[]),t["\u0275did"](72,245760,null,1,i.zc,[i.ug,t.ElementRef],{inline:[0,"inline"],width:[1,"width"],animate:[2,"animate"],header:[3,"header"],visible:[4,"visible"]},{visibleChange:"visibleChange"}),t["\u0275qud"](335544320,2,{footer:0}),(n()(),t["\u0275ted"](-1,null,["\n\n                "])),(n()(),t["\u0275eld"](75,0,null,0,17,"div",[["class","field-list-panel"],["uxItemDisplayPanelContent",""]],null,[[null,"keydown.esc"]],function(n,a,s){var t=!0;return"keydown.esc"===a&&(n.component.panelOpen=!1,t=!1!==s.stopPropagation()&&t),t},null,null)),t["\u0275did"](76,1196032,null,0,rn.d,[t.ElementRef,rn.h,q.DOCUMENT],{enabled:[0,"enabled"],autoCapture:[1,"autoCapture"]},null),t["\u0275did"](77,16384,null,0,i.Ac,[],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n                    "])),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275eld"](80,0,null,null,7,"input",[["aria-description","Filter the field type list."],["class","form-control"],["placeholder","Find a field"],["type","text"]],[[2,"ng-untouched",null],[2,"ng-touched",null],[2,"ng-pristine",null],[2,"ng-dirty",null],[2,"ng-valid",null],[2,"ng-invalid",null],[2,"ng-pending",null]],[[null,"ngModelChange"],[null,"input"],[null,"blur"],[null,"compositionstart"],[null,"compositionend"]],function(n,a,s){var p=!0,e=n.component;return"input"===a&&(p=!1!==t["\u0275nov"](n,82)._handleInput(s.target.value)&&p),"blur"===a&&(p=!1!==t["\u0275nov"](n,82).onTouched()&&p),"compositionstart"===a&&(p=!1!==t["\u0275nov"](n,82)._compositionStart()&&p),"compositionend"===a&&(p=!1!==t["\u0275nov"](n,82)._compositionEnd(s.target.value)&&p),"ngModelChange"===a&&(p=!1!==e.filter$.next(s)&&p),p},null,null)),t["\u0275did"](81,147456,null,0,i.cc,[t.ElementRef],{focusIf:[0,"focusIf"]},null),t["\u0275did"](82,16384,null,0,sn.c,[t.Renderer2,t.ElementRef,[2,sn.a]],null,null),t["\u0275prd"](1024,null,sn.n,function(n){return[n]},[sn.c]),t["\u0275did"](84,671744,null,0,sn.s,[[8,null],[8,null],[8,null],[6,sn.n]],{model:[0,"model"]},{update:"ngModelChange"}),t["\u0275pid"](131072,q.AsyncPipe,[t.ChangeDetectorRef]),t["\u0275prd"](2048,null,sn.o,null,[sn.s]),t["\u0275did"](87,16384,null,0,sn.p,[[4,sn.o]],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n                    "])),(n()(),t["\u0275ted"](-1,null,["\n                    "])),(n()(),t["\u0275and"](16777216,null,null,1,null,hn)),t["\u0275did"](91,16384,null,0,q.NgIf,[t.ViewContainerRef,t.TemplateRef],{ngIf:[0,"ngIf"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n                "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275and"](0,null,null,0))],function(n,a){var s=a.component,p=n(a,2,0,!0,!1,!1);n(a,1,0,p),n(a,5,0,s.modalOpen,!0),n(a,13,0),n(a,33,0,s.components,s.query),n(a,37,0,"keywords","Text Keywords","Add a keyword"),n(a,42,0,"any","ANY of the following","or",s.placeholders.any),n(a,47,0,"all","ALL of the following",s.placeholders.all),n(a,52,0,"none","NONE of the following","not",s.placeholders.none),n(a,61,0),n(a,65,0),n(a,72,0,!0,"400px",!0,"Add Field",s.panelOpen),n(a,76,0,s.panelOpen,!0),n(a,81,0,s.panelOpen),n(a,84,0,t["\u0275unv"](a,84,0,t["\u0275nov"](a,85).transform(s.filter$))),n(a,91,0,s.panelOpen)},function(n,a){var s=a.component;n(a,60,0,!s.valid),n(a,70,0,s.panelOpen,t["\u0275nov"](a,72).open,t["\u0275nov"](a,72).inline,t["\u0275nov"](a,72).modal,t["\u0275nov"](a,72).animate,t["\u0275nov"](a,72).componentWidth),n(a,80,0,t["\u0275nov"](a,87).ngClassUntouched,t["\u0275nov"](a,87).ngClassTouched,t["\u0275nov"](a,87).ngClassPristine,t["\u0275nov"](a,87).ngClassDirty,t["\u0275nov"](a,87).ngClassValid,t["\u0275nov"](a,87).ngClassInvalid,t["\u0275nov"](a,87).ngClassPending)})}function fn(n){return t["\u0275vid"](0,[t["\u0275qud"](671088640,1,{searchBuilderContent:0}),(n()(),t["\u0275eld"](1,0,null,null,4,"button",[["class","btn button-primary"],["type","button"]],null,[[null,"click"]],function(n,a,s){var t=!0;return"click"===a&&(t=0!=(n.component.modalOpen=!0)&&t),t},null,null)),t["\u0275did"](2,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](4,0,null,null,0,"span",[["aria-hidden","true"],["class","hpe-icon hpe-deployment m-r-xs"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Launch Search Builder Modal\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](7,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Query"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](10,0,null,null,1,"pre",[],null,null,null,null,null)),(n()(),t["\u0275ted"](11,null,["",""])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275and"](16777216,null,null,1,null,gn)),t["\u0275did"](15,16384,null,0,q.NgIf,[t.ViewContainerRef,t.TemplateRef],{ngIf:[0,"ngIf"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](17,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](19,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The Search Builder provides a visual way for a user to easily build up complex search queries. It can be used both standalone\n    and within a modal.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](22,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Builder Component"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](25,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The "])),(n()(),t["\u0275eld"](27,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-search-builder"])),(n()(),t["\u0275ted"](-1,null,[" component is designed to act as a container for\n    "])),(n()(),t["\u0275eld"](30,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-search-group"])),(n()(),t["\u0275ted"](-1,null,[" components. It will be responsible for creating the overall search query object. It can also be\n    used to define custom components that can be used to create search queries.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](34,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following properties can be used to interact with and to configure the search builder:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](37,0,null,null,11,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,A.b,A.a)),t["\u0275did"](38,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](40,0,null,0,8,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](41,0,null,null,2,"tr",[["name","query"],["type","SearchBuilderQuery"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](42,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If defined this will populate the search builder with the specified fields and values\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](45,0,null,null,2,"tr",[["name","components"],["type","SearchBuilderComponentDefinition[]"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](46,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If specified, this allows custom components to be used within the search builder\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](50,0,null,null,17,"uxd-api-properties",[["tableTitle","Outputs"]],null,null,null,A.b,A.a)),t["\u0275did"](51,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](53,0,null,0,14,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](54,0,null,null,2,"tr",[["name","queryChange"],["type","SearchBuilderQuery"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](55,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This event will fire whenever the query has been modified. It will contain the latest query value\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](58,0,null,null,8,"tr",[["name","valid"],["type","boolean"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](59,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This will fire whenever the search builders validity changes. It will provide a boolean representing the validity of the search query.\n        A value of "])),(n()(),t["\u0275eld"](61,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["true"])),(n()(),t["\u0275ted"](-1,0,[" will be given if the query is valid and a value of "])),(n()(),t["\u0275eld"](64,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,0,[" when it is invalid.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n\n"])),(n()(),t["\u0275eld"](69,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Group Component"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](72,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The "])),(n()(),t["\u0275eld"](74,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-search-builder-group"])),(n()(),t["\u0275ted"](-1,null,[" component allows us to group related search terms. Each group has an operator,\n    either "])),(n()(),t["\u0275eld"](77,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["and"])),(n()(),t["\u0275ted"](-1,null,[", "])),(n()(),t["\u0275eld"](80,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["or"])),(n()(),t["\u0275ted"](-1,null,[" or "])),(n()(),t["\u0275eld"](83,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["not"])),(n()(),t["\u0275ted"](-1,null,[" to describe how these search terms are related.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](87,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The following attributes can be used to customize and configure the "])),(n()(),t["\u0275eld"](89,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-search-builder-group"])),(n()(),t["\u0275ted"](-1,null,[" component:\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](93,0,null,null,27,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,A.b,A.a)),t["\u0275did"](94,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](96,0,null,0,24,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](97,0,null,null,2,"tr",[["name","id"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](98,49152,null,0,L.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This is a unique identifier for this group.\n        This will be used in the search query object to identify which fields belong to this group.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](101,0,null,null,2,"tr",[["name","header"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](102,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        The header to be displayed above the search group.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](105,0,null,null,2,"tr",[["defaultValue","'and'"],["name","operator"],["type","'and' | 'or' | 'not'"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](106,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        The operator to be displayed beside the group.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](109,0,null,null,2,"tr",[["defaultValue","Add a field"],["name","addText"],["type","string"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](110,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Allows customization of the text beside the add field button.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](113,0,null,null,2,"tr",[["defaultValue","false"],["name","showPlaceholder"],["type","boolean"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](114,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If true a placeholder field will be displayed. One common use case is to display a panel\n        containing a list of potential fields when the user clicks the 'Add a field' button. This allows\n        the user to pick the desired field. The placeholder could be shown until a field is selected.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](117,0,null,null,2,"tr",[["name","placeholder"],["type","TemplateRef"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](118,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Allows a custom template to be used as the placeholder.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](122,0,null,null,11,"uxd-api-properties",[["tableTitle","Outputs"]],null,null,null,A.b,A.a)),t["\u0275did"](123,49152,null,0,$.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](125,0,null,0,8,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](126,0,null,null,2,"tr",[["name","add"],["type","void"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](127,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This will be fired when the user clicks the 'Add a field' button. This event should be used to add\n        a new entry to the query object.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](130,0,null,null,2,"tr",[["name","remove"],["type","SearchBuilderGroupQuery"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](131,49152,null,0,L.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This will be fired when the user clicks the remove button. The field being removed will be emitted.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](135,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Search Components"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](138,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The Search Builder comes with several prebuilt components for you to easily consume and configure.\n    To begin consuming these components you must first create a components array in your component class.\n    This allows you to define each type of field you need, to specify which component should be used and\n    provide any additional configuration.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](141,0,null,null,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](142,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](144,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following prebuilt components are available to use:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](147,0,null,null,181,"uxd-api-properties",[],null,null,null,A.b,A.a)),t["\u0275did"](148,49152,null,0,$.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](150,0,null,0,178,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](151,0,null,null,23,"tr",[["name","SearchTextComponent"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](152,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](154,0,null,0,1,"p",[["class","m-b"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A simple text input component. The following configuration options are available:"])),(n()(),t["\u0275ted"](-1,0,["\n\n        "])),(n()(),t["\u0275eld"](157,0,null,0,16,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](159,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](160,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["label"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a label above the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](164,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](165,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["placeholder"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a placeholder in the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](169,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](170,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["validation"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will allow custom validation to be used to determine if this field is valid."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](176,0,null,null,23,"tr",[["name","SearchDateComponent"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](177,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](179,0,null,0,1,"p",[["class","m-b"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A date picker component. The following configuration options are available:"])),(n()(),t["\u0275ted"](-1,0,["\n\n        "])),(n()(),t["\u0275eld"](182,0,null,0,16,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](184,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](185,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["label"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a label above the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](189,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](190,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["placeholder"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a placeholder in the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](194,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](195,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["validation"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will allow custom validation to be used to determine if this field is valid."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](201,0,null,null,44,"tr",[["name","SearchDateRangeComponent"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](202,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](204,0,null,0,1,"p",[["class","m-b"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A date range picker component. The following configuration options are available:"])),(n()(),t["\u0275ted"](-1,0,["\n\n        "])),(n()(),t["\u0275eld"](207,0,null,0,37,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](209,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](210,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["label"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a label above the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](214,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](215,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["validation"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will allow custom validation to be used to determine if the fields are valid."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](219,0,null,null,6,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](220,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["fromLabel"])),(n()(),t["\u0275ted"](-1,null,[" - Defines the text displayed beside the first date picker. Defaults to "])),(n()(),t["\u0275eld"](223,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["From"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](227,0,null,null,6,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](228,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["toLabel"])),(n()(),t["\u0275ted"](-1,null,[" - Defines the text displayed beside the second date picker. Defaults to "])),(n()(),t["\u0275eld"](231,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](235,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](236,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["fromPlaceholder"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a placeholder in the first date picker."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](240,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](241,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["toPlaceholder"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a placeholder in the second date picker."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](247,0,null,null,80,"tr",[["name","SearchDateComponent"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](248,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](250,0,null,0,1,"p",[["class","m-b"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A select component allowing both single and multiple selection. The following configuration options are available:"])),(n()(),t["\u0275ted"](-1,0,["\n\n        "])),(n()(),t["\u0275eld"](253,0,null,0,66,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](255,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](256,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["label"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a label above the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](260,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](261,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["placeholder"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will display a placeholder in the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](265,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](266,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["validation"])),(n()(),t["\u0275ted"](-1,null,[" - If specified will allow custom validation to be used to determine if this field is valid."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](270,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](271,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["options"])),(n()(),t["\u0275ted"](-1,null,[" - A list of selectable options or a function to get options."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](275,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](276,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["multiple"])),(n()(),t["\u0275ted"](-1,null,[" - Specifies whether to allow multiple items to be selected."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](280,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](281,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["dropDirection"])),(n()(),t["\u0275ted"](-1,null,[" - Specifies whether the dropdown should appear below or above the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](285,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](286,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["allowNull"])),(n()(),t["\u0275ted"](-1,null,[" - Controls whether the value of the single select control can be cleared by deleting the selected value in the input field."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](290,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](291,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["disabled"])),(n()(),t["\u0275ted"](-1,null,[" - Controls the disabled state of the tag input."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](295,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](296,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["maxHeight"])),(n()(),t["\u0275ted"](-1,null,[" - The maximum height of the typeahead dropdown, as a CSS value."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](300,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](301,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["pageSize"])),(n()(),t["\u0275ted"](-1,null,[" - The number of options to request in a page."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](305,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](306,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["loadingTemplate"])),(n()(),t["\u0275ted"](-1,null,[" - A template which will be rendered in the dropdown while options are being loaded."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](310,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](311,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["optionTemplate"])),(n()(),t["\u0275ted"](-1,null,[" - A template which will be rendered in the dropdown for each option."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](315,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](316,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["noOptionsTemplate"])),(n()(),t["\u0275ted"](-1,null,[" - A template which will be rendered in the dropdown if no options match the current filter value."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n\n        "])),(n()(),t["\u0275eld"](321,0,null,0,5,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Full information on the select configuration options can be found on the "])),(n()(),t["\u0275eld"](323,0,null,null,2,"a",[["routerLink","/components/select"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,324).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p},null,null)),t["\u0275did"](324,671744,null,0,H.o,[H.m,H.a,q.LocationStrategy],{routerLink:[0,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["select component page"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](330,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Custom Search Components"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](333,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    A custom search component can be created simply by creating an Angular component and having it extend\n    "])),(n()(),t["\u0275eld"](335,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["BaseSearchComponent"])),(n()(),t["\u0275ted"](-1,null,[".\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](339,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Simply give the class a "])),(n()(),t["\u0275eld"](341,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["type"])),(n()(),t["\u0275ted"](-1,null,[" property which will be the component's identifier, and have it call\n    the "])),(n()(),t["\u0275eld"](344,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["value"])),(n()(),t["\u0275ted"](-1,null,[" property passing it the latest value when changes are made.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](348,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    A "])),(n()(),t["\u0275eld"](350,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["config"])),(n()(),t["\u0275ted"](-1,null,[" object is also available that will contain any configuration options you want to support.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](354,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The function can also override the default "])),(n()(),t["\u0275eld"](356,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["validate"])),(n()(),t["\u0275ted"](-1,null,[" function to provide custom validation. This function should\n    update the "])),(n()(),t["\u0275eld"](359,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["valid"])),(n()(),t["\u0275ted"](-1,null,[" property on the class.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](363,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    For example, we can create a component to allow users to enter a number as a search query.\n    The following code can be used to create the component:\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](366,0,null,null,18,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](368,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,4,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](371,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](372,180224,[[4,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](374,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](375,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](378,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](379,180224,[[4,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](381,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](382,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](386,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Custom components should then be defined in the "])),(n()(),t["\u0275eld"](388,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["components"])),(n()(),t["\u0275ted"](-1,null,[" property on the "])),(n()(),t["\u0275eld"](391,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-search-builder"])),(n()(),t["\u0275ted"](-1,null,[" component, e.g.:\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](395,0,null,null,18,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](397,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,5,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](400,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](401,180224,[[5,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](403,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](404,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](407,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](408,180224,[[5,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](410,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](411,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](415,0,null,null,10,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](417,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](419,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note:"])),(n()(),t["\u0275ted"](-1,null,[" Any custom search components should be added to the "])),(n()(),t["\u0275eld"](422,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["entryComponents"])),(n()(),t["\u0275ted"](-1,null,[" of the appropriate module.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](427,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Focus Service"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](430,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Since the search components are not directly exposed, "])),(n()(),t["\u0275eld"](432,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["SearchBuilderFocusService"])),(n()(),t["\u0275ted"](-1,null,[" can be injected into\n    a controller to manage browser focus within the search builder.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](436,0,null,null,27,"uxd-api-properties",[],null,null,null,A.b,A.a)),t["\u0275did"](437,49152,null,0,$.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](439,0,null,0,24,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](440,0,null,null,18,"tr",[["args","groupId: string, index: number"],["name","setFocus"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](441,49152,null,0,L.a,[],{name:[0,"name"],args:[1,"args"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Set focus on a search builder component.\n        "])),(n()(),t["\u0275eld"](443,0,null,0,14,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](445,0,null,null,6,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](446,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["groupId"])),(n()(),t["\u0275ted"](-1,null,[": The "])),(n()(),t["\u0275eld"](449,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["id"])),(n()(),t["\u0275ted"](-1,null,[" of the group containing the component."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](453,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](454,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["index"])),(n()(),t["\u0275ted"](-1,null,[": The (zero-based) index of the component."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](460,0,null,null,2,"tr",[["name","clearFocus"],["uxd-api-property",""]],null,null,null,j.b,j.a)),t["\u0275did"](461,49152,null,0,L.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Removes focus from all components. If focus is not on a search builder component, this does nothing.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](465,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Accessibility"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](468,0,null,null,29,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](470,0,null,null,6,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        Consider using the "])),(n()(),t["\u0275eld"](472,0,null,null,3,"a",[["href","https://material.angular.io/cdk/a11y/api#CdkTrapFocus"]],null,null,null,null,null)),t["\u0275did"](473,212992,null,0,i.ib,[t.ElementRef,i.hc,i.c,t.NgZone,[2,i.Gc]],null,null),(n()(),t["\u0275eld"](474,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["cdkTrapFocus"])),(n()(),t["\u0275ted"](-1,null,["\n        directive if hosting the search builder within a modal.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](478,0,null,null,4,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        Use the "])),(n()(),t["\u0275eld"](480,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["SearchBuilderFocusService"])),(n()(),t["\u0275ted"](-1,null,[" to set focus on newly created search components.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](484,0,null,null,12,"li",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        If creating a custom search component, the inherited "])),(n()(),t["\u0275eld"](486,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["focus"])),(n()(),t["\u0275ted"](-1,null,[" property will be set to true when focus is\n        requested.\n        The "])),(n()(),t["\u0275eld"](489,0,null,null,3,"a",[["fragment","focus-if"],["routerLink","/components/utilities"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,490).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p},null,null)),t["\u0275did"](490,671744,null,0,H.o,[H.m,H.a,q.LocationStrategy],{fragment:[0,"fragment"],routerLink:[1,"routerLink"]},null),(n()(),t["\u0275eld"](491,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["focusIf"])),(n()(),t["\u0275ted"](-1,null,[" directive can be used in combination\n        with the "])),(n()(),t["\u0275eld"](494,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["focus"])),(n()(),t["\u0275ted"](-1,null,[" property to automatically apply focus to the appropriate control in the component.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](499,0,null,null,1,"h4",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Example Code"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](502,0,null,null,25,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,P.mc,P.Y)),t["\u0275prd"](512,null,i.We,i.We,[]),t["\u0275did"](504,5423104,null,1,i.Ue,[i.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,6,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](507,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,P.lc,P.X)),t["\u0275did"](508,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](510,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](511,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](514,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,P.lc,P.X)),t["\u0275did"](515,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](517,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](518,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](521,0,null,0,5,"ux-tab",[["heading","CSS"]],null,null,null,P.lc,P.X)),t["\u0275did"](522,180224,[[6,4]],0,i.Ne,[i.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](524,0,null,0,1,"uxd-snippet",[],null,null,null,M.b,M.a)),t["\u0275did"](525,114688,null,0,N.a,[],{content:[0,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,2,0),n(a,15,0,s.modalOpen),n(a,38,0,"Inputs"),n(a,42,0,"query","SearchBuilderQuery"),n(a,46,0,"components","SearchBuilderComponentDefinition[]"),n(a,51,0,"Outputs"),n(a,55,0,"queryChange","SearchBuilderQuery"),n(a,59,0,"valid","boolean"),n(a,94,0,"Inputs"),n(a,98,0,"id",!0,"string"),n(a,102,0,"header","string"),n(a,106,0,"operator","'and' | 'or' | 'not'","'and'"),n(a,110,0,"addText","string","Add a field"),n(a,114,0,"showPlaceholder","boolean","false"),n(a,118,0,"placeholder","TemplateRef"),n(a,123,0,"Outputs"),n(a,127,0,"add","void"),n(a,131,0,"remove","SearchBuilderGroupQuery"),n(a,142,0,s.snippets.compiled.componentDefinitionTs),n(a,152,0,"SearchTextComponent"),n(a,177,0,"SearchDateComponent"),n(a,202,0,"SearchDateRangeComponent"),n(a,248,0,"SearchDateComponent"),n(a,324,0,"/components/select"),n(a,368,0,!1),n(a,372,0,"HTML"),n(a,375,0,s.snippets.compiled.customComponentHtml),n(a,379,0,"TypeScript"),n(a,382,0,s.snippets.compiled.customComponentTs),n(a,397,0,!1),n(a,401,0,"HTML"),n(a,404,0,s.snippets.compiled.searchBuilderComponentsHtml),n(a,408,0,"TypeScript"),n(a,411,0,s.snippets.compiled.searchBuilderComponentsTs),n(a,441,0,"setFocus","groupId: string, index: number"),n(a,461,0,"clearFocus"),n(a,473,0),n(a,490,0,"focus-if","/components/utilities"),n(a,504,0,!1),n(a,508,0,"HTML"),n(a,511,0,s.snippets.compiled.appHtml),n(a,515,0,"TypeScript"),n(a,518,0,s.snippets.compiled.appTs),n(a,522,0,"CSS"),n(a,525,0,s.snippets.compiled.appCss)},function(n,a){n(a,11,0,a.component.preview),n(a,323,0,t["\u0275nov"](a,324).target,t["\u0275nov"](a,324).href),n(a,366,0,"left"===t["\u0275nov"](a,368).stacked,"right"===t["\u0275nov"](a,368).stacked),n(a,395,0,"left"===t["\u0275nov"](a,397).stacked,"right"===t["\u0275nov"](a,397).stacked),n(a,489,0,t["\u0275nov"](a,490).target,t["\u0275nov"](a,490).href),n(a,502,0,"left"===t["\u0275nov"](a,504).stacked,"right"===t["\u0275nov"](a,504).stacked)})}function vn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-search-builder",[],null,null,null,fn,dn)),t["\u0275did"](1,180224,null,0,v,[d.a,i.be],null,null)],null,null)}var yn=t["\u0275ccf"]("uxd-search-builder",v,vn,{},{},[]),bn=s("dWZg"),xn=s("Fzqc"),wn=s("M2Lx"),Cn=s("x4zH"),Sn=s("qina"),Tn=s("zCE2"),Pn=s("4c35"),Fn=s("FLOw"),On=s("XtaT");s.d(a,"ComponentsSearchModuleNgFactory",function(){return Rn});var Rn=t["\u0275cmf"](S,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[T.a,P.ob,P.a,F.a,O.a,R.a,B.a,P.nb,P.kb,P.lb,P.mb,D.a,W,J,an,un,yn]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,q.NgLocalization,q.NgLocaleLocalization,[t.LOCALE_ID,[2,q["\u0275angular_packages_common_common_a"]]]),t["\u0275mpd"](4608,bn.a,bn.a,[]),t["\u0275mpd"](4608,rn.i,rn.i,[bn.a]),t["\u0275mpd"](4608,rn.h,rn.h,[rn.i,t.NgZone,q.DOCUMENT]),t["\u0275mpd"](136192,rn.c,rn.b,[[3,rn.c],q.DOCUMENT]),t["\u0275mpd"](5120,rn.l,rn.k,[[3,rn.l],[2,rn.j],q.DOCUMENT]),t["\u0275mpd"](5120,rn.g,rn.e,[[3,rn.g],t.NgZone,bn.a]),t["\u0275mpd"](5120,i.H,i.r,[[3,i.H],[2,i.s]]),t["\u0275mpd"](4608,i.c,i.c,[[2,i.a]]),t["\u0275mpd"](4608,i.S,i.S,[]),t["\u0275mpd"](5120,i.gc,i.sb,[[3,i.gc]]),t["\u0275mpd"](4608,i.hc,i.hc,[rn.g,i.c,i.gc,[2,i.a],t.RendererFactory2]),t["\u0275mpd"](4608,i.Hc,i.Hc,[t.RendererFactory2]),t["\u0275mpd"](4608,sn.B,sn.B,[]),t["\u0275mpd"](6144,xn.b,null,[q.DOCUMENT]),t["\u0275mpd"](4608,xn.c,xn.c,[[2,xn.b]]),t["\u0275mpd"](5120,pn.c,pn.a,[[3,pn.c],t.NgZone,bn.a]),t["\u0275mpd"](5120,pn.f,pn.e,[[3,pn.f],bn.a,t.NgZone]),t["\u0275mpd"](4608,tn.f,tn.f,[pn.c,pn.f,t.NgZone,q.DOCUMENT]),t["\u0275mpd"](5120,tn.b,tn.g,[[3,tn.b],q.DOCUMENT]),t["\u0275mpd"](4608,tn.e,tn.e,[pn.f,q.DOCUMENT]),t["\u0275mpd"](5120,tn.c,tn.j,[[3,tn.c],q.DOCUMENT]),t["\u0275mpd"](4608,tn.a,tn.a,[tn.f,tn.b,t.ComponentFactoryResolver,tn.e,tn.c,t.ApplicationRef,t.Injector,t.NgZone,q.DOCUMENT]),t["\u0275mpd"](5120,tn.h,tn.i,[tn.a]),t["\u0275mpd"](4608,wn.b,wn.b,[]),t["\u0275mpd"](4608,i.pf,i.pf,[]),t["\u0275mpd"](4608,i.Ad,i.Ad,[]),t["\u0275mpd"](4608,i.wf,i.wf,[]),t["\u0275mpd"](4608,i.be,i.be,[]),t["\u0275mpd"](5120,"flotDataService",Cn.b,["$injector"]),t["\u0275mpd"](5120,"lineDataService",Cn.c,["$injector"]),t["\u0275mpd"](1073742336,q.CommonModule,q.CommonModule,[]),t["\u0275mpd"](1073742336,bn.b,bn.b,[]),t["\u0275mpd"](1073742336,rn.a,rn.a,[]),t["\u0275mpd"](1073742336,i.I,i.I,[]),t["\u0275mpd"](1073742336,i.b,i.b,[]),t["\u0275mpd"](1073742336,i.e,i.e,[]),t["\u0275mpd"](1073742336,Sn.a,Sn.a,[]),t["\u0275mpd"](1073742336,Tn.a,Tn.a,[]),t["\u0275mpd"](1073742336,i.rb,i.rb,[]),t["\u0275mpd"](1073742336,sn.y,sn.y,[]),t["\u0275mpd"](1073742336,sn.l,sn.l,[]),t["\u0275mpd"](1073742336,xn.a,xn.a,[]),t["\u0275mpd"](1073742336,Pn.c,Pn.c,[]),t["\u0275mpd"](1073742336,pn.b,pn.b,[]),t["\u0275mpd"](1073742336,tn.d,tn.d,[]),t["\u0275mpd"](1073742336,wn.c,wn.c,[]),t["\u0275mpd"](1073742336,i.B,i.B,[]),t["\u0275mpd"](1073742336,i.of,i.of,[]),t["\u0275mpd"](1073742336,i.Dd,i.Dd,[]),t["\u0275mpd"](1073742336,H.p,H.p,[[2,H.v],[2,H.m]]),t["\u0275mpd"](1073742336,i.Zd,i.Zd,[]),t["\u0275mpd"](1073742336,Fn.a,Fn.a,[]),t["\u0275mpd"](1073742336,i.zd,i.zd,[]),t["\u0275mpd"](1073742336,On.a,On.a,[]),t["\u0275mpd"](1073742336,i.dc,i.dc,[]),t["\u0275mpd"](1073742336,i.Cc,i.Cc,[]),t["\u0275mpd"](1073742336,r.a,r.a,[]),t["\u0275mpd"](1073742336,i.Hd,i.Hd,[]),t["\u0275mpd"](1073742336,i.Je,i.Je,[]),t["\u0275mpd"](1073742336,i.bf,i.bf,[]),t["\u0275mpd"](1073742336,i.gb,i.gb,[]),t["\u0275mpd"](1073742336,i.yc,i.yc,[]),t["\u0275mpd"](1073742336,i.xf,i.xf,[]),t["\u0275mpd"](1073742336,i.Ye,i.Ye,[]),t["\u0275mpd"](1073742336,i.pe,i.pe,[]),t["\u0275mpd"](1073742336,i.ee,i.ee,[]),t["\u0275mpd"](1073742336,i.oe,i.oe,[]),t["\u0275mpd"](1073742336,i.Ve,i.Ve,[]),t["\u0275mpd"](1073742336,i.hf,i.hf,[]),t["\u0275mpd"](1073742336,i.lf,i.lf,[]),t["\u0275mpd"](1073742336,Cn.a,Cn.a,[]),t["\u0275mpd"](1073742336,S,S,[t.ComponentFactoryResolver,e.b]),t["\u0275mpd"](1024,H.k,function(){return[[{path:"**",component:p.a,data:C}]]},[])])})},gy7e:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseSearchComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'my-number-search\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./my-number-search.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyNumberSearchComponent</span> <span class="token keyword">extends</span> <span class="token class-name">BaseSearchComponent</span> <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">\'number\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { BaseSearchComponent } from '@ux-aspects/ux-aspects';\n\n@Component({\n    selector: 'my-number-search',\n    templateUrl: './my-number-search.component.html'\n})\nexport class MyNumberSearchComponent extends BaseSearchComponent {\n    type: string = 'number';\n}"}},k6qR:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'SearchHistoryDemoModalCtrl\'</span><span class="token punctuation">,</span> SearchHistoryDemoModalCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nSearchHistoryDemoModalCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$modalInstance\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">SearchHistoryDemoModalCtrl</span><span class="token punctuation">(</span>$modalInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>selectOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        placeholder<span class="token punctuation">:</span> <span class="token string">\'Select a type\'</span><span class="token punctuation">,</span>\n        scroll<span class="token punctuation">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>types <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"String"</span><span class="token punctuation">,</span> <span class="token string">"User"</span><span class="token punctuation">,</span> <span class="token string">"File"</span><span class="token punctuation">,</span> <span class="token string">"Mail"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>selectedType <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>any <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>all <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>exclude <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> typeIcon <span class="token operator">=</span> <span class="token punctuation">{</span>\n        string<span class="token punctuation">:</span> <span class="token string">\'hpe-search\'</span><span class="token punctuation">,</span>\n        user<span class="token punctuation">:</span> <span class="token string">\'hpe-user\'</span><span class="token punctuation">,</span>\n        file<span class="token punctuation">:</span> <span class="token string">\'hpe-folder\'</span><span class="token punctuation">,</span>\n        mail<span class="token punctuation">:</span> <span class="token string">\'hpe-mail\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> searchObj <span class="token operator">=</span> <span class="token punctuation">{</span>\n            icon<span class="token punctuation">:</span> typeIcon<span class="token punctuation">[</span>vm<span class="token punctuation">.</span>selectedType<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            text<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>text<span class="token punctuation">,</span>\n            any<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>any<span class="token punctuation">,</span>\n            all<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>all<span class="token punctuation">,</span>\n            exclude<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>exclude\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        $modalInstance<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>searchObj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        $modalInstance<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token string">"cancel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:'angular.module("app").controller(\'SearchHistoryDemoModalCtrl\', SearchHistoryDemoModalCtrl);\n\nSearchHistoryDemoModalCtrl.$inject = [\'$modalInstance\'];\n\nfunction SearchHistoryDemoModalCtrl($modalInstance) {\n    var vm = this;\n\n    vm.selectOptions = {\n        placeholder: \'Select a type\',\n        scroll: false\n    };\n\n    vm.types = ["String", "User", "File", "Mail"];\n\n    vm.selectedType = "";\n    vm.text = "";\n    vm.any = "";\n    vm.all = "";\n    vm.exclude = "";\n\n    var typeIcon = {\n        string: \'hpe-search\',\n        user: \'hpe-user\',\n        file: \'hpe-folder\',\n        mail: \'hpe-mail\'\n    };\n\n    vm.search = function () {\n        var searchObj = {\n            icon: typeIcon[vm.selectedType.toLowerCase()],\n            text: vm.text,\n            any: vm.any,\n            all: vm.all,\n            exclude: vm.exclude\n        };\n        $modalInstance.close(searchObj);\n    };\n\n    vm.cancel = function () {\n        $modalInstance.dismiss("cancel");\n    };\n}'}},l2Kv:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-toolbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-toolbar-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toolbar-search</span> <span class="token attr-name">[(expanded)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expanded<span class="token punctuation">"</span></span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">(search)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onSearch($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">uxToolbarSearchField</span> <span class="token attr-name">#searchField</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span> <span class="token attr-name">[(ngModel)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">uxToolbarSearchButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Toggle Search<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary ux-toolbar-search-clear<span class="token punctuation">"</span></span>\n                <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchText = <span class="token punctuation">\'</span><span class="token punctuation">\'</span>; searchField.focus()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-close<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toolbar-search</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-edit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-toolbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Grid View<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>List View<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-toolbar-search</span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">(search)</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onSearchRight($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">uxToolbarSearchField</span> <span class="token attr-name">#searchFieldRight</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span>\n                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">uxToolbarSearchButton</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-link btn-icon button-secondary<span class="token punctuation">"</span></span>\n                <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Toggle Search<span class="token punctuation">"</span></span> <span class="token attr-name">uxTooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-toolbar-search</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Searched for: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>{{searchedFor}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>',example:'<div class="demo-toolbar">\n\n    <div class="demo-toolbar-left">\n        <ux-toolbar-search [(expanded)]="expanded" direction="right" (search)="onSearch($event)">\n            <input uxToolbarSearchField #searchField type="text" class="form-control" placeholder="Search"\n                aria-label="Search" [(ngModel)]="searchText">\n            <button uxToolbarSearchButton type="button" class="btn btn-link btn-icon button-secondary"\n                aria-label="Toggle Search" uxTooltip="Search">\n                <span class="hpe-icon hpe-search"></span>\n            </button>\n            <button *ngIf="searchText" type="button"\n                class="btn btn-link btn-icon button-secondary ux-toolbar-search-clear"\n                (click)="searchText = \'\'; searchField.focus()">\n                <span class="hpe-icon hpe-close"></span>\n            </button>\n        </ux-toolbar-search>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Add">\n            <span class="hpe-icon hpe-add"></span>\n        </button>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Edit">\n            <span class="hpe-icon hpe-edit"></span>\n        </button>\n    </div>\n\n    <div class="demo-toolbar-right">\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="Grid View">\n            <span class="hpe-icon hpe-grid"></span>\n        </button>\n        <button type="button" class="btn btn-link btn-icon button-secondary" uxTooltip="List View">\n            <span class="hpe-icon hpe-list"></span>\n        </button>\n        <ux-toolbar-search direction="left" (search)="onSearchRight($event)">\n            <input uxToolbarSearchField #searchFieldRight type="text" class="form-control"\n                placeholder="Search" aria-label="Search">\n            <button uxToolbarSearchButton type="button" class="btn btn-link btn-icon button-secondary"\n                aria-label="Toggle Search" uxTooltip="Search">\n                <span class="hpe-icon hpe-search"></span>\n            </button>\n        </ux-toolbar-search>\n    </div>\n\n</div>\n\n<p class="m-t-md">Searched for: <strong>{{searchedFor}}</strong></p>'}},m7XT:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>search-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>File name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Enter File Name<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>model<span class="token punctuation">"</span></span> <span class="token attr-name">force-focus</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>search-component</span><span class="token punctuation">></span></span>\n',example:'<search-component>\n    <label class="form-label">File name</label>\n    <input placeholder="Enter File Name" class="form-control" ng-model="model" force-focus />\n</search-component>\n'}},ovum:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'SearchToolbarDemoCtrl\'</span><span class="token punctuation">,</span> SearchToolbarDemoCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">SearchToolbarDemoCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Search logic goes here</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('SearchToolbarDemoCtrl', SearchToolbarDemoCtrl);\n\nfunction SearchToolbarDemoCtrl() {\n    var vm = this;\n\n    vm.list = [];\n    for (var i = 0; i < 15; i += 1) {\n        vm.list.push(chance.name());\n    }\n\n    vm.search = function (text) {\n        // Search logic goes here\n    };\n}"}},pO4k:function(n,a,s){var t={"./app.css":"a6bD","./app.html":"Zy1L","./app.ts":"rtHk","./component-definition.ts":"zYMI","./custom-component.html":"Vpsy","./custom-component.ts":"gy7e","./search-builder-components.html":"MDq8","./search-builder-components.ts":"dS+D"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="pO4k"},ri8i:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'SearchBuilderDemoCtrl\'</span><span class="token punctuation">,</span> SearchBuilderDemoCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nSearchBuilderDemoCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$modal\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">SearchBuilderDemoCtrl</span><span class="token punctuation">(</span>$modal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// store a stringified version of the search query object</span>\n    vm<span class="token punctuation">.</span>searchQuery <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token string">"keywords"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">"keyword-0"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token string">"component"</span><span class="token punctuation">:</span> <span class="token string">"keyword"</span><span class="token punctuation">,</span>\n                <span class="token string">"value"</span><span class="token punctuation">:</span> <span class="token keyword">null</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">openModal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">var</span> modalInstance <span class="token operator">=</span> $modal<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            templateUrl<span class="token punctuation">:</span> <span class="token string">\'modalLayout.html\'</span><span class="token punctuation">,</span>\n            controller<span class="token punctuation">:</span> <span class="token string">\'SearchBuilderDemoModalCtrl\'</span><span class="token punctuation">,</span>\n            controllerAs<span class="token punctuation">:</span> <span class="token string">\'vm\'</span><span class="token punctuation">,</span>\n            keyboard<span class="token punctuation">:</span> <span class="token string">\'true\'</span><span class="token punctuation">,</span>\n            size<span class="token punctuation">:</span> <span class="token string">\'lg\'</span><span class="token punctuation">,</span>\n            windowClass<span class="token punctuation">:</span> <span class="token string">\'search-builder-modal-window\'</span><span class="token punctuation">,</span>\n            resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                searchQuery<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//provide the modal with the existing search query if there is one</span>\n                    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>searchQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        modalInstance<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">===</span> <span class="token string">"cancel"</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//store the search query as a stringified version of the object</span>\n            vm<span class="token punctuation">.</span>searchQuery <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('SearchBuilderDemoCtrl', SearchBuilderDemoCtrl);\n\nSearchBuilderDemoCtrl.$inject = ['$modal'];\n\nfunction SearchBuilderDemoCtrl($modal) {\n    var vm = this;\n\n    // store a stringified version of the search query object\n    vm.searchQuery = JSON.stringify({\n        \"keywords\": {\n            \"keyword-0\": {\n                \"component\": \"keyword\",\n                \"value\": null\n            }\n        }\n    }, null, 4);\n\n\n    vm.openModal = function () {\n\n        var modalInstance = $modal.open({\n            animation: false,\n            templateUrl: 'modalLayout.html',\n            controller: 'SearchBuilderDemoModalCtrl',\n            controllerAs: 'vm',\n            keyboard: 'true',\n            size: 'lg',\n            windowClass: 'search-builder-modal-window',\n            resolve: {\n                searchQuery: function () {\n                    //provide the modal with the existing search query if there is one\n                    return JSON.parse(vm.searchQuery);\n                }\n            }\n        });\n\n        modalInstance.result.then(function (result) {\n            if (result === \"cancel\") return;\n\n            //store the search query as a stringified version of the object\n            vm.searchQuery = JSON.stringify(result, null, 4);\n        });\n    };\n}"}},rtHk:function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ElementRef<span class="token punctuation">,</span> OnDestroy<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    SearchBuilderComponentDefinition<span class="token punctuation">,</span>\n    SearchBuilderFocusService<span class="token punctuation">,</span>\n    SearchBuilderQuery<span class="token punctuation">,</span>\n    SearchDateRangeComponent<span class="token punctuation">,</span>\n    SearchDateRangeConfig<span class="token punctuation">,</span>\n    SearchSelectComponent<span class="token punctuation">,</span>\n    SearchSelectConfig<span class="token punctuation">,</span>\n    SearchTextComponent<span class="token punctuation">,</span>\n    SearchTextConfig\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BsModalService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ngx-bootstrap/modal\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BehaviorSubject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/internal/BehaviorSubject\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> takeUntil <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> first <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/operators/first\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Subject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/Subject\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token keyword">implements</span> <span class="token class-name">OnDestroy</span> <span class="token punctuation">{</span>\n\n    query<span class="token punctuation">:</span> SearchBuilderQuery <span class="token operator">=</span> <span class="token punctuation">{</span>\n        keywords<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                type<span class="token punctuation">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token keyword">null</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        any<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        all<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        none<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    preview<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    valid<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    filter$ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BehaviorSubject</span><span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    modalOpen<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    panelOpen<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    placeholders <span class="token operator">=</span> <span class="token punctuation">{</span>\n        any<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        all<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        none<span class="token punctuation">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    components<span class="token punctuation">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter keywords\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter an Author\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Select Custodians\'</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCustodians</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                multiple<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'date-range\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchDateRangeComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'Date range\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchDateRangeConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'file-name\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'File name\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter a File Name\'</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'file-type\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'File types\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Select File Types\'</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'AVI\'</span><span class="token punctuation">,</span> <span class="token string">\'BMP\'</span><span class="token punctuation">,</span> <span class="token string">\'CSV\'</span><span class="token punctuation">,</span> <span class="token string">\'DOC\'</span><span class="token punctuation">,</span> <span class="token string">\'EXE\'</span><span class="token punctuation">,</span> <span class="token string">\'GIF\'</span><span class="token punctuation">,</span> <span class="token string">\'JPG\'</span><span class="token punctuation">,</span> <span class="token string">\'MOV\'</span><span class="token punctuation">,</span> <span class="token string">\'PDF\'</span><span class="token punctuation">,</span> <span class="token string">\'PNG\'</span><span class="token punctuation">,</span> <span class="token string">\'PPT\'</span><span class="token punctuation">,</span>\n                    <span class="token string">\'RTF\'</span><span class="token punctuation">,</span> <span class="token string">\'TXT\'</span><span class="token punctuation">,</span> <span class="token string">\'XLS\'</span><span class="token punctuation">,</span> <span class="token string">\'ZIP\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                multiple<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'repository\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'Repository\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter a Repository\'</span><span class="token punctuation">,</span>\n                options<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'Filesystem\'</span><span class="token punctuation">,</span> <span class="token string">\'Records Manager\'</span><span class="token punctuation">,</span> <span class="token string">\'Email\'</span><span class="token punctuation">,</span> <span class="token string">\'Legacy Email\'</span><span class="token punctuation">,</span> <span class="token string">\'Archives\'</span><span class="token punctuation">,</span>\n                    <span class="token string">\'Legacy Archives\'</span><span class="token punctuation">,</span> <span class="token string">\'Miscellaneous\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                multiple<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'text\'</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> SearchTextComponent<span class="token punctuation">,</span>\n            config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                label<span class="token punctuation">:</span> <span class="token string">\'Text\'</span><span class="token punctuation">,</span>\n                placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter Text\'</span>\n            <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    fields<span class="token punctuation">:</span> SearchBuilderField<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Date Range\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'date-range\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'File Name\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'file-name\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'File Type\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'file-type\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Repository\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'repository\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">\'Text\'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">\'text\'</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    filteredFields<span class="token punctuation">:</span> SearchBuilderField<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span><span class="token string">\'searchBuilderContent\'</span><span class="token punctuation">)</span>\n    searchBuilderContent<span class="token punctuation">:</span> ElementRef<span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> _field$<span class="token punctuation">:</span> Subject<span class="token operator">&lt;</span>SearchBuilderField<span class="token operator">></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span>SearchBuilderField<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> _onDestroy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subject</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>\n        <span class="token keyword">private</span> _modalService<span class="token punctuation">:</span> BsModalService<span class="token punctuation">,</span>\n        <span class="token keyword">private</span> _searchBuilderFocusService<span class="token punctuation">:</span> SearchBuilderFocusService\n    <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// if the modal is closed by clicking on backdrop perform cancel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_modalService<span class="token punctuation">.</span>onHide<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Filter the field type list</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filter$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>value <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>filteredFields <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>field <span class="token operator">=></span>\n                field<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">ngOnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_onDestroy<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>modalOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>modalOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">addKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span>keywords<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">\'keyword\'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Set focus on the newly added field</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token string">\'keywords\'</span><span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">addField</span><span class="token punctuation">(</span>group<span class="token punctuation">:</span> string<span class="token punctuation">,</span> event<span class="token punctuation">:</span> MouseEvent<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span>event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>\n\n        <span class="token comment">// show the panel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// show the placeholder field</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>placeholders<span class="token punctuation">[</span>group<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// subscribe to only the next field event</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>field <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// remove the placeholder</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>placeholders<span class="token punctuation">[</span>group<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// if a field was selected then add it to the query</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n                <span class="token keyword">const</span> length <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">[</span>group<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> field<span class="token punctuation">.</span>type<span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token comment">// Set focus on the newly added field</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span>group<span class="token punctuation">,</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n\n                <span class="token comment">// Nothing selected so return focus to the original button</span>\n                button<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">showPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// clear any existing filters</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>filter$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// show the panel</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">onPanelEvent</span><span class="token punctuation">(</span>open<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// if closing indication that no field was chosen</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>open<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">selectField</span><span class="token punctuation">(</span>field<span class="token punctuation">:</span> SearchBuilderField<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>field<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// emit the selected field</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>_field$<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// close the panel</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>panelOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getCustodians</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> custodians<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            custodians<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> custodians<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">modalShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Set focus on the first field in the keywords group</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_searchBuilderFocusService<span class="token punctuation">.</span><span class="token function">setFocus</span><span class="token punctuation">(</span><span class="token string">\'keywords\'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">SearchBuilderField</span> <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> string<span class="token punctuation">;</span>\n    type<span class="token punctuation">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',example:"import { Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport {\n    SearchBuilderComponentDefinition,\n    SearchBuilderFocusService,\n    SearchBuilderQuery,\n    SearchDateRangeComponent,\n    SearchDateRangeConfig,\n    SearchSelectComponent,\n    SearchSelectConfig,\n    SearchTextComponent,\n    SearchTextConfig\n} from '@ux-aspects/ux-aspects';\nimport 'chance';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { takeUntil } from 'rxjs/operators';\nimport { first } from 'rxjs/operators/first';\nimport { Subject } from 'rxjs/Subject';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy {\n\n    query: SearchBuilderQuery = {\n        keywords: [\n            {\n                type: 'keyword',\n                value: null\n            }\n        ],\n        any: [],\n        all: [],\n        none: []\n    };\n\n    preview: string = JSON.stringify(this.query, null, 2);\n    valid: boolean = true;\n    filter$ = new BehaviorSubject<string>('');\n    modalOpen: boolean = false;\n    panelOpen: boolean = false;\n\n    placeholders = {\n        any: false,\n        all: false,\n        none: false\n    };\n\n    components: SearchBuilderComponentDefinition[] = [\n        {\n            name: 'keyword',\n            component: SearchTextComponent,\n            config: {\n                placeholder: 'Enter keywords'\n            } as SearchTextConfig\n        },\n        {\n            name: 'author',\n            component: SearchTextComponent,\n            config: {\n                label: 'Author',\n                placeholder: 'Enter an Author'\n            } as SearchTextConfig\n        },\n        {\n            name: 'custodian',\n            component: SearchSelectComponent,\n            config: {\n                label: 'Custodian',\n                placeholder: 'Select Custodians',\n                options: this.getCustodians(),\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'date-range',\n            component: SearchDateRangeComponent,\n            config: {\n                label: 'Date range'\n            } as SearchDateRangeConfig\n        },\n        {\n            name: 'file-name',\n            component: SearchTextComponent,\n            config: {\n                label: 'File name',\n                placeholder: 'Enter a File Name'\n            }\n        },\n        {\n            name: 'file-type',\n            component: SearchSelectComponent,\n            config: {\n                label: 'File types',\n                placeholder: 'Select File Types',\n                options: ['AVI', 'BMP', 'CSV', 'DOC', 'EXE', 'GIF', 'JPG', 'MOV', 'PDF', 'PNG', 'PPT',\n                    'RTF', 'TXT', 'XLS', 'ZIP'],\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'repository',\n            component: SearchSelectComponent,\n            config: {\n                label: 'Repository',\n                placeholder: 'Enter a Repository',\n                options: ['Filesystem', 'Records Manager', 'Email', 'Legacy Email', 'Archives',\n                    'Legacy Archives', 'Miscellaneous'],\n                multiple: true\n            } as SearchSelectConfig\n        },\n        {\n            name: 'text',\n            component: SearchTextComponent,\n            config: {\n                label: 'Text',\n                placeholder: 'Enter Text'\n            } as SearchTextConfig\n        }\n    ];\n\n    fields: SearchBuilderField[] = [\n        { title: 'Author', type: 'author', },\n        { title: 'Custodian', type: 'custodian' },\n        { title: 'Date Range', type: 'date-range' },\n        { title: 'File Name', type: 'file-name' },\n        { title: 'File Type', type: 'file-type' },\n        { title: 'Repository', type: 'repository' },\n        { title: 'Text', type: 'text' }\n    ];\n\n    filteredFields: SearchBuilderField[];\n\n    @ViewChild('searchBuilderContent')\n    searchBuilderContent: ElementRef<HTMLElement>;\n\n    private _field$: Subject<SearchBuilderField> = new Subject<SearchBuilderField>();\n    private _onDestroy = new Subject<void>();\n\n    constructor(\n        private _modalService: BsModalService,\n        private _searchBuilderFocusService: SearchBuilderFocusService\n    ) {\n        // if the modal is closed by clicking on backdrop perform cancel\n        this._modalService.onHide.pipe(takeUntil(this._onDestroy)).subscribe(() => this.cancel());\n\n        // Filter the field type list\n        this.filter$.pipe(takeUntil(this._onDestroy)).subscribe(value => {\n            this.filteredFields = this.fields.filter(field =>\n                field.title.toLowerCase().indexOf(value.toLowerCase()) >= 0\n            );\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n\n    save(): void {\n        this.preview = JSON.stringify(this.query, null, 2);\n        this.modalOpen = false;\n    }\n\n    cancel(): void {\n        this.query = JSON.parse(this.preview);\n        this.modalOpen = false;\n    }\n\n    addKeyword(): void {\n        const length = this.query.keywords.push({ type: 'keyword', value: null });\n\n        // Set focus on the newly added field\n        this._searchBuilderFocusService.setFocus('keywords', length - 1);\n    }\n\n    addField(group: string, event: MouseEvent): void {\n\n        const button = <HTMLElement>event.currentTarget;\n\n        // show the panel\n        this.showPanel();\n\n        // show the placeholder field\n        this.placeholders[group] = true;\n\n        // subscribe to only the next field event\n        this._field$.pipe(first()).subscribe(field => {\n\n            // remove the placeholder\n            this.placeholders[group] = false;\n\n            // if a field was selected then add it to the query\n            if (field) {\n\n                const length = this.query[group].push({ type: field.type, value: null });\n\n                // Set focus on the newly added field\n                this._searchBuilderFocusService.setFocus(group, length - 1);\n\n            } else {\n\n                // Nothing selected so return focus to the original button\n                button.focus();\n            }\n        });\n\n        event.stopPropagation();\n    }\n\n    showPanel() {\n        // clear any existing filters\n        this.filter$.next('');\n\n        // show the panel\n        this.panelOpen = true;\n    }\n\n    onPanelEvent(open: boolean): void {\n        // if closing indication that no field was chosen\n        if (!open) {\n            this._field$.next(null);\n        }\n    }\n\n    selectField(field: SearchBuilderField): void {\n        if (field) {\n            // emit the selected field\n            this._field$.next(field);\n\n            // close the panel\n            this.panelOpen = false;\n        }\n    }\n\n    getCustodians(): string[] {\n        const custodians: string[] = [];\n\n        for (let idx = 0; idx < 20; idx++) {\n            custodians.push(chance.name());\n        }\n\n        return custodians;\n    }\n\n    modalShown(): void {\n        // Set focus on the first field in the keywords group\n        this._searchBuilderFocusService.setFocus('keywords', 0);\n    }\n}\n\ninterface SearchBuilderField {\n    title: string;\n    type: string;\n}\n"}},vBWf:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span><span class="token string">\'searchBuilderId\'</span><span class="token punctuation">,</span> searchBuilderId<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">searchBuilderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">generateComponentId</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>componentName<span class="token punctuation">,</span> searchQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//initialise or increments</span>\n\n        vm<span class="token punctuation">.</span>existingIds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//Get all IDs which have currently been assigned for each component</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> groupName <span class="token keyword">in</span> searchQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> group <span class="token operator">=</span> searchQuery<span class="token punctuation">[</span>groupName<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//build up list of all component ids</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> component <span class="token keyword">in</span> group<span class="token punctuation">)</span> vm<span class="token punctuation">.</span>existingIds<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">var</span> componentId<span class="token punctuation">;</span>\n\n        <span class="token comment">//setting upper limit to avoid an infinte loop</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> desiredId <span class="token operator">=</span> componentName <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> index<span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>existingIds<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>desiredId<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                componentId <span class="token operator">=</span> desiredId<span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            index<span class="token operator">++</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> componentId<span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> vm<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').service('searchBuilderId', searchBuilderId);\n\nfunction searchBuilderId() {\n    var vm = this;\n\n    vm.generateComponentId = function (componentName, searchQuery) {\n        //initialise or increments\n\n        vm.existingIds = [];\n\n        //Get all IDs which have currently been assigned for each component\n        for (var groupName in searchQuery) {\n            var group = searchQuery[groupName];\n\n            //build up list of all component ids\n            for (var component in group) vm.existingIds.push(component);\n        }\n\n        var index = 0;\n        var componentId;\n\n        //setting upper limit to avoid an infinte loop\n        while (index < 1000) {\n            var desiredId = componentName + \"-\" + index;\n\n            if (vm.existingIds.indexOf(desiredId) === -1) {\n                componentId = desiredId;\n                break;\n            }\n\n            index++;\n        }\n\n        return componentId;\n\n    };\n\n    return vm;\n}"}},ykPC:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'CustodianComponentCtrl\'</span><span class="token punctuation">,</span> CustodianComponentCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nCustodianComponentCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">CustodianComponentCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//use this to allow the side panel to select options</span>\n    vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>selectOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        placeholder<span class="token punctuation">:</span> <span class="token string">\'Select Custodians\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token string">\'Flora Morris\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Micheal Gilbert\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Isabella Goodman\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Eleanor Diaz\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Ellen Holt\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Kate Manning\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Ryan Fisher\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Lily White\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Bernice Harrison\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Eddie Smith\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Violet Schneider\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Jordan Burns\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Ellen Tate\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Rena Gomes\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'Ann Garcia\'</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>custodians <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span> id<span class="token punctuation">:</span> i<span class="token punctuation">,</span> name<span class="token punctuation">:</span> name <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">showPanel</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelHeader</span><span class="token punctuation">(</span><span class="token string">\'Select Custodians\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        searchBuilderPanel<span class="token punctuation">.</span><span class="token function">setPanelTemplate</span><span class="token punctuation">(</span><span class="token string">\'custodianPanel.html\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//pass in all custodians and the currently selected custodians</span>\n        vm<span class="token punctuation">.</span>deferred <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">openPanel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            custodians<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>custodians<span class="token punctuation">,</span>\n            selected<span class="token punctuation">:</span> $scope<span class="token punctuation">.</span>model\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//wait for an update on selected repositories</span>\n        vm<span class="token punctuation">.</span>deferred<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selectedCustodians<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $scope<span class="token punctuation">.</span>model <span class="token operator">=</span> selectedCustodians<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('CustodianComponentCtrl', CustodianComponentCtrl);\n\nCustodianComponentCtrl.$inject = ['$scope', 'searchBuilderPanel'];\n\nfunction CustodianComponentCtrl($scope, searchBuilderPanel) {\n    var vm = this;\n\n    //use this to allow the side panel to select options\n    vm.deferred = null;\n\n    vm.selectOptions = {\n        placeholder: 'Select Custodians'\n    };\n\n    var names = [\n        'Flora Morris',\n        'Micheal Gilbert',\n        'Isabella Goodman',\n        'Eleanor Diaz',\n        'Ellen Holt',\n        'Kate Manning',\n        'Ryan Fisher',\n        'Lily White',\n        'Bernice Harrison',\n        'Eddie Smith',\n        'Violet Schneider',\n        'Jordan Burns',\n        'Ellen Tate',\n        'Rena Gomes',\n        'Ann Garcia'\n    ];\n    vm.custodians = names.map(function(name, i) {\n        return { id: i, name: name };\n    });\n\n    vm.showPanel = function () {\n        searchBuilderPanel.setPanelHeader('Select Custodians');\n        searchBuilderPanel.setPanelTemplate('custodianPanel.html');\n\n        //pass in all custodians and the currently selected custodians\n        vm.deferred = searchBuilderPanel.openPanel({\n            custodians: vm.custodians,\n            selected: $scope.model\n        });\n\n        //wait for an update on selected repositories\n        vm.deferred.then(function (selectedCustodians) {\n            $scope.model = selectedCustodians;\n        });\n    };\n\n}"}},zYMI:function(n,a){n.exports={snippet:'components<span class="token punctuation">:</span> SearchBuilderComponentDefinition<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'author\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> SearchTextComponent<span class="token punctuation">,</span>\n        config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">\'Author\'</span><span class="token punctuation">,</span>\n            placeholder<span class="token punctuation">:</span> <span class="token string">\'Enter an Author\'</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchTextConfig\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'custodian\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> SearchSelectComponent<span class="token punctuation">,</span>\n        config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">\'Custodian\'</span><span class="token punctuation">,</span>\n            placeholder<span class="token punctuation">:</span> <span class="token string">\'Select Custodians\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span>\n            multiple<span class="token punctuation">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchSelectConfig\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'date-range\'</span><span class="token punctuation">,</span>\n        component<span class="token punctuation">:</span> SearchDateRangeComponent<span class="token punctuation">,</span>\n        config<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">\'Date range\'</span>\n        <span class="token punctuation">}</span> <span class="token keyword">as</span> SearchDateRangeConfig\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>',example:"components: SearchBuilderComponentDefinition[] = [\n    {\n        name: 'author',\n        component: SearchTextComponent,\n        config: {\n            label: 'Author',\n            placeholder: 'Enter an Author'\n        } as SearchTextConfig\n    },\n    {\n        name: 'custodian',\n        component: SearchSelectComponent,\n        config: {\n            label: 'Custodian',\n            placeholder: 'Select Custodians',\n            options: [...]\n            multiple: true\n        } as SearchSelectConfig\n    },\n    {\n        name: 'date-range',\n        component: SearchDateRangeComponent,\n        config: {\n            label: 'Date range'\n        } as SearchDateRangeConfig\n    }\n];"}},zz0X:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'FileTypesPanelCtrl\'</span><span class="token punctuation">,</span> FileTypesPanelCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nFileTypesPanelCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">,</span> <span class="token string">\'searchBuilderPanel\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">FileTypesPanelCtrl</span><span class="token punctuation">(</span>$scope<span class="token punctuation">,</span> searchBuilderPanel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store the filter text</span>\n    vm<span class="token punctuation">.</span>filterText <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//store all the possible fields</span>\n    vm<span class="token punctuation">.</span>fileTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">selectFileType</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        fileType<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">!</span>fileType<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//when the panel is dismissed resolve the deferred object</span>\n    searchBuilderPanel<span class="token punctuation">.</span><span class="token function">onDismiss</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> selectedFileTypes <span class="token operator">=</span> vm<span class="token punctuation">.</span>fileTypes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> fileType<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//we only want to return file types names</span>\n        <span class="token keyword">var</span> fileTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        selectedFileTypes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            fileTypes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fileType<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>deferred<span class="token punctuation">)</span> deferred<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fileTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//check any items already selected in the search component</span>\n    <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">prepareItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> data <span class="token operator">=</span> searchBuilderPanel<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> fileTypes <span class="token operator">=</span> data<span class="token punctuation">.</span>fileTypes<span class="token punctuation">;</span>\n\n        fileTypes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>fileTypes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                name<span class="token punctuation">:</span> fileType<span class="token punctuation">,</span>\n                checked<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//if there are no selected file types then stop here</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">.</span>selected<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n        data<span class="token punctuation">.</span>selected<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>fileTypes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//if it is a match set the checked value to true</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>fileType<span class="token punctuation">.</span>name <span class="token operator">===</span> selected<span class="token punctuation">)</span> fileType<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('FileTypesPanelCtrl', FileTypesPanelCtrl);\n\nFileTypesPanelCtrl.$inject = ['$scope', 'searchBuilderPanel'];\n\nfunction FileTypesPanelCtrl($scope, searchBuilderPanel) {\n    var vm = this;\n\n    //store the filter text\n    vm.filterText = '';\n\n    //store all the possible fields\n    vm.fileTypes = [];\n\n    vm.selectFileType = function (fileType) {\n        fileType.checked = !fileType.checked;\n    };\n\n    //when the panel is dismissed resolve the deferred object\n    searchBuilderPanel.onDismiss(function (deferred) {\n        var selectedFileTypes = vm.fileTypes.filter(function (fileType) {\n            return fileType.checked;\n        });\n\n        //we only want to return file types names\n        var fileTypes = [];\n\n        selectedFileTypes.forEach(function (fileType) {\n            fileTypes.push(fileType.name);\n        });\n\n        if (deferred) deferred.resolve(fileTypes);\n    });\n\n    //check any items already selected in the search component\n    prepareItems();\n\n    function prepareItems() {\n        var data = searchBuilderPanel.getData();\n\n        var fileTypes = data.fileTypes;\n\n        fileTypes.forEach(function (fileType) {\n            vm.fileTypes.push({\n                name: fileType,\n                checked: false\n            });\n        });\n\n        //if there are no selected file types then stop here\n        if (!data.selected) return;\n\n        data.selected.forEach(function (selected) {\n            vm.fileTypes.forEach(function (fileType) {\n                //if it is a match set the checked value to true\n                if (fileType.name === selected) fileType.checked = true;\n            });\n        });\n    }\n}"}}}]);