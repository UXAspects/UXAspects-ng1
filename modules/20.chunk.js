(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"/LS6":function(n,a,s){var t={"./app.css":"gEwK","./app.html":"uUjt","./app.js":"jHB4"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="/LS6"},"1RYd":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-custom</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> <span class="token punctuation">\'</span>DATE MODIFIED\' <span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetSelect<span class="token punctuation">"</span></span> <span class="token attr-name">deselect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetDeselect<span class="token punctuation">"</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.date<span class="token punctuation">"</span></span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetDisplayFn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token comment">&lt;!-- ....  --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-custom</span><span class="token punctuation">></span></span>'}},"3OMx":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-container</span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!--...--\x3e</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-dynamic</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.facetOptions.title<span class="token punctuation">"</span></span> <span class="token attr-name">facet-options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.facetOptions<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">display-configuration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.facetLongListConfig<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> <span class="token punctuation">\'</span>Find Author\' <span class="token punctuation">"</span></span>\n                   <span class="token attr-name">update-callback</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.longListCallback<span class="token punctuation">"</span></span> <span class="token attr-name">max-length</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">max-lines</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">disable-return</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>false\'<span class="token punctuation">"</span></span> <span class="token attr-name">facet-option-template</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">\'</span>option-with-star\'<span class="token punctuation">"</span></span>\n                   <span class="token attr-name">facet-option-typeahead</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.facetOptionTypeahead<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-dynamic</span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!--...--\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-container</span><span class="token punctuation">></span></span>'}},"5fXC":function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Facet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'chance\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/Observable\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'rxjs/Observer\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./app.component.html\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    facets<span class="token punctuation">:</span> Observable<span class="token operator">&lt;</span>Facet<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">;</span>\n    suggestions<span class="token punctuation">:</span> Facet<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    query<span class="token punctuation">:</span> string <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n    users<span class="token punctuation">:</span> Facet<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// generate random facet data</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Facet</span><span class="token punctuation">(</span>chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> chance<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// sort the users alphabetically</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">userOne<span class="token punctuation">,</span> userTwo</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>userOne<span class="token punctuation">.</span>title <span class="token operator">&lt;</span> userTwo<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>userOne<span class="token punctuation">.</span>title <span class="token operator">></span> userTwo<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// present the top 6 items as suggestions</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>suggestions <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Create an observable which can be used for fetching data from server</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>facets <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">observer<span class="token punctuation">:</span> Observer<span class="token operator">&lt;</span>Facet<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// simulate server request</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n                <span class="token comment">// return list of filtered users from "server"</span>\n                observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">user</span> <span class="token operator">=></span>\n                    user<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span>\n                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">750</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',example:"import { Component } from '@angular/core';\nimport { Facet } from '@ux-aspects/ux-aspects';\nimport 'chance';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    facets: Observable<Facet[]>;\n    suggestions: Facet[] = [];\n    query: string = '';\n    users: Facet[] = [];\n\n    constructor() {\n\n        // generate random facet data\n        for (let idx = 0; idx < 1000; idx++) {\n            this.users.push(new Facet(chance.name(), null, chance.integer({ min: 0, max: 100 })));\n        }\n\n        // sort the users alphabetically\n        this.users.sort((userOne, userTwo) => {\n            if (userOne.title < userTwo.title) {\n                return -1;\n            }\n\n            if (userOne.title > userTwo.title) {\n                return 1;\n            }\n\n            return 0;\n        });\n\n        // present the top 6 items as suggestions\n        this.suggestions = this.users.slice(0, 6);\n\n        // Create an observable which can be used for fetching data from server\n        this.facets = Observable.create((observer: Observer<Facet[]>) => {\n            // simulate server request\n            setTimeout(() => {\n\n                // return list of filtered users from \"server\"\n                observer.next(this.users.filter(user =>\n                    user.title.toLowerCase().indexOf(this.query.toLowerCase()) !== -1\n                ));\n            }, 750);\n        });\n\n    }\n}"}},"7X1j":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>facet.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!--facet options....  --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet</span><span class="token punctuation">></span></span>'}},EUGB:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-option</span> <span class="token attr-name">ng-repeat</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.name<span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.select()<span class="token punctuation">"</span></span> <span class="token attr-name">count</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.count<span class="token punctuation">"</span></span>\n   <span class="token attr-name">deselect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.deselect()<span class="token punctuation">"</span></span> <span class="token attr-name">show-zero</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.showZero<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>option.disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-option</span><span class="token punctuation">></span></span>'}},Hkmx:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"TestCtrl"</span><span class="token punctuation">,</span> TestCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">TestCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>dateFacetOpened <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">dateFacetOpen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        $event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        $event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span>dateFacetOpened <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span>prevdate <span class="token operator">=</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> customdate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>customdate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date <span class="token operator">!==</span> vm<span class="token punctuation">.</span>prevdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            vm<span class="token punctuation">.</span>prevdate <span class="token operator">=</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> <span class="token function-variable function">selectedDateFilter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>compareDate <span class="token operator">===</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> vm<span class="token punctuation">.</span>compareDate<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> customFilters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> currentDate <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> <span class="token function-variable function">applyCustomFilter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//Pushing the filter to the set of selected filters</span>\n        vm<span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>customFilters<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//Updating counts and loading page with selected filter</span>\n        vm<span class="token punctuation">.</span><span class="token function">updateCounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">updateSelectCounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">loadPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">dateFacetDeselect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//Store the current date, and select with this date.</span>\n        currentDate <span class="token operator">=</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">;</span>\n\n        <span class="token comment">//make this empty to clear the date field</span>\n        vm<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n\n        customFilters<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>customFilters<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">applyCustomFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">dateFacetSelect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span>\n            vm<span class="token punctuation">.</span>compareDate <span class="token operator">=</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">else</span> vm<span class="token punctuation">.</span>compareDate <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment">//Returns all the values</span>\n\n        customFilters<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>selectedDateFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">applyCustomFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">dateFacetDisplayFn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        vm<span class="token punctuation">.</span>date <span class="token operator">=</span> currentDate<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" - "</span> <span class="token operator">+</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" - "</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>'}},K5zi:function(n,a){n.exports={snippet:'$scope<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">"vm.showFacets"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nv</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>nv<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    $scope<span class="token punctuation">.</span><span class="token function">$broadcast</span><span class="token punctuation">(</span><span class="token string">"facet-reinitialise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'}},PAYQ:function(n,a,s){var t={"./app.html":"aOGQ","./app.ts":"5fXC"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="PAYQ"},PXvz:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">single-line-overflow-tooltip</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>facet-option-name<span class="token punctuation">"</span></span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data.count !== undefined &amp;&amp; data.count !== null<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>facet-option-count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  (<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data.count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>)\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-star<span class="token punctuation">"</span></span> <span class="token attr-name">ng-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data.count > 10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n'}},Yf0y:function(n,a,s){"use strict";s.r(a);var t=s("CcnG"),p=s("T/2f"),e=s("YZ8U"),l=s("mrSG"),o=s("yHOM"),u=s("AVdU"),c=function(n){function a(){return n.call(this,s("ybOE"))||this}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(o.a)("ComponentsCustomFacetsNg1Component")],a)}(u.a),i=function(n){function a(){return n.call(this,s("aZMm"))||this}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(o.a)("ComponentsDynamicFacetsNg1Component")],a)}(u.a),k=s("W9B5"),r=function(n){function a(){var a=n.call(this,s("/LS6"))||this;return a.playground=Object(k.a)({html:a.snippets.raw.appHtml,js:[a.snippets.raw.appJs],css:[a.snippets.raw.appCss]}),a}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(o.a)("ComponentsFacetLineChartNg1Component")],a)}(u.a),d=s("f5YR"),m=(s("nmfD"),s("88/t")),f=function(n){function a(){var a=n.call(this,s("PAYQ"))||this;a.suggestions=[],a.query="",a.users=[],a.playground={files:{"app.component.ts":a.snippets.raw.appTs,"app.component.html":a.snippets.raw.appHtml},modules:[{imports:["FacetsModule"],library:"@ux-aspects/ux-aspects"}]};for(var t=0;t<1e3;t++)a.users.push(new d.eb(chance.name(),null,chance.integer({min:0,max:100})));return a.users.sort((function(n,a){return n.title<a.title?-1:n.title>a.title?1:0})),a.suggestions=a.users.slice(0,6),a.facets=m.a.create((function(n){setTimeout((function(){n.next(a.users.filter((function(n){return-1!==n.title.toLowerCase().indexOf(a.query.toLowerCase())})))}),750)})),a}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(o.a)("ComponentsFacetTypeaheadListComponent")],a)}(u.a),h=function(n){function a(){return n.call(this,s("ezmE"))||this}return Object(l.__extends)(a,n),Object(l.__decorate)([Object(o.a)("ComponentsFacetsNg1Component")],a)}(u.a),g=function(){return Object(l.__decorate)([Object(o.a)("ComponentsProgrammaticSelectionNg1Component")],(function(){}))}(),v={category:e.b.resolveCategoryData(e.a.Components,"Facets")},b=function(){return function(n,a){a.registerResolver(n)}}(),y=s("HRZI"),w=s("WmtN"),x=s("pMnS"),D=s("GBPT"),C=s("rYg0"),T=s("r1ng"),F=s("COk8"),O=s("9hoY"),S=s("+gXg"),q=s("rpQh"),A=s("2RDK"),M=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function E(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,31,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Facets are contained inside a "])),(n()(),t["\u0275eld"](2,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,[" element. A "])),(n()(),t["\u0275eld"](5,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,[" element can have many\n    "])),(n()(),t["\u0275eld"](8,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,[" elements underneath it. The "])),(n()(),t["\u0275eld"](11,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,[" must have the "])),(n()(),t["\u0275eld"](14,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select-title"])),(n()(),t["\u0275ted"](-1,null,[" and\n    "])),(n()(),t["\u0275eld"](17,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["clear-text"])),(n()(),t["\u0275ted"](-1,null,[" attributes set. "])),(n()(),t["\u0275eld"](20,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select-title"])),(n()(),t["\u0275ted"](-1,null,[" should be set to the value which appears above the\n    selected facets. "])),(n()(),t["\u0275eld"](23,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["clear-text"])),(n()(),t["\u0275ted"](-1,null,[" should be set to the value which appears in the clear all link. In addition\n    to these options the "])),(n()(),t["\u0275eld"](26,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["no-items-text"])),(n()(),t["\u0275ted"](-1,null,[" attribute can be set which will display the specified text when no facet\n    options have been selected. "])),(n()(),t["\u0275eld"](29,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["no-items-text"])),(n()(),t["\u0275ted"](-1,null,[" is an optional attribute.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](33,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The "])),(n()(),t["\u0275eld"](35,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["clear-all-fn"])),(n()(),t["\u0275ted"](-1,null,[" is an optional attribute in this directive that defines a function expression called when\n    the clearAll is clicked. This option will override the default function expression provided in UX Aspects and can be used\n    to define a user method.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](39,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](40,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](42,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A "])),(n()(),t["\u0275eld"](44,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,[" element may have the following attributes:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](48,0,null,null,14,"uxd-api-properties",[],null,null,null,O.b,O.a)),t["\u0275did"](49,49152,null,0,S.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](51,0,null,0,2,"tr",[["binding","variable"],["name","name"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](52,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        The facet title.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](55,0,null,0,2,"tr",[["binding","variable"],["defaultValue","true"],["name","expanded"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](56,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Whether the facet is expanded.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](59,0,null,0,2,"tr",[["binding","literal"],["defaultValue","on"],["name","facet-scroll"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](60,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,['\n        Set to "on" to enable a scrollbar for the facet options, or "off" to disable it.\n    '])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](64,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](65,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](67,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    A "])),(n()(),t["\u0275eld"](69,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,[" element can contain many "])),(n()(),t["\u0275eld"](72,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option"])),(n()(),t["\u0275ted"](-1,null,[" elements. "])),(n()(),t["\u0275eld"](75,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option"])),(n()(),t["\u0275ted"](-1,null,[" elements\n    can have the following attributes:\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](79,0,null,null,44,"uxd-api-properties",[],null,null,null,O.b,O.a)),t["\u0275did"](80,49152,null,0,S.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](82,0,null,0,2,"tr",[["binding","variable"],["name","name"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](83,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A bindable property which will be displayed as the option.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](86,0,null,0,2,"tr",[["binding","variable"],["name","count"],["type","number"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](87,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"],binding:[2,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        An optional bindable property which will appear alongside the name in braces. Note that the count should update as facets are applied.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](90,0,null,0,2,"tr",[["binding","variable"],["name","select"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](91,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A function expression which will be called when the option is selected. This function should perform any\n        filtering that is required and update counts as necessary. The select count should update as facets are applied,\n        based on the number of items selected which will be displayed on the toolbar in selection mode.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](94,0,null,0,2,"tr",[["binding","variable"],["name","deselect"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](95,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        a function expression which will be called when the option is deselected. This function should\n        perform any filtering that is required and update counts as necessary. The select count should\n        update as facets are applied, based on the number of items selected which will be displayed on the\n        toolbar in selection mode.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](98,0,null,0,2,"tr",[["binding","variable"],["name","load-delay"],["required","true"],["type","number"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](99,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        An optional property to specify a delay in milliseconds to load the facets.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](102,0,null,0,5,"tr",[["binding","variable"],["defaultValue","false"],["name","disabled"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](103,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],defaultValue:[3,"defaultValue"],binding:[4,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If true the "])),(n()(),t["\u0275eld"](105,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option"])),(n()(),t["\u0275ted"](-1,0,[" will appear disabled and clicking on it will have no effect.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](109,0,null,0,5,"tr",[["binding","variable"],["defaultValue","false"],["name","show-zero"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](110,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],defaultValue:[3,"defaultValue"],binding:[4,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If true the "])),(n()(),t["\u0275eld"](112,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option"])),(n()(),t["\u0275ted"](-1,0,[" will be visible even if the count is 0.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](116,0,null,0,2,"tr",[["binding","variable"],["name","selected-aria-label"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](117,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A property which accepts a string used in assistive technologies to indicate whether the facet option is selected.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](120,0,null,0,2,"tr",[["binding","variable"],["defaultValue","true"],["name","simplified"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](121,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],defaultValue:[3,"defaultValue"],binding:[4,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Setting this to false will use the standard checkbox style.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](125,0,null,null,20,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,y.B,y.l)),t["\u0275prd"](512,null,d.qe,d.qe,[]),t["\u0275did"](127,4374528,null,1,d.oe,[d.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](130,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,y.A,y.k)),t["\u0275did"](131,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,2,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](134,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](135,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](138,0,null,0,6,"ux-tab",[["heading","Javascript"]],null,null,null,y.A,y.k)),t["\u0275did"](139,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](142,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](143,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](147,0,null,null,12,"uxd-api-properties",[["tableTitle","Function"]],null,null,null,O.b,O.a)),t["\u0275did"](148,49152,null,0,S.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](150,0,null,0,8,"tr",[["name","updateSelectCounts"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](151,49152,null,0,A.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A function expression which will be called when facet option is selected ("])),(n()(),t["\u0275eld"](153,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select"])),(n()(),t["\u0275ted"](-1,0,[") or\n        deselected ("])),(n()(),t["\u0275eld"](156,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["deselect"])),(n()(),t["\u0275ted"](-1,0,["). This will update the count based on the number of items that\n        are selected in selection mode when the filtering is done on facets.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](161,0,null,null,1,"h4",[["id","showing-and-hiding"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Showing and Hiding"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](164,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    If the visibility of the facet container can be toggled, then the "])),(n()(),t["\u0275eld"](166,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-reinitialise"])),(n()(),t["\u0275ted"](-1,null,[" event may be broadcast\n    by the controller in order to prevent display issues with the facet options when they become visible. For example, if\n    visibility of the facets is controlled by a boolean variable, the following code will broadcast the event at the appropriate\n    time.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](170,0,null,null,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](171,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null)],(function(n,a){var s=a.component;n(a,40,0,"html",s.snippets.compiled.facetContainerSnippetHtml),n(a,52,0,"name","true","string","variable"),n(a,56,0,"expanded","boolean","true","variable"),n(a,60,0,"facet-scroll","string","on","literal"),n(a,65,0,"html",s.snippets.compiled.facetSnippetHtml),n(a,83,0,"name","true","string","variable"),n(a,87,0,"count","number","variable"),n(a,91,0,"select","true","function","variable"),n(a,95,0,"deselect","true","function","variable"),n(a,99,0,"load-delay","true","number","variable"),n(a,103,0,"disabled","true","boolean","false","variable"),n(a,110,0,"show-zero","true","boolean","false","variable"),n(a,117,0,"selected-aria-label","true","boolean","variable"),n(a,121,0,"simplified","true","boolean","true","variable"),n(a,127,0,!1),n(a,131,0,"HTML"),n(a,135,0,"html",s.snippets.compiled.facetOptionSnippetHtml),n(a,139,0,"Javascript"),n(a,143,0,"javascript",s.snippets.compiled.facetOptionSnippetJs),n(a,148,0,"Function"),n(a,151,0,"updateSelectCounts"),n(a,171,0,"javascript",s.snippets.compiled.facetVisibilitySnippetJs)}),(function(n,a){n(a,125,0,"left"===t["\u0275nov"](a,127).stacked,"right"===t["\u0275nov"](a,127).stacked)}))}function R(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-facets-ng1",[],null,null,null,E,M)),t["\u0275did"](1,49152,null,0,h,[],null,null)],null,null)}var j=t["\u0275ccf"]("uxd-components-facets-ng1",h,R,{},{},[]),L=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function I(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    When there are a large number of facet options, the Dynamic Facet can be used to replace the regular scrollable list with\n    a text search, supporting dropdown typeahead. This is configurable to fallback to the standard scrollable list, when\n    the number of items in the list falls beneath a certain threshold.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,19,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    To use the Dynamic Facet, use the "])),(n()(),t["\u0275eld"](5,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-dynamic"])),(n()(),t["\u0275ted"](-1,null,[" directive instead of the "])),(n()(),t["\u0275eld"](8,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,[" directive. Set\n    the\n    "])),(n()(),t["\u0275eld"](11,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-options"])),(n()(),t["\u0275ted"](-1,null,[" attribute with an object containing a "])),(n()(),t["\u0275eld"](14,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["title"])),(n()(),t["\u0275ted"](-1,null,[" attribute, and an "])),(n()(),t["\u0275eld"](17,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["options"])),(n()(),t["\u0275ted"](-1,null,["    property containing collection of objects that follow the interface for the "])),(n()(),t["\u0275eld"](20,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option"])),(n()(),t["\u0275ted"](-1,null,[" defined above.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](24,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The Dynamic Facet can be used in the same "])),(n()(),t["\u0275eld"](26,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,[" as the standard "])),(n()(),t["\u0275eld"](29,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,[" directive.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](33,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    To configure the behaviour of the control, set the "])),(n()(),t["\u0275eld"](35,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["display-configuration"])),(n()(),t["\u0275ted"](-1,null,[" attribute, which expects an object\n    of the following format:\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](39,0,null,null,22,"uxd-api-properties",[],null,null,null,O.b,O.a)),t["\u0275did"](40,49152,null,0,S.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](42,0,null,0,2,"tr",[["defaultValue","3"],["name","minCharacters"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](43,49152,null,0,A.a,[],{name:[0,"name"],defaultValue:[1,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        How many characters should be typed before a dropdown is shown.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](46,0,null,0,2,"tr",[["defaultValue","show all matches"],["name","maxDisplayableItems"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](47,49152,null,0,A.a,[],{name:[0,"name"],defaultValue:[1,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        How many entries to show in the typeahead dropdown.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](50,0,null,0,2,"tr",[["defaultValue","0"],["name","minIndividualItems"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](51,49152,null,0,A.a,[],{name:[0,"name"],defaultValue:[1,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        How many Facet Options should be displayed regardless of whether a typeahead is visible.\n        Items shown as Facet Options will not be listed in the typeahead dropdown.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](54,0,null,0,2,"tr",[["defaultValue","0"],["name","maxIndividualItems"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](55,49152,null,0,A.a,[],{name:[0,"name"],defaultValue:[1,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        When there are fewer than this many items, a list of Facet Options will be shown instead of a text input.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](58,0,null,0,2,"tr",[["defaultValue","false"],["name","showZero"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](59,49152,null,0,A.a,[],{name:[0,"name"],defaultValue:[1,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        When true any Facet Options with a count of zero will be visible.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](63,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The maximum number of characters expected by this text area is defined by the "])),(n()(),t["\u0275eld"](65,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["max-length"])),(n()(),t["\u0275ted"](-1,null,["directive."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](69,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The maximum number of lines the text input is allowed to grow to can be set using the "])),(n()(),t["\u0275eld"](71,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["max-lines"])),(n()(),t["\u0275ted"](-1,null,[" attribute. If\n    the number of lines exceeds this value then a scrollbar will appear."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](75,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To prevent the user from taking a new line using the return key set the "])),(n()(),t["\u0275eld"](77,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["disable-return"])),(n()(),t["\u0275ted"](-1,null,[" attribute to false."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](81,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The values presented in the dropdown can also be changed dynamically. This is optional behaviour, but useful if you wish\n    to perform additional server requests on demand. The function supplied to "])),(n()(),t["\u0275eld"](83,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["update-callback"])),(n()(),t["\u0275ted"](-1,null,[" will be triggered\n    every time the contents of the text input are modified. The function will be called with:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](87,0,null,null,11,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](89,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](90,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["textInput"])),(n()(),t["\u0275ted"](-1,null,[" - the text value in the search control."])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](94,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](95,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["optionList"])),(n()(),t["\u0275ted"](-1,null,[" - the array of options the control can filter from."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](100,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The function must return:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](103,0,null,null,6,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](105,0,null,null,3,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](106,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["optionList"])),(n()(),t["\u0275ted"](-1,null,[" - the array of options, with the contents modified, added or removed as required."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](111,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Set the "])),(n()(),t["\u0275eld"](113,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["placeholder"])),(n()(),t["\u0275ted"](-1,null,[" attribute to a string property to set the placeholder text that will be shown in the text\n    search input control."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](117,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The Dynamic Facet also supports customization of the markup used for facet options (selected and unselected) and the content shown in the typeahead.\n   To customize the facet option, set the "])),(n()(),t["\u0275eld"](119,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option-template"])),(n()(),t["\u0275ted"](-1,null,[" property to the URL of a template. Any data available inside\n   each object within the "])),(n()(),t["\u0275eld"](122,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["options"])),(n()(),t["\u0275ted"](-1,null,[' array can be accessed using "data" as prefix (e.g. '])),(n()(),t["\u0275eld"](125,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["data.name"])),(n()(),t["\u0275ted"](-1,null,[", "])),(n()(),t["\u0275eld"](128,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["data.count"])),(n()(),t["\u0275ted"](-1,null,[").\n\n"])),(n()(),t["\u0275eld"](131,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To customize the typeahead results, set the "])),(n()(),t["\u0275eld"](133,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-option-typeahead"])),(n()(),t["\u0275ted"](-1,null,[" attribute. Any data available inside each object within\n    the "])),(n()(),t["\u0275eld"](136,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["options"])),(n()(),t["\u0275ted"](-1,null,[' array can be accessed using "option" as prefix (e.g. '])),(n()(),t["\u0275eld"](139,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["option.name"])),(n()(),t["\u0275ted"](-1,null,[", "])),(n()(),t["\u0275eld"](142,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["option.count"])),(n()(),t["\u0275ted"](-1,null,[")."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](146,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Below is an example for the use of this directive:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](149,0,null,null,28,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,y.B,y.l)),t["\u0275prd"](512,null,d.qe,d.qe,[]),t["\u0275did"](151,4374528,null,1,d.oe,[d.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](154,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,y.A,y.k)),t["\u0275did"](155,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,2,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](158,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](159,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](162,0,null,0,6,"ux-tab",[["heading","Javascript"]],null,null,null,y.A,y.k)),t["\u0275did"](163,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](166,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](167,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](170,0,null,0,6,"ux-tab",[["heading","Facet Option Template"]],null,null,null,y.A,y.k)),t["\u0275did"](171,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,4,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](174,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](175,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"]))],(function(n,a){var s=a.component;n(a,43,0,"minCharacters","3"),n(a,47,0,"maxDisplayableItems","show all matches"),n(a,51,0,"minIndividualItems","0"),n(a,55,0,"maxIndividualItems","0"),n(a,59,0,"showZero","false"),n(a,151,0,!1),n(a,155,0,"HTML"),n(a,159,0,"html",s.snippets.compiled.dynamicFacetsSnippetHtml),n(a,163,0,"Javascript"),n(a,167,0,"javascript",s.snippets.compiled.dynamicFacetsSnippetJs),n(a,171,0,"Facet Option Template"),n(a,175,0,"html",s.snippets.compiled.facetOptionTemplateSnippetHtml)}),(function(n,a){n(a,149,0,"left"===t["\u0275nov"](a,151).stacked,"right"===t["\u0275nov"](a,151).stacked)}))}function P(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-dynamic-facets-ng1",[],null,null,null,I,L)),t["\u0275did"](1,49152,null,0,i,[],null,null)],null,null)}var U=t["\u0275ccf"]("uxd-components-dynamic-facets-ng1",i,P,{},{},[]),V=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function $(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Custom Facets allow for any control, such as a Date Picker, to be used as part of a faceted search."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To include a Custom Facet in a "])),(n()(),t["\u0275eld"](5,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,[", use the "])),(n()(),t["\u0275eld"](8,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-custom"])),(n()(),t["\u0275ted"](-1,null,[" directive in place of a "])),(n()(),t["\u0275eld"](11,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,null,["    directive. The required attributes are:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](15,0,null,null,25,"uxd-api-properties",[],null,null,null,O.b,O.a)),t["\u0275did"](16,49152,null,0,S.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](18,0,null,0,2,"tr",[["binding","variable"],["name","name"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](19,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A string name for the facet.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](22,0,null,0,2,"tr",[["binding","variable"],["name","model"],["required","true"],["type","object"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](23,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        An object in the controller context which contains the computed value of the custom facet.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](26,0,null,0,5,"tr",[["binding","variable"],["name","select"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](27,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A function called when the value of "])),(n()(),t["\u0275eld"](29,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,0,[" changes.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](33,0,null,0,2,"tr",[["binding","variable"],["name","deselect"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](34,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A function called when the facet is deselected.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](37,0,null,0,2,"tr",[["binding","variable"],["name","display"],["required","true"],["type","function"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](38,49152,null,0,A.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"],binding:[3,"binding"]},null),(n()(),t["\u0275ted"](-1,0,["\n        A function which computes a display name for the facet when selected.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](42,0,null,null,118,"div",[["class","demo-attributes table-responsive"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](44,0,null,null,115,"table",[["class","table m-t"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](46,0,null,null,112,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](48,0,null,null,16,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](50,0,null,null,1,"th",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Name"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](53,0,null,null,1,"th",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Type"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](56,0,null,null,1,"th",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Binding"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](59,0,null,null,1,"th",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Description"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](62,0,null,null,1,"th",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Optional"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](66,0,null,null,16,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](68,0,null,null,1,"td",[["class","attribute"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["name"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](71,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["string"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](74,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["variable"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](77,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A string name for the facet."])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](80,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](84,0,null,null,16,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](86,0,null,null,1,"td",[["class","attribute"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](89,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["object"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](92,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["variable"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](95,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["An object in the controller context which contains the computed value of the custom facet."])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](98,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](102,0,null,null,19,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](104,0,null,null,1,"td",[["class","attribute"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](107,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["function"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](110,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["variable"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](113,0,null,null,4,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A function called when the value of "])),(n()(),t["\u0275eld"](115,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" changes."])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](119,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](123,0,null,null,16,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](125,0,null,null,1,"td",[["class","attribute"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["deselect"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](128,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["function"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](131,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["variable"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](134,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A function called when the facet is deselected."])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](137,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](141,0,null,null,16,"tr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](143,0,null,null,1,"td",[["class","attribute"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["display"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](146,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["function"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](149,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["variable"])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](152,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A function which computes a display name for the facet when selected."])),(n()(),t["\u0275ted"](-1,null,["\n                "])),(n()(),t["\u0275eld"](155,0,null,null,1,"td",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["false"])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](162,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The "])),(n()(),t["\u0275eld"](164,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select"])),(n()(),t["\u0275ted"](-1,null,[" and "])),(n()(),t["\u0275eld"](167,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["deselect"])),(n()(),t["\u0275ted"](-1,null,[" functions are not called with parameters, so should be defined from\n    the parent context to read either the value of the property passed as\n    "])),(n()(),t["\u0275eld"](170,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" or another property as appropriate.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](174,0,null,null,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](175,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](177,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Inside this directive, define the required control. The key feature is to ensure the computed value of the control is set\n    to the same property as was passed as the "])),(n()(),t["\u0275eld"](179,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" attribute for the directive. This means the custom facet\n    is single select, and should implement its own clearing functionality if required.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](183,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Below is an example of how this directive can be used to implement a Date Picker facet (using the Date Picker directive).\n    Note that the "])),(n()(),t["\u0275eld"](185,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["vm.date"])),(n()(),t["\u0275ted"](-1,null,[" property is shared between the custom facet and the datepicker.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](189,0,null,null,20,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,y.B,y.l)),t["\u0275prd"](512,null,d.qe,d.qe,[]),t["\u0275did"](191,4374528,null,1,d.oe,[d.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](194,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,y.A,y.k)),t["\u0275did"](195,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,2,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](198,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](199,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](202,0,null,0,6,"ux-tab",[["heading","Javascript"]],null,null,null,y.A,y.k)),t["\u0275did"](203,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](206,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](207,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"]))],(function(n,a){var s=a.component;n(a,19,0,"name","true","string","variable"),n(a,23,0,"model","true","object","variable"),n(a,27,0,"select","true","function","variable"),n(a,34,0,"deselect","true","function","variable"),n(a,38,0,"display","true","function","variable"),n(a,175,0,"html",s.snippets.compiled.sampleSnippetHtml),n(a,191,0,!1),n(a,195,0,"HTML"),n(a,199,0,"html",s.snippets.compiled.customFacetsSnippetHtml),n(a,203,0,"Javascript"),n(a,207,0,"javascript",s.snippets.compiled.customFacetsSnippetJs)}),(function(n,a){n(a,189,0,"left"===t["\u0275nov"](a,191).stacked,"right"===t["\u0275nov"](a,191).stacked)}))}function N(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-custom-facets-ng1",[],null,null,null,$,V)),t["\u0275did"](1,49152,null,0,c,[],null,null)],null,null)}var _=t["\u0275ccf"]("uxd-components-custom-facets-ng1",c,N,{},{},[]),H=s("3ODq"),Y=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function J(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-facet-line-chart-wrapper",[],null,null,null,null,null)),t["\u0275did"](1,999424,null,0,H.a,[t.ElementRef,t.Injector],null,null),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](3,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](5,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["A flot chart can be manipulated by other controls as seen in the example above which uses a facet to change the dataset displayed and another facet to change the date range."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["When the date range is changed the chart will only show points on the chart that fall between those dates. It will also recalculate the ticks on the Y axis to show a more appropriate scale based on the visible points. This may also be desired when using a Timeline Chart. In the sample code below the function "])),(n()(),t["\u0275eld"](10,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["updateChartYAxis"])),(n()(),t["\u0275ted"](-1,null,[" is responsible for calculating a new Y axis scale. This function should be used as a basis to provide such functionality for any chart that needs to rescale its Y axis."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](14,0,null,null,28,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,y.B,y.l)),t["\u0275prd"](512,null,d.qe,d.qe,[]),t["\u0275did"](16,4374528,null,1,d.oe,[d.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](19,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,y.A,y.k)),t["\u0275did"](20,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,2,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](23,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](24,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](27,0,null,0,6,"ux-tab",[["heading","Javascript"]],null,null,null,y.A,y.k)),t["\u0275did"](28,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](31,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](32,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](35,0,null,0,6,"ux-tab",[["heading","CSS"]],null,null,null,y.A,y.k)),t["\u0275did"](36,245760,[[1,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,4,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](39,0,null,0,1,"uxd-snippet",[["language","css"]],null,null,null,T.b,T.a)),t["\u0275did"](40,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"]))],(function(n,a){var s=a.component;n(a,1,0),n(a,16,0,!1),n(a,20,0,"HTML"),n(a,24,0,"html",s.snippets.compiled.appHtml),n(a,28,0,"Javascript"),n(a,32,0,"javascript",s.snippets.compiled.appJs),n(a,36,0,"CSS"),n(a,40,0,"css",s.snippets.compiled.appCss)}),(function(n,a){n(a,14,0,"left"===t["\u0275nov"](a,16).stacked,"right"===t["\u0275nov"](a,16).stacked)}))}function W(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-facet-line-chart-ng1",[],null,null,null,J,Y)),t["\u0275did"](1,49152,null,0,r,[],null,null)],null,null)}var z=t["\u0275ccf"]("uxd-components-facet-line-chart-ng1",r,W,{},{},[]),B=s("ZYCi"),Z=s("Ip0R"),G=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function K(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,13,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    To enable programmatic selection of facets, pass an empty object to the "])),(n()(),t["\u0275eld"](2,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["api"])),(n()(),t["\u0275ted"](-1,null,[" attribute of the "])),(n()(),t["\u0275eld"](5,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet-container"])),(n()(),t["\u0275ted"](-1,null,["    element. This object will be populated with a list of objects representing the facets in the container, allowing access\n    to the "])),(n()(),t["\u0275eld"](8,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["select"])),(n()(),t["\u0275ted"](-1,null,[" and "])),(n()(),t["\u0275eld"](11,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["deselect"])),(n()(),t["\u0275ted"](-1,null,[" methods of their facet-options.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](15,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    This is compatible with standard Facets, Dynamic Facets, and Custom Facets. Note that when using Custom Facets, the value\n    of the "])),(n()(),t["\u0275eld"](17,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["model"])),(n()(),t["\u0275ted"](-1,null,[" needs to be changed independently of these functions.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](21,0,null,null,8,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](23,0,null,null,5,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        An example of the use of programmatic selection can be seen in the Filter Popover Controller in the \n        "])),(n()(),t["\u0275eld"](25,0,null,null,2,"a",[["fragment","detail-row-header-ng1"],["routerLink","/components/tables"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],(function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,26).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p}),null,null)),t["\u0275did"](26,671744,null,0,B.r,[B.o,B.a,Z.k],{fragment:[0,"fragment"],routerLink:[1,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["Detail Row Header"])),(n()(),t["\u0275ted"](-1,null,[" documentation.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"]))],(function(n,a){n(a,26,0,"detail-row-header-ng1","/components/tables")}),(function(n,a){n(a,25,0,t["\u0275nov"](a,26).target,t["\u0275nov"](a,26).href)}))}function X(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-programmatic-selection",[],null,null,null,K,G)),t["\u0275did"](1,49152,null,0,g,[],null,null)],null,null)}var Q=t["\u0275ccf"]("uxd-components-programmatic-selection",g,X,{},{},[]),nn=s("lLAP"),an=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function sn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,15,"div",[["class","row"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](2,0,null,null,12,"div",[["class","col-md-12"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](4,0,null,null,9,"ux-facet-container",[],null,null,null,y.w,y.g)),t["\u0275prd"](512,null,d.jb,d.jb,[]),t["\u0275did"](6,180224,null,1,d.hb,[nn.f,d.jb],null,null),t["\u0275qud"](603979776,1,{clearButton:0}),(n()(),t["\u0275ted"](-1,0,["\n            "])),(n()(),t["\u0275eld"](9,0,null,0,3,"ux-facet-typeahead-list",[["header","Authors"]],null,[[null,"queryChange"]],(function(n,a,s){var t=!0;return"queryChange"===a&&(t=!1!==(n.component.query=s)&&t),t}),y.x,y.h)),t["\u0275did"](10,4440064,null,0,d.lb,[d.Le,d.jb,nn.f],{facets:[0,"facets"],header:[1,"header"],suggestions:[2,"suggestions"],simplified:[3,"simplified"],query:[4,"query"],typeaheadConfig:[5,"typeaheadConfig"]},{queryChange:"queryChange"}),t["\u0275pod"](11,{placeholder:0}),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](17,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](19,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The Facet Typeahead List component can be used to select and deselect facets to provide the user with filtering capabilities.\n    The Facet Typeahead List component is particularly useful when there can be a large number of facets that can be selected\n    and allows users to find the appropriate facet by searching using a typeahead control.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](22,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    The typeahead can support an array of facets to filter or if there is a significant amount of data, an observable can be\n    used to fetch data from the server when the user performs a search.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](25,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    To add a Facet Typeahead List component to your application you need to import the "])),(n()(),t["\u0275eld"](27,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["FacetsModule"])),(n()(),t["\u0275ted"](-1,null,[" which allows\n    the use of the "])),(n()(),t["\u0275eld"](30,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ux-facet-typeahead-list"])),(n()(),t["\u0275ted"](-1,null,[" component.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](34,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    A list of suggested facets can be displayed above the typeahead to allow a user to quickly select some options without having to perform a search.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](37,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following attributes can be used to customize the behavior of the component:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](40,0,null,null,87,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,O.b,O.a)),t["\u0275did"](41,49152,null,0,S.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](43,0,null,0,2,"tr",[["name","facets"],["type","Facet[] | Observable<Facet[]>"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](44,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the complete list of facets that can be selected. Alternatively an observable can be used to allow values to be fetched\n        dynamically.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](47,0,null,0,2,"tr",[["name","selected"],["type","Facet[]"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](48,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This will allow you to define an initial set of selected facets.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](51,0,null,0,2,"tr",[["name","header"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](52,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the text displayed at the top of the Facet Typeahead List.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](55,0,null,0,2,"tr",[["name","suggestions"],["type","Facet[]"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](56,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines a list of facets which will be displayed above the typeahead to allow the user to quickly select some facets.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](59,0,null,0,2,"tr",[["defaultValue","false"],["name","simplified"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](60,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines whether or not the checkboxes displayed alongside suggestions will appear in simplified form.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](63,0,null,0,55,"tr",[["name","typeaheadConfig"],["type","FacetTypeaheadListConfig"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](64,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Allows configuration of the typeahead control. The possible values are:\n        "])),(n()(),t["\u0275eld"](66,0,null,0,51,"ul",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](68,0,null,null,6,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](69,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["placeholder"])),(n()(),t["\u0275ted"](-1,null,[" - "])),(n()(),t["\u0275eld"](72,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["string"])),(n()(),t["\u0275ted"](-1,null,[" - Sets the placeholder of the typeahead."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](76,0,null,null,12,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](77,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["minCharacters"])),(n()(),t["\u0275ted"](-1,null,[" - "])),(n()(),t["\u0275eld"](80,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["number"])),(n()(),t["\u0275ted"](-1,null,[" - Defines the minimum number of characters that are required before results will be shown. "])),(n()(),t["\u0275eld"](83,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Default:"])),(n()(),t["\u0275ted"](-1,null,[" "])),(n()(),t["\u0275eld"](86,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["1"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](90,0,null,null,12,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](91,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["maxResults"])),(n()(),t["\u0275ted"](-1,null,[" - "])),(n()(),t["\u0275eld"](94,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["number"])),(n()(),t["\u0275ted"](-1,null,[" - Sets the maximum number of results to display. "])),(n()(),t["\u0275eld"](97,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Default:"])),(n()(),t["\u0275ted"](-1,null,[" "])),(n()(),t["\u0275eld"](100,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["50"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n            "])),(n()(),t["\u0275eld"](104,0,null,null,12,"li",[],null,null,null,null,null)),(n()(),t["\u0275eld"](105,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["delay"])),(n()(),t["\u0275ted"](-1,null,[" - "])),(n()(),t["\u0275eld"](108,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["number"])),(n()(),t["\u0275ted"](-1,null,[" - Defines the number of milliseconds to wait before the results are filtered. "])),(n()(),t["\u0275eld"](111,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Default: "])),(n()(),t["\u0275ted"](-1,null,[" "])),(n()(),t["\u0275eld"](114,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["0"])),(n()(),t["\u0275ted"](-1,null,["."])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](120,0,null,0,2,"tr",[["defaultValue","true"],["name","expanded"],["type","boolean"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](121,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines whether or not the Facet Typeahead List should be initially expanded or not.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](124,0,null,0,2,"tr",[["name","query"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](125,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the query displayed in the input field.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](129,0,null,null,26,"uxd-api-properties",[["tableTitle","Outputs"]],null,null,null,O.b,O.a)),t["\u0275did"](130,49152,null,0,S.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](132,0,null,0,2,"tr",[["name","selectedChange"],["type","Facet[]"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](133,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If two-way binding is used this array will get updated any time the selected facets change.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](136,0,null,0,2,"tr",[["name","queryChange"],["type","string"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](137,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Emits the current query when the value of the input field changes.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](140,0,null,0,14,"tr",[["name","events"],["type","FacetEvent"],["uxd-api-property",""]],null,null,null,q.b,q.a)),t["\u0275did"](141,49152,null,0,A.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        This will be triggered when a facet is selected, deselected or all facets are deselected. The event will be an instance of\n        either "])),(n()(),t["\u0275eld"](143,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["FacetSelect"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](146,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["FacetDeselect"])),(n()(),t["\u0275ted"](-1,0,[" or "])),(n()(),t["\u0275eld"](149,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["FacetDeselectAll"])),(n()(),t["\u0275ted"](-1,0,["\n        and will contain the facet being selected or deselected in a "])),(n()(),t["\u0275eld"](152,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["facet"])),(n()(),t["\u0275ted"](-1,0,[" property (deselect all will\n        not contain affected facets).\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](157,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following code will produce the example shown above:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](160,0,null,null,20,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,y.B,y.l)),t["\u0275prd"](512,null,d.qe,d.qe,[]),t["\u0275did"](162,4374528,null,1,d.oe,[d.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,2,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](165,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,y.A,y.k)),t["\u0275did"](166,245760,[[2,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](169,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,T.b,T.a)),t["\u0275did"](170,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](173,0,null,0,6,"ux-tab",[["heading","TypeScript"]],null,null,null,y.A,y.k)),t["\u0275did"](174,245760,[[2,4]],1,d.je,[d.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,4,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](177,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,T.b,T.a)),t["\u0275did"](178,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n"]))],(function(n,a){var s=a.component,t=s.facets,p=s.suggestions,e=s.query,l=n(a,11,0,"Find Author");n(a,10,0,t,"Authors",p,!1,e,l),n(a,41,0,"Inputs"),n(a,44,0,"facets","Facet[] | Observable<Facet[]>"),n(a,48,0,"selected","Facet[]"),n(a,52,0,"header","string"),n(a,56,0,"suggestions","Facet[]"),n(a,60,0,"simplified","boolean","false"),n(a,64,0,"typeaheadConfig","FacetTypeaheadListConfig"),n(a,121,0,"expanded","boolean","true"),n(a,125,0,"query","string"),n(a,130,0,"Outputs"),n(a,133,0,"selectedChange","Facet[]"),n(a,137,0,"queryChange","string"),n(a,141,0,"events","FacetEvent"),n(a,162,0,!1),n(a,166,0,"HTML"),n(a,170,0,"html",s.snippets.compiled.appHtml),n(a,174,0,"TypeScript"),n(a,178,0,"javascript",s.snippets.compiled.appTs)}),(function(n,a){n(a,160,0,"left"===t["\u0275nov"](a,162).stacked,"right"===t["\u0275nov"](a,162).stacked)}))}function tn(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-components-facet-typeahead-list",[],null,null,null,sn,an)),t["\u0275did"](1,49152,null,0,f,[],null,null)],null,null)}var pn=t["\u0275ccf"]("uxd-components-facet-typeahead-list",f,tn,{},{},[]),en=s("x4zH"),ln=s("M2Lx"),on=s("gIcY"),un=s("eDkP"),cn=s("Fzqc"),kn=s("dWZg"),rn=s("4c35"),dn=s("qAlS"),mn=s("qina"),fn=s("zCE2"),hn=s("FLOw"),gn=s("XtaT");s.d(a,"ComponentsFacetsModuleNgFactory",(function(){return vn}));var vn=t["\u0275cmf"](b,[],(function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[y.q,w.a,y.a,x.a,D.a,C.a,j,U,_,z,Q,pn]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,Z.p,Z.o,[t.LOCALE_ID,[2,Z.C]]),t["\u0275mpd"](5120,"flotDataService",en.b,["$injector"]),t["\u0275mpd"](5120,"lineDataService",en.c,["$injector"]),t["\u0275mpd"](4608,ln.c,ln.c,[]),t["\u0275mpd"](4608,d.c,d.c,[[2,d.a]]),t["\u0275mpd"](4608,d.G,d.G,[]),t["\u0275mpd"](4608,d.Lb,d.Lb,[nn.d,d.c,d.Kb,[2,d.a],t.RendererFactory2]),t["\u0275mpd"](4608,d.jc,d.jc,[t.RendererFactory2]),t["\u0275mpd"](4608,on.q,on.q,[]),t["\u0275mpd"](4608,d.Zb,d.Zb,[[3,d.Zb],[2,d.Wb]]),t["\u0275mpd"](4608,d.rd,d.rd,[]),t["\u0275mpd"](4608,un.a,un.a,[un.f,un.b,t.ComponentFactoryResolver,un.e,un.c,t.Injector,t.NgZone,Z.d,cn.b]),t["\u0275mpd"](5120,un.g,un.h,[un.a]),t["\u0275mpd"](4608,d.He,d.He,[]),t["\u0275mpd"](4608,d.Le,d.Le,[]),t["\u0275mpd"](4608,d.ed,d.ed,[]),t["\u0275mpd"](1073742336,Z.c,Z.c,[]),t["\u0275mpd"](1073742336,en.a,en.a,[]),t["\u0275mpd"](1073742336,kn.b,kn.b,[]),t["\u0275mpd"](1073742336,ln.d,ln.d,[]),t["\u0275mpd"](1073742336,nn.a,nn.a,[]),t["\u0275mpd"](1073742336,d.B,d.B,[]),t["\u0275mpd"](1073742336,d.b,d.b,[]),t["\u0275mpd"](1073742336,d.pe,d.pe,[]),t["\u0275mpd"](1073742336,on.p,on.p,[]),t["\u0275mpd"](1073742336,on.e,on.e,[]),t["\u0275mpd"](1073742336,d.u,d.u,[]),t["\u0275mpd"](1073742336,d.Yb,d.Yb,[]),t["\u0275mpd"](1073742336,d.qd,d.qd,[]),t["\u0275mpd"](1073742336,cn.a,cn.a,[]),t["\u0275mpd"](1073742336,rn.c,rn.c,[]),t["\u0275mpd"](1073742336,dn.a,dn.a,[]),t["\u0275mpd"](1073742336,un.d,un.d,[]),t["\u0275mpd"](1073742336,d.Ge,d.Ge,[]),t["\u0275mpd"](1073742336,d.cc,d.cc,[]),t["\u0275mpd"](1073742336,d.Cd,d.Cd,[]),t["\u0275mpd"](1073742336,d.Me,d.Me,[]),t["\u0275mpd"](1073742336,d.mb,d.mb,[]),t["\u0275mpd"](1073742336,d.i,d.i,[]),t["\u0275mpd"](1073742336,mn.a,mn.a,[]),t["\u0275mpd"](1073742336,fn.a,fn.a,[]),t["\u0275mpd"](1073742336,d.db,d.db,[]),t["\u0275mpd"](1073742336,d.dd,d.dd,[]),t["\u0275mpd"](1073742336,d.w,d.w,[]),t["\u0275mpd"](1073742336,d.hd,d.hd,[]),t["\u0275mpd"](1073742336,B.s,B.s,[[2,B.x],[2,B.o]]),t["\u0275mpd"](1073742336,hn.a,hn.a,[]),t["\u0275mpd"](1073742336,gn.a,gn.a,[]),t["\u0275mpd"](1073742336,b,b,[t.ComponentFactoryResolver,e.b]),t["\u0275mpd"](1024,B.m,(function(){return[[{path:"**",component:p.a,data:v}]]}),[])])}))},aOGQ:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-facet-container</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ux-facet-typeahead-list</span>\n                <span class="token attr-name">header</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Authors<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[facets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>facets<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[(query)]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>query<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[suggestions]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>suggestions<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[simplified]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>\n                <span class="token attr-name">[typeaheadConfig]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ placeholder: \'Find Author\' }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-facet-typeahead-list</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ux-facet-container</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="row">\n    <div class="col-md-12">\n        <ux-facet-container>\n            <ux-facet-typeahead-list\n                header="Authors"\n                [facets]="facets"\n                [(query)]="query"\n                [suggestions]="suggestions"\n                [simplified]="false"\n                [typeaheadConfig]="{ placeholder: \'Find Author\' }">\n            </ux-facet-typeahead-list>\n        </ux-facet-container>\n    </div>\n</div>'}},aZMm:function(n,a,s){var t={"./dynamic-facets.snippet.html":"3OMx","./dynamic-facets.snippet.js":"vKXh","./facet-option-template.snippet.html":"PXvz"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="aZMm"},ezmE:function(n,a,s){var t={"./facet-container.snippet.html":"nA0v","./facet-option.snippet.html":"EUGB","./facet-option.snippet.js":"wJpT","./facet-visibility.snippet.js":"K5zi","./facet.snippet.html":"7X1j"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="ezmE"},gEwK:function(n,a){n.exports={snippet:'<span class="token comment">/*\n  Flot Line Chart With Facet Panel\n*/</span>\n\n<span class="token selector">.flot-facet-container</span> <span class="token punctuation">{</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.flot-facet-container .flot-chart-facet-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.flot-facet-container .flot-side-panel</span> <span class="token punctuation">{</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> -5px 0px 12px #ccc<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.flot-facet-container .flot-side-panel .date-range-label</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 6px 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.flot-facet-container .flot-side-panel .warning-text</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #ff454f<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.flot-facet-container .flot-side-panel .no-indent</span> <span class="token punctuation">{</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:"/*\n  Flot Line Chart With Facet Panel\n*/\n\n.flot-facet-container {\n    overflow: hidden;\n}\n\n.flot-facet-container .flot-chart-facet-container {\n    display: block;\n    height: 500px;\n}\n\n.flot-facet-container .flot-side-panel {\n    height: 500px;\n    box-shadow: -5px 0px 12px #ccc;\n    border: 1px solid #ddd;\n}\n\n.flot-facet-container .flot-side-panel .date-range-label {\n    padding: 0;\n    margin: 6px 0;\n}\n\n.flot-facet-container .flot-side-panel .warning-text {\n    color: #ff454f;\n    text-align: center;\n    margin-top: 10px;\n}\n\n.flot-facet-container .flot-side-panel .no-indent {\n    padding-left: 0;\n}"}},jHB4:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'FacetCtrl\'</span><span class="token punctuation">,</span> FacetCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nFacetCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$scope\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">FacetCtrl</span><span class="token punctuation">(</span><span class="token parameter">$scope</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> lc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\n        primary<span class="token punctuation">:</span> <span class="token string">"rgb(1, 169, 130)"</span><span class="token punctuation">,</span>\n        secondary1<span class="token punctuation">:</span> <span class="token string">"rgb(96, 121, 141)"</span><span class="token punctuation">,</span>\n        secondary2<span class="token punctuation">:</span> <span class="token string">"rgb(97, 71, 103)"</span><span class="token punctuation">,</span>\n        secondary3<span class="token punctuation">:</span> <span class="token string">"rgb(135, 123, 117)"</span><span class="token punctuation">,</span>\n        secondary4<span class="token punctuation">:</span> <span class="token string">"rgb(97, 125, 120)"</span><span class="token punctuation">,</span>\n        secondary5<span class="token punctuation">:</span> <span class="token string">"rgb(204, 204, 204)"</span><span class="token punctuation">,</span>\n        gridColor<span class="token punctuation">:</span> <span class="token string">"#999999"</span><span class="token punctuation">,</span>\n        tickColor<span class="token punctuation">:</span> <span class="token string">"#D4D4D4"</span><span class="token punctuation">,</span>\n        white<span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>\n        transparent<span class="token punctuation">:</span> <span class="token string">"rgba(0, 0, 0, 0)"</span><span class="token punctuation">,</span>\n        borderColor<span class="token punctuation">:</span> <span class="token string">"#E5E5E5"</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//default dates</span>\n    <span class="token keyword">var</span> minimumDate <span class="token operator">=</span> <span class="token number">1325376000000</span><span class="token punctuation">,</span>\n        maximumDate <span class="token operator">=</span> <span class="token number">1451606400000</span><span class="token punctuation">,</span>\n        startDate <span class="token operator">=</span> <span class="token number">1427846400000</span><span class="token punctuation">,</span>\n        endDate <span class="token operator">=</span> <span class="token number">1446336000000</span><span class="token punctuation">,</span>\n        step <span class="token operator">=</span> <span class="token number">2311200000</span><span class="token punctuation">,</span>\n        selectedUserModel <span class="token operator">=</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> ldapData <span class="token operator">=</span> <span class="token function">getPointsWithinRange</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">,</span> maximumDate<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> imapData <span class="token operator">=</span> <span class="token function">getPointsWithinRange</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">,</span> maximumDate<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> ecaData <span class="token operator">=</span> <span class="token function">getPointsWithinRange</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">,</span> maximumDate<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> adminData <span class="token operator">=</span> <span class="token function">getPointsWithinRange</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">,</span> maximumDate<span class="token punctuation">,</span> step<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//set the initial selection</span>\n    <span class="token keyword">var</span> chartData <span class="token operator">=</span> ldapData<span class="token punctuation">;</span>\n\n    <span class="token comment">/*\n    This function should be used to calculate new Y axis minimum and maximum values\n    when the data changes to provide a more suitable range\n    */</span>\n\n    <span class="token keyword">function</span> <span class="token function">updateChartYAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> start <span class="token operator">=</span> lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>min<span class="token punctuation">;</span>\n        <span class="token keyword">var</span> end <span class="token operator">=</span> lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>max<span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> min<span class="token punctuation">,</span> max<span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chartData<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> x <span class="token operator">=</span> chartData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">var</span> y <span class="token operator">=</span> chartData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> start <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>min <span class="token operator">||</span> y <span class="token operator">&lt;</span> min<span class="token punctuation">)</span> min <span class="token operator">=</span> y<span class="token punctuation">;</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>max <span class="token operator">||</span> y <span class="token operator">></span> max<span class="token punctuation">)</span> max <span class="token operator">=</span> y<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//add some extra space above and beneath</span>\n        min <span class="token operator">-=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n        max <span class="token operator">+=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//update the chart</span>\n        lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>min <span class="token operator">=</span> min<span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>max <span class="token operator">=</span> max<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/*\n    Date Range Facet\n    */</span>\n\n    lc<span class="token punctuation">.</span>dateRangeModel <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n    lc<span class="token punctuation">.</span>invalidDate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> dateChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">selectDateRange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//update date range</span>\n        <span class="token function">updateChart</span><span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">,</span> lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> lc<span class="token punctuation">.</span>invalidDate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token keyword">else</span> lc<span class="token punctuation">.</span>invalidDate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">deselectDateRange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//check if the user has changed the date rather than deselected</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>dateChanged<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            lc<span class="token punctuation">.</span>invalidDate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            dateChanged <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//if user deselected or hit clear all then reset the values to their default</span>\n        lc<span class="token punctuation">.</span>dateRangeModel <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>dateStart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>dateEnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>maximumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>invalidDate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//redraw the charts taking into account the default values</span>\n        <span class="token function">updateChart</span><span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">,</span> lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">displayDateRange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//convert the dates to readable strings</span>\n        <span class="token keyword">var</span> startDate <span class="token operator">=</span> lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">;</span>\n        <span class="token keyword">var</span> endDate <span class="token operator">=</span> lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> monthNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Jan"</span><span class="token punctuation">,</span> <span class="token string">"Feb"</span><span class="token punctuation">,</span> <span class="token string">"Mar"</span><span class="token punctuation">,</span> <span class="token string">"Apr"</span><span class="token punctuation">,</span> <span class="token string">"May"</span><span class="token punctuation">,</span> <span class="token string">"June"</span><span class="token punctuation">,</span> <span class="token string">"July"</span><span class="token punctuation">,</span> <span class="token string">"Aug"</span><span class="token punctuation">,</span> <span class="token string">"Sept"</span><span class="token punctuation">,</span> <span class="token string">"Oct"</span><span class="token punctuation">,</span> <span class="token string">"Nov"</span><span class="token punctuation">,</span> <span class="token string">"Dec"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> formattedFrom <span class="token operator">=</span> startDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span>\n            monthNames<span class="token punctuation">[</span>startDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span>\n            startDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">var</span> formattedTo <span class="token operator">=</span> endDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span>\n            monthNames<span class="token punctuation">[</span>endDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">\' \'</span> <span class="token operator">+</span>\n            endDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> <span class="token string">\'From \'</span> <span class="token operator">+</span> formattedFrom <span class="token operator">+</span> <span class="token string">" to "</span> <span class="token operator">+</span> formattedTo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">updateChart</span><span class="token punctuation">(</span><span class="token parameter">startDate<span class="token punctuation">,</span> endDate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//set the charts new start x and y axis</span>\n        lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>min <span class="token operator">=</span> startDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>max <span class="token operator">=</span> endDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//show a more appropriate Y axis range based on the values</span>\n        <span class="token function">updateChartYAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/*\n    Start Date Range Control\n    */</span>\n\n    lc<span class="token punctuation">.</span>dateStartIsOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    lc<span class="token punctuation">.</span>dateStart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">dateStartOpen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//show date picker and make sure other date picker is hidden</span>\n        lc<span class="token punctuation">.</span>dateEndIsOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>dateStartIsOpen <span class="token operator">=</span> <span class="token operator">!</span>lc<span class="token punctuation">.</span>dateStartIsOpen<span class="token punctuation">;</span>\n        $event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        $event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">dateStartUpdate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        dateChanged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> minimumDate<span class="token punctuation">)</span> lc<span class="token punctuation">.</span>dateStart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> maximumDate<span class="token punctuation">)</span> lc<span class="token punctuation">.</span>dateStart <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>maximumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        lc<span class="token punctuation">.</span>dateRangeModel <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            start<span class="token punctuation">:</span> lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">,</span>\n            end<span class="token punctuation">:</span> lc<span class="token punctuation">.</span>dateEnd\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/*\n    End Date Range Control\n    */</span>\n\n    lc<span class="token punctuation">.</span>dateEndIsOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    lc<span class="token punctuation">.</span>dateEnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>maximumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">dateEndOpen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//show date picker and make sure other date picker is hidden</span>\n        lc<span class="token punctuation">.</span>dateStartIsOpen <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        lc<span class="token punctuation">.</span>dateEndIsOpen <span class="token operator">=</span> <span class="token operator">!</span>lc<span class="token punctuation">.</span>dateEndIsOpen<span class="token punctuation">;</span>\n        $event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        $event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">dateEndUpdate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        dateChanged <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> minimumDate<span class="token punctuation">)</span> lc<span class="token punctuation">.</span>dateEnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>minimumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>dateEnd<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> maximumDate<span class="token punctuation">)</span> lc<span class="token punctuation">.</span>dateEnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>maximumDate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        lc<span class="token punctuation">.</span>dateRangeModel <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            start<span class="token punctuation">:</span> lc<span class="token punctuation">.</span>dateStart<span class="token punctuation">,</span>\n            end<span class="token punctuation">:</span> lc<span class="token punctuation">.</span>dateEnd\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/*\n    User Type Facet\n    */</span>\n\n    lc<span class="token punctuation">.</span>userTypeModel <span class="token operator">=</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">;</span>\n    lc<span class="token punctuation">.</span>selectedUserType <span class="token operator">=</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">;</span>\n    lc<span class="token punctuation">.</span>revertUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span>userTypeOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        ldap<span class="token punctuation">:</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">,</span>\n        imap<span class="token punctuation">:</span> <span class="token string">\'IMAP\'</span><span class="token punctuation">,</span>\n        eca<span class="token punctuation">:</span> <span class="token string">\'ECA\'</span><span class="token punctuation">,</span>\n        admin<span class="token punctuation">:</span> <span class="token string">\'Admin\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    $scope<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">\'lc.selectedUserType\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">!==</span> oldValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token comment">//if we are deselecting then we want to revert the user</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>revertUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                lc<span class="token punctuation">.</span>revertUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n                selectedUserModel <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> lc<span class="token punctuation">.</span>userTypeModel <span class="token operator">=</span> newValue<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">userTypeSelect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">//store the new selected user model</span>\n        selectedUserModel <span class="token operator">=</span> lc<span class="token punctuation">.</span>userTypeModel<span class="token punctuation">;</span>\n\n        <span class="token comment">//based on the user type show the data and change the color</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>userTypeModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token keyword">case</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">:</span>\n                chartData <span class="token operator">=</span> ldapData<span class="token punctuation">;</span>\n                lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">case</span> <span class="token string">\'IMAP\'</span><span class="token punctuation">:</span>\n                chartData <span class="token operator">=</span> imapData<span class="token punctuation">;</span>\n                lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>secondary1<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">case</span> <span class="token string">\'ECA\'</span><span class="token punctuation">:</span>\n                chartData <span class="token operator">=</span> ecaData<span class="token punctuation">;</span>\n                lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>secondary2<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">case</span> <span class="token string">\'Admin\'</span><span class="token punctuation">:</span>\n                chartData <span class="token operator">=</span> adminData<span class="token punctuation">;</span>\n                lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>secondary3<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//update the chart data</span>\n        lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> chartData<span class="token punctuation">;</span>\n\n        <span class="token comment">//update the y axis range</span>\n        <span class="token function">updateChartYAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">userTypeDeselect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//if we are deselecting then reset</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>lc<span class="token punctuation">.</span>userTypeModel <span class="token operator">===</span> selectedUserModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token comment">//set the user model to empty string to remove selected label</span>\n            lc<span class="token punctuation">.</span>userTypeModel <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//reset chart data</span>\n            chartData <span class="token operator">=</span> ldapData<span class="token punctuation">;</span>\n            lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>lineoptions<span class="token punctuation">.</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            lc<span class="token punctuation">.</span>lineChart<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> chartData<span class="token punctuation">;</span>\n\n            <span class="token comment">//update the y axis range</span>\n            <span class="token function">updateChartYAxis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">//update redio buttons</span>\n            lc<span class="token punctuation">.</span>selectedUserType <span class="token operator">=</span> <span class="token string">\'LDAP\'</span><span class="token punctuation">;</span>\n            lc<span class="token punctuation">.</span>revertUser <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            lc<span class="token punctuation">.</span>revertUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    lc<span class="token punctuation">.</span><span class="token function-variable function">userTypeDisplay</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> lc<span class="token punctuation">.</span>userTypeModel<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/*\n    Set up line chart for example\n    */</span>\n\n    lc<span class="token punctuation">.</span>lineChart <span class="token operator">=</span> <span class="token punctuation">{</span>\n        data<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token string">"line"</span><span class="token punctuation">,</span>\n            data<span class="token punctuation">:</span> ldapData\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        lineoptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            series<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                lines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    lineWidth<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                    fill<span class="token punctuation">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                shadowSize<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                highlightColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>secondary<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                tickDecimals<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                mode<span class="token punctuation">:</span> <span class="token string">\'time\'</span><span class="token punctuation">,</span>\n                timeformat<span class="token punctuation">:</span> <span class="token string">"%b %y"</span><span class="token punctuation">,</span>\n                tickColor<span class="token punctuation">:</span> flotChartColors<span class="token punctuation">.</span>transparent<span class="token punctuation">,</span>\n                min<span class="token punctuation">:</span> minimumDate<span class="token punctuation">,</span>\n                max<span class="token punctuation">:</span> maximumDate\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n            colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                hoverable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                clickable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                tickColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>tickColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                borderWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                borderColor<span class="token punctuation">:</span> flotChartColors<span class="token punctuation">.</span>borderColor\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                snap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                shifts<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">47</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                content<span class="token punctuation">:</span> <span class="token string">"x: %x, y: %y"</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/*\n    Get Sample Random Data\n    */</span>\n    <span class="token keyword">function</span> <span class="token function">getPointsWithinRange</span><span class="token punctuation">(</span><span class="token parameter">rangeStart<span class="token punctuation">,</span> rangeEnd<span class="token punctuation">,</span> step<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> rangeStart<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> rangeEnd<span class="token punctuation">;</span> i <span class="token operator">+=</span> step<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> randomPoint <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>high <span class="token operator">-</span> low <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> low<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> randomPoint<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> points<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:'angular.module(\'app\').controller(\'FacetCtrl\', FacetCtrl);\n\nFacetCtrl.$inject = [\'$scope\'];\n\nfunction FacetCtrl($scope) {\n    var lc = this;\n\n    var flotChartColors = {\n        primary: "rgb(1, 169, 130)",\n        secondary1: "rgb(96, 121, 141)",\n        secondary2: "rgb(97, 71, 103)",\n        secondary3: "rgb(135, 123, 117)",\n        secondary4: "rgb(97, 125, 120)",\n        secondary5: "rgb(204, 204, 204)",\n        gridColor: "#999999",\n        tickColor: "#D4D4D4",\n        white: "#FFFFFF",\n        transparent: "rgba(0, 0, 0, 0)",\n        borderColor: "#E5E5E5"\n    };\n\n    //default dates\n    var minimumDate = 1325376000000,\n        maximumDate = 1451606400000,\n        startDate = 1427846400000,\n        endDate = 1446336000000,\n        step = 2311200000,\n        selectedUserModel = \'LDAP\';\n\n    var ldapData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\n    var imapData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\n    var ecaData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\n    var adminData = getPointsWithinRange(minimumDate, maximumDate, step, 15, 75);\n\n    //set the initial selection\n    var chartData = ldapData;\n\n    /*\n    This function should be used to calculate new Y axis minimum and maximum values\n    when the data changes to provide a more suitable range\n    */\n\n    function updateChartYAxis() {\n        var start = lc.lineChart.lineoptions.xaxis.min;\n        var end = lc.lineChart.lineoptions.xaxis.max;\n\n        var min, max;\n\n        for (var i = 0; i < chartData.length; i++) {\n            var x = chartData[i][0];\n            var y = chartData[i][1];\n\n            if (x >= start && x <= end) {\n                if (!min || y < min) min = y;\n                if (!max || y > max) max = y;\n            }\n        }\n\n        //add some extra space above and beneath\n        min -= 5;\n        max += 5;\n\n        //update the chart\n        lc.lineChart.lineoptions.yaxis.min = min;\n        lc.lineChart.lineoptions.yaxis.max = max;\n    }\n\n    /*\n    Date Range Facet\n    */\n\n    lc.dateRangeModel = \'\';\n    lc.invalidDate = false;\n\n    var dateChanged = false;\n\n    lc.selectDateRange = function () {\n        //update date range\n        updateChart(lc.dateStart, lc.dateEnd);\n\n        if (lc.dateStart.getTime() > lc.dateEnd.getTime()) lc.invalidDate = true;\n        else lc.invalidDate = false;\n    };\n\n    lc.deselectDateRange = function () {\n\n        //check if the user has changed the date rather than deselected\n        if (dateChanged) {\n            lc.invalidDate = false;\n            dateChanged = false;\n            return;\n        }\n\n        //if user deselected or hit clear all then reset the values to their default\n        lc.dateRangeModel = \'\';\n        lc.dateStart = new Date(minimumDate);\n        lc.dateEnd = new Date(maximumDate);\n        lc.invalidDate = false;\n\n        //redraw the charts taking into account the default values\n        updateChart(lc.dateStart, lc.dateEnd);\n\n    };\n\n    lc.displayDateRange = function () {\n\n        //convert the dates to readable strings\n        var startDate = lc.dateStart;\n        var endDate = lc.dateEnd;\n\n        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"];\n\n        var formattedFrom = startDate.getDate() + \' \' +\n            monthNames[startDate.getMonth()] + \' \' +\n            startDate.getFullYear();\n\n        var formattedTo = endDate.getDate() + \' \' +\n            monthNames[endDate.getMonth()] + \' \' +\n            endDate.getFullYear();\n\n        return \'From \' + formattedFrom + " to " + formattedTo;\n    };\n\n    function updateChart(startDate, endDate) {\n        //set the charts new start x and y axis\n        lc.lineChart.lineoptions.xaxis.min = startDate.getTime();\n        lc.lineChart.lineoptions.xaxis.max = endDate.getTime();\n\n        //show a more appropriate Y axis range based on the values\n        updateChartYAxis();\n    }\n\n    /*\n    Start Date Range Control\n    */\n\n    lc.dateStartIsOpen = false;\n    lc.dateStart = new Date(minimumDate);\n\n    lc.dateStartOpen = function ($event) {\n        //show date picker and make sure other date picker is hidden\n        lc.dateEndIsOpen = false;\n        lc.dateStartIsOpen = !lc.dateStartIsOpen;\n        $event.preventDefault();\n        $event.stopPropagation();\n    };\n\n    lc.dateStartUpdate = function () {\n        dateChanged = true;\n\n        if (lc.dateStart.getTime() < minimumDate) lc.dateStart = new Date(minimumDate);\n        if (lc.dateStart.getTime() > maximumDate) lc.dateStart = new Date(maximumDate);\n\n        lc.dateRangeModel = JSON.stringify({\n            start: lc.dateStart,\n            end: lc.dateEnd\n        });\n    };\n\n    /*\n    End Date Range Control\n    */\n\n    lc.dateEndIsOpen = false;\n    lc.dateEnd = new Date(maximumDate);\n\n    lc.dateEndOpen = function ($event) {\n        //show date picker and make sure other date picker is hidden\n        lc.dateStartIsOpen = false;\n        lc.dateEndIsOpen = !lc.dateEndIsOpen;\n        $event.preventDefault();\n        $event.stopPropagation();\n    };\n\n    lc.dateEndUpdate = function () {\n        dateChanged = true;\n\n        if (lc.dateEnd.getTime() < minimumDate) lc.dateEnd = new Date(minimumDate);\n        if (lc.dateEnd.getTime() > maximumDate) lc.dateEnd = new Date(maximumDate);\n\n        lc.dateRangeModel = JSON.stringify({\n            start: lc.dateStart,\n            end: lc.dateEnd\n        });\n    };\n\n    /*\n    User Type Facet\n    */\n\n    lc.userTypeModel = \'LDAP\';\n    lc.selectedUserType = \'LDAP\';\n    lc.revertUser = false;\n\n    lc.userTypeOptions = {\n        ldap: \'LDAP\',\n        imap: \'IMAP\',\n        eca: \'ECA\',\n        admin: \'Admin\'\n    };\n\n    $scope.$watch(\'lc.selectedUserType\', function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n\n            //if we are deselecting then we want to revert the user\n            if (lc.revertUser) {\n                lc.revertUser = false;\n                selectedUserModel = null;\n            } else lc.userTypeModel = newValue;\n        }\n    });\n\n    lc.userTypeSelect = function () {\n\n        //store the new selected user model\n        selectedUserModel = lc.userTypeModel;\n\n        //based on the user type show the data and change the color\n        switch (lc.userTypeModel) {\n\n            case \'LDAP\':\n                chartData = ldapData;\n                lc.lineChart.lineoptions.colors = [flotChartColors.primary];\n                break;\n\n            case \'IMAP\':\n                chartData = imapData;\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary1];\n                break;\n\n            case \'ECA\':\n                chartData = ecaData;\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary2];\n                break;\n\n            case \'Admin\':\n                chartData = adminData;\n                lc.lineChart.lineoptions.colors = [flotChartColors.secondary3];\n                break;\n        }\n\n        //update the chart data\n        lc.lineChart.data[0].data = chartData;\n\n        //update the y axis range\n        updateChartYAxis();\n    };\n\n    lc.userTypeDeselect = function () {\n        //if we are deselecting then reset\n        if (lc.userTypeModel === selectedUserModel) {\n\n            //set the user model to empty string to remove selected label\n            lc.userTypeModel = \'\';\n\n            //reset chart data\n            chartData = ldapData;\n            lc.lineChart.lineoptions.colors = [flotChartColors.primary];\n            lc.lineChart.data[0].data = chartData;\n\n            //update the y axis range\n            updateChartYAxis();\n\n            //update redio buttons\n            lc.selectedUserType = \'LDAP\';\n            lc.revertUser = true;\n        } else {\n            lc.revertUser = false;\n        }\n    };\n\n    lc.userTypeDisplay = function () {\n        return lc.userTypeModel;\n    };\n\n    /*\n    Set up line chart for example\n    */\n\n    lc.lineChart = {\n        data: [{\n            label: "line",\n            data: ldapData\n        }],\n        lineoptions: {\n            series: {\n                lines: {\n                    show: true,\n                    lineWidth: 3,\n                    fill: false\n                },\n                shadowSize: 0,\n                highlightColor: [flotChartColors.secondary]\n            },\n            xaxis: {\n                tickDecimals: 0,\n                mode: \'time\',\n                timeformat: "%b %y",\n                tickColor: flotChartColors.transparent,\n                min: minimumDate,\n                max: maximumDate\n            },\n            yaxis: {},\n            colors: [flotChartColors.primary],\n            grid: {\n                color: [flotChartColors.gridColor],\n                hoverable: true,\n                clickable: true,\n                tickColor: [flotChartColors.tickColor],\n                borderWidth: 1,\n                borderColor: flotChartColors.borderColor\n            },\n            legend: {\n                show: false\n            },\n            tooltip: {\n                show: true,\n                snap: true,\n                shifts: {\n                    x: 0,\n                    y: -47\n                },\n                content: "x: %x, y: %y"\n            }\n        }\n    };\n\n    /*\n    Get Sample Random Data\n    */\n    function getPointsWithinRange(rangeStart, rangeEnd, step, low, high) {\n        var points = [];\n\n        for (var i = rangeStart; i <= rangeEnd; i += step) {\n            var randomPoint = Math.floor(Math.random() * (high - low + 1) + low);\n            points.push([i, randomPoint]);\n        }\n        return points;\n    }\n\n}'}},nA0v:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-container</span> <span class="token attr-name">select-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected:<span class="token punctuation">"</span></span> <span class="token attr-name">clear-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Clear All<span class="token punctuation">"</span></span> <span class="token attr-name">no-items-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>None selected<span class="token punctuation">"</span></span>\n   <span class="token attr-name">clear-all-fn</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.clearAllFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!--facet elements....  --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-container</span><span class="token punctuation">></span></span>'}},qv1F:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-container</span> <span class="token attr-name">select-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected:<span class="token punctuation">"</span></span> <span class="token attr-name">clear-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Clear All<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token comment">&lt;!--...--\x3e</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-custom</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> <span class="token punctuation">\'</span>DATE MODIFIED\' <span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetSelect<span class="token punctuation">"</span></span> <span class="token attr-name">deselect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetDeselect<span class="token punctuation">"</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.date<span class="token punctuation">"</span></span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetDisplayFn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group date m-nil<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetOpen($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.date<span class="token punctuation">"</span></span> <span class="token attr-name">datepicker-popup</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dd MMMM yyyy<span class="token punctuation">"</span></span>\n            <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetOpen($event)<span class="token punctuation">"</span></span> <span class="token attr-name">is-open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vm.dateFacetOpened<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-custom</span><span class="token punctuation">></span></span>\n     <span class="token comment">&lt;!--...--\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-container</span><span class="token punctuation">></span></span>'}},uUjt:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FacetCtrl as lc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-md-12 m-t-md<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>row flot-facet-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart-facet-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.lineChart.data<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.lineChart.lineoptions<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.lineChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\n                            <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.lineChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-4 flot-side-panel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-container</span> <span class="token attr-name">select-title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected:<span class="token punctuation">"</span></span> <span class="token attr-name">clear-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Clear All<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-custom</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> <span class="token punctuation">\'</span>Date Range\' <span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.selectDateRange<span class="token punctuation">"</span></span> <span class="token attr-name">deselect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.deselectDateRange<span class="token punctuation">"</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateRangeModel<span class="token punctuation">"</span></span>\n                            <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.displayDateRange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-2 date-range-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>From<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-10 input-group date m-nil m-b-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateStartOpen($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateStart<span class="token punctuation">"</span></span> <span class="token attr-name">datepicker-popup</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dd MMMM yyyy<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateStartOpen($event)<span class="token punctuation">"</span></span>\n                                    <span class="token attr-name">is-open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateStartIsOpen<span class="token punctuation">"</span></span> <span class="token attr-name">ng-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateStartUpdate()<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected start date<span class="token punctuation">"</span></span>\n                                <span class="token punctuation">/></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-2 date-range-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>To<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col-sm-10 input-group date m-nil<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-group-addon<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateEndOpen($event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hpe-icon hpe-calendar<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateEnd<span class="token punctuation">"</span></span> <span class="token attr-name">datepicker-popup</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dd MMMM yyyy<span class="token punctuation">"</span></span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateEndOpen($event)<span class="token punctuation">"</span></span>\n                                    <span class="token attr-name">is-open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateEndIsOpen<span class="token punctuation">"</span></span> <span class="token attr-name">ng-change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.dateEndUpdate()<span class="token punctuation">"</span></span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Selected end date<span class="token punctuation">"</span></span>\n                                <span class="token punctuation">/></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-center text-muted m-t-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>Choose a date range between 1st January 2012 - 1st January 2016<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning-text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.invalidDate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Invalid Date Range<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-custom</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>facet-custom</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> <span class="token punctuation">\'</span>User Type\' <span class="token punctuation">"</span></span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeSelect<span class="token punctuation">"</span></span> <span class="token attr-name">deselect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeDeselect<span class="token punctuation">"</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeModel<span class="token punctuation">"</span></span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeDisplay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radiogroup<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radiobutton</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-indent<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.selectedUserType<span class="token punctuation">"</span></span> <span class="token attr-name">ng-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeOptions.ldap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>LDAP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radiobutton</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radiobutton</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-indent<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.selectedUserType<span class="token punctuation">"</span></span> <span class="token attr-name">ng-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeOptions.imap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>IMAP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radiobutton</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radiobutton</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-indent<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.selectedUserType<span class="token punctuation">"</span></span> <span class="token attr-name">ng-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeOptions.eca<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ECA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radiobutton</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radiobutton</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no-indent<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.selectedUserType<span class="token punctuation">"</span></span> <span class="token attr-name">ng-value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.userTypeOptions.admin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radiobutton</span><span class="token punctuation">></span></span>\n                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-custom</span><span class="token punctuation">></span></span>\n\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>facet-container</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div ng-controller="FacetCtrl as lc" class="container-fluid">\n    <div class="row">\n        <div class="col-md-12 m-t-md">\n            <div class="row flot-facet-container">\n                <div class="col-sm-8">\n                    <div class="flot-chart-facet-container">\n                        <flot dataset="lc.lineChart.data" options="lc.lineChart.lineoptions" on-plot-click="lc.lineChart.onPlotClick(event,pos,item)"\n                            on-hover-click="lc.lineChart.onPlotHover(event,pos,item)">\n                        </flot>\n                    </div>\n                </div>\n                <div class="col-sm-4 flot-side-panel">\n                    <facet-container select-title="Selected:" clear-text="Clear All">\n\n                        <facet-custom name=" \'Date Range\' " select="lc.selectDateRange" deselect="lc.deselectDateRange" model="lc.dateRangeModel"\n                            display="lc.displayDateRange">\n                            <br />\n                            <label class="col-sm-2 date-range-label">From</label>\n                            <div class="col-sm-10 input-group date m-nil m-b-sm">\n                                <span class="input-group-addon" ng-click="lc.dateStartOpen($event)">\n                          <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\n                        </span>\n                                <input type="text" class="form-control" ng-model="lc.dateStart" datepicker-popup="dd MMMM yyyy" ng-click="lc.dateStartOpen($event)"\n                                    is-open="lc.dateStartIsOpen" ng-change="lc.dateStartUpdate()" aria-label="Selected start date"\n                                />\n                            </div>\n\n                            <label class="col-sm-2 date-range-label">To</label>\n                            <div class="col-sm-10 input-group date m-nil">\n                                <span class="input-group-addon" ng-click="lc.dateEndOpen($event)">\n                          <i class="hpe-icon hpe-calendar" aria-hidden="true"></i>\n                        </span>\n                                <input type="text" class="form-control" ng-model="lc.dateEnd" datepicker-popup="dd MMMM yyyy" ng-click="lc.dateEndOpen($event)"\n                                    is-open="lc.dateEndIsOpen" ng-change="lc.dateEndUpdate()" aria-label="Selected end date"\n                                />\n                            </div>\n                            <p class="text-center text-muted m-t-sm"><small>Choose a date range between 1st January 2012 - 1st January 2016</small></p>\n                            <p class="warning-text" ng-show="lc.invalidDate">Invalid Date Range</p>\n                        </facet-custom>\n\n                        <facet-custom name=" \'User Type\' " select="lc.userTypeSelect" deselect="lc.userTypeDeselect" model="lc.userTypeModel" display="lc.userTypeDisplay">\n\n                            <div role="radiogroup">\n                                <div class="radio">\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.ldap">LDAP</radiobutton>\n                                </div>\n                                <div class="radio">\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.imap">IMAP</radiobutton>\n                                </div>\n                                <div class="radio">\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.eca">ECA</radiobutton>\n                                </div>\n                                <div class="radio">\n                                    <radiobutton class="no-indent" ng-model="lc.selectedUserType" ng-value="lc.userTypeOptions.admin">Admin</radiobutton>\n                                </div>\n                            </div>\n\n                        </facet-custom>\n\n                    </facet-container>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'}},vKXh:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"TestCtrl"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"exampleDataService"</span><span class="token punctuation">,</span> TestCtrl<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">TestCtrl</span><span class="token punctuation">(</span><span class="token parameter">exampleDataService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>service <span class="token operator">=</span> exampleDataService<span class="token punctuation">;</span>\n\n    <span class="token comment">//Example configuration</span>\n    vm<span class="token punctuation">.</span>facetLongListConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n        minCharacters<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n        minIndividualItems<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        maxIndividualItems<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        maxDisplayableItems<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        showZero<span class="token punctuation">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>facetOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n        title<span class="token punctuation">:</span> <span class="token string">"Author"</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>service<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//Logic to filter the matching names</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                name<span class="token punctuation">:</span> user<span class="token punctuation">,</span>\n                count<span class="token punctuation">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">filter</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> data<span class="token punctuation">.</span>name <span class="token operator">===</span> user<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>facetOptions<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        option<span class="token punctuation">.</span><span class="token function-variable function">select</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Facet Selected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//Implement logic when facet is selected</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        option<span class="token punctuation">.</span><span class="token function-variable function">deselect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Facet Deselected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//Implement logic when facet is deselected</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>facetOptionTypeahead <span class="token operator">=</span> <span class="token string">"option.name + \' - \' + option.count + \' books\'"</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span><span class="token function-variable function">longListCallback</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">textInput<span class="token punctuation">,</span> optionList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> optionList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}},wJpT:function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">"ListViewCtrl"</span><span class="token punctuation">,</span> ListViewCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">ListViewCtrl</span><span class="token punctuation">(</span><span class="token parameter">$state<span class="token punctuation">,</span> items<span class="token punctuation">,</span> exampleDataService<span class="token punctuation">,</span> $rootScope<span class="token punctuation">,</span> multipleSelectProvider</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token comment">// ........</span>\n\n    vm<span class="token punctuation">.</span>service <span class="token operator">=</span> exampleDataService<span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>totalItems <span class="token operator">=</span> vm<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>currentPage <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>pageSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>items <span class="token operator">=</span> items<span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>filters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>facets <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>dropdownFilters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token comment">// .........</span>\n    vm<span class="token punctuation">.</span>multiprovider <span class="token operator">=</span> multipleSelectProvider<span class="token punctuation">;</span>\n    <span class="token comment">// ..........</span>\n    vm<span class="token punctuation">.</span>facets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>usersFacet<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span>facets<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>extFacet<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span><span class="token function">generateFacetObjects</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span><span class="token function">generateFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    vm<span class="token punctuation">.</span><span class="token function-variable function">clearAllFn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">ListViewCtrl</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">generateFacetObjects</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token comment">// .........</span>\n    option<span class="token punctuation">.</span><span class="token function-variable function">select</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// .........</span>\n        vm<span class="token punctuation">.</span><span class="token function">updateSelectCounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">loadPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    option<span class="token punctuation">.</span><span class="token function-variable function">deselect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ..........</span>\n        vm<span class="token punctuation">.</span><span class="token function">updateSelectCounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        vm<span class="token punctuation">.</span><span class="token function">loadPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    option<span class="token punctuation">.</span>count <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    option<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    option<span class="token punctuation">.</span>showZero <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token class-name">ListViewCtrl</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">updateSelectCounts</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token comment">//sort out filters</span>\n    <span class="token keyword">var</span> filters <span class="token operator">=</span> filters <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>filters<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">filterListToBeOred</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>filterListToBeOred<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            filters<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> filterListToBeOred<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">filter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    vm<span class="token punctuation">.</span>items <span class="token operator">=</span> vm<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>currentPage <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span> filters<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> vm<span class="token punctuation">.</span>items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>multiprovider<span class="token punctuation">.</span><span class="token function">isSelected</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            vm<span class="token punctuation">.</span>count <span class="token operator">=</span> vm<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    vm<span class="token punctuation">.</span>multiprovider<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count <span class="token operator">=</span> vm<span class="token punctuation">.</span>count<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'}},ybOE:function(n,a,s){var t={"./custom-facets.snippet.html":"qv1F","./custom-facets.snippet.js":"Hkmx","./sample.snippet.html":"1RYd"};function p(n){var a=e(n);return s(a)}function e(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=e,n.exports=p,p.id="ybOE"}}]);