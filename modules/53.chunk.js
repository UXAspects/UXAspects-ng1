(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{"1k8U":function(n,a,s){var t={"./chart.html":"aaOX","./chart.js":"a+5N"};function l(n){var a=p(n);return s(a)}function p(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}l.keys=function(){return Object.keys(t)},l.resolve=p,n.exports=l,l.id="1k8U"},"9LNQ":function(n,a){n.exports={snippet:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> ViewChild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@angular/core\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@ux-aspects/ux-aspects\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BaseChartDirective <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'ng2-charts\'</span><span class="token punctuation">;</span>\n\n@<span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    selector<span class="token punctuation">:</span> <span class="token string">\'app\'</span><span class="token punctuation">,</span>\n    templateUrl<span class="token punctuation">:</span> <span class="token string">\'./app.component.html\'</span><span class="token punctuation">,</span>\n    styleUrls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'./app.component.css\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppComponent</span> <span class="token punctuation">{</span>\n\n    <span class="token comment">// access the chart directive properties</span>\n    @<span class="token function">ViewChild</span><span class="token punctuation">(</span>BaseChartDirective<span class="token punctuation">)</span> baseChart<span class="token punctuation">:</span> BaseChartDirective<span class="token punctuation">;</span>\n\n    <span class="token comment">// configure the directive data</span>\n    lineChartData<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartDataSets<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    lineChartOptions<span class="token punctuation">:</span> Chart<span class="token punctuation">.</span>ChartOptions<span class="token punctuation">;</span>\n    lineChartLegend<span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    lineChartColors<span class="token punctuation">:</span> any<span class="token punctuation">;</span>\n\n    livedata<span class="token punctuation">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">constructor</span><span class="token punctuation">(</span>colorService<span class="token punctuation">:</span> ColorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">let</span> gridColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> lineForecastFillColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.06</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> pointBorderColor <span class="token operator">=</span> colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// set the initial chart data</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            maintainAspectRatio<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            responsive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            animation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            elements<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                line<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    tension<span class="token punctuation">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            scales<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                xAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    type<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n                    position<span class="token punctuation">:</span> <span class="token string">\'bottom\'</span><span class="token punctuation">,</span>\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token punctuation">:</span> <span class="token number">299</span><span class="token punctuation">,</span>\n                        step<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n                        fontSize<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment">/* Hide Labels on X Axis */</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        color<span class="token punctuation">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                yAxes<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    ticks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                        max<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                        stepSize<span class="token punctuation">:</span> <span class="token number">25</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">as</span> Chart<span class="token punctuation">.</span>LinearTickOptions<span class="token punctuation">,</span>\n                    gridLines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                        color<span class="token punctuation">:</span> gridColor\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            tooltips<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartColors <span class="token operator">=</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                borderColor<span class="token punctuation">:</span> lineBorderColor<span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> lineFillColor<span class="token punctuation">,</span>\n                pointBackgroundColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n                pointBorderColor<span class="token punctuation">:</span> <span class="token string">\'transparent\'</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// update chart data every 40ms</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">updateChartData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// instatiate new array to trigger change detection</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token operator">&lt;</span>Chart<span class="token punctuation">.</span>ChartDataSets<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span>lineChartData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            borderWidth<span class="token punctuation">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> number<span class="token punctuation">,</span> y<span class="token punctuation">:</span> number<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">let</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                x<span class="token punctuation">:</span> i<span class="token punctuation">,</span>\n                y<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>',example:"import { Component, ViewChild } from '@angular/core';\nimport { ColorService } from '@ux-aspects/ux-aspects';\nimport { BaseChartDirective } from 'ng2-charts';\n\n@Component({\n    selector: 'app',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    // access the chart directive properties\n    @ViewChild(BaseChartDirective) baseChart: BaseChartDirective;\n\n    // configure the directive data\n    lineChartData: Chart.ChartDataSets[];\n    lineChartOptions: Chart.ChartOptions;\n    lineChartLegend: boolean = false;\n    lineChartColors: any;\n\n    livedata: number[] = [];\n\n    constructor(colorService: ColorService) {\n\n        let gridColor = colorService.getColor('grey6').toHex();\n        let lineBorderColor = colorService.getColor('chart1').toRgb();\n        let lineFillColor = colorService.getColor('chart1').setAlpha(0.1).toRgba();\n        let lineForecastFillColor = colorService.getColor('chart1').setAlpha(0.06).toRgba();\n        let pointBorderColor = colorService.getColor('chart1').setAlpha(0.5).toRgba();\n\n        // set the initial chart data\n        this.updateChartData();\n\n        this.lineChartOptions = {\n            maintainAspectRatio: false,\n            responsive: true,\n            animation: false,\n            elements: {\n                line: {\n                    tension: 0\n                }\n            },\n            scales: {\n                xAxes: [{\n                    type: 'linear',\n                    position: 'bottom',\n                    ticks: {\n                        min: 0,\n                        max: 299,\n                        step: 50,\n                        fontSize: 0 /* Hide Labels on X Axis */\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        min: 0,\n                        max: 100,\n                        stepSize: 25\n                    } as Chart.LinearTickOptions,\n                    gridLines: {\n                        color: gridColor\n                    }\n                }]\n            },\n            tooltips: {\n                enabled: false\n            }\n        };\n\n        this.lineChartColors = [\n            {\n                borderColor: lineBorderColor,\n                backgroundColor: lineFillColor,\n                pointBackgroundColor: 'transparent',\n                pointBorderColor: 'transparent'\n            }\n        ];\n\n        setInterval(() => {\n            // update chart data every 40ms\n            this.updateChartData();\n        }, 40);\n    }\n\n    updateChartData() {\n\n        // instatiate new array to trigger change detection\n        this.lineChartData = new Array<Chart.ChartDataSets>();\n\n        this.lineChartData.push({\n            data: this.getRandomData(),\n            borderWidth: 1\n        });\n    }\n\n    getRandomData(): { x: number, y: number}[] {\n\n        if (this.livedata.length) {\n            this.livedata = this.livedata.slice(1);\n        }\n\n        while (this.livedata.length < 300) {\n            let previous = this.livedata.length ? this.livedata[this.livedata.length - 1] : 50;\n            let y = previous + Math.random() * 10 - 5;\n\n            this.livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n        let res = [];\n        for (let i = 0; i < this.livedata.length; ++i) {\n            res.push({\n                x: i,\n                y: this.livedata[i]\n            });\n        }\n\n        return res;\n    }\n\n}"}},ZgaH:function(n,a,s){"use strict";s.r(a);var t=s("CcnG"),l=s("T/2f"),p=s("YZ8U"),o=s("mrSG"),e=s("AVdU"),u=s("yHOM"),c=s("W9B5"),i=function(n){function a(a){var t=n.call(this,s("1k8U"))||this;t.livedata=[],t.playground=Object(c.a)({html:t.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"LiveChartCtrl as lc"},js:[t.snippets.raw.chartJs]});var l={primary:a.getColor("chart1").toRgb(),gridColor:a.getColor("grey4").toHex(),tickColor:a.getColor("grey6").toHex(),borderColor:a.getColor("grey2").setAlpha(.5).toRgba(),white:"#FFFFFF"};return t.series=[{data:t.getRandomData(),lines:{fill:!0,lineWidth:1,fillColor:{colors:[{opacity:.1},{opacity:.1}]}},shadowSize:0}],t.options={grid:{color:[l.gridColor],tickColor:[l.tickColor],borderWidth:{top:0,bottom:1,left:1,right:0},borderColor:{bottom:[l.borderColor],left:[l.borderColor]},minBorderMargin:20,labelMargin:10,backgroundColor:{colors:[[l.white],[l.white]]},margin:{top:8,bottom:20,left:20},markings:function(n){for(var a=[],s=n.xaxis,t=Math.floor(s.min);t<s.max;t+=2*s.tickSize)a.push({xaxis:{from:t,to:t+s.tickSize},color:[l.white]});return a}},colors:[l.primary],xaxis:{tickFormatter:function(){return""}},yaxis:{min:0,max:110},legend:{show:!0}},setInterval(function(){t.series[0].data=t.getRandomData()},40),t}return Object(o.__extends)(a,n),a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(n<0?0:n>100?100:n)}for(var a=[],s=0;s<this.livedata.length;++s)a.push([s,this.livedata[s]]);return a},Object(o.__decorate)([Object(u.a)("ChartsLiveChartNg1Component")],a)}(e.a),r=function(n){function a(a){var t=n.call(this,s("s89H"))||this;t.playground={files:{"app.component.ts":t.snippets.raw.liveChartTs,"app.component.html":t.snippets.raw.liveChartHtml,"app.component.css":t.snippets.raw.liveChartCss},modules:[{library:"chart.js"},{imports:["ChartsModule"],library:"ng2-charts"},{imports:["ColorServiceModule"],library:"@ux-aspects/ux-aspects"}]},t.lineChartLegend=!1,t.livedata=[];var l=a.getColor("grey6").toHex(),p=a.getColor("chart1").toRgb(),o=a.getColor("chart1").setAlpha(.1).toRgba();return a.getColor("chart1").setAlpha(.06).toRgba(),a.getColor("chart1").setAlpha(.5).toRgba(),t.updateChartData(),t.lineChartOptions={maintainAspectRatio:!1,responsive:!0,animation:{},elements:{line:{tension:0}},scales:{xAxes:[{type:"linear",position:"bottom",ticks:{min:0,max:299,step:50,fontSize:0},gridLines:{color:l}}],yAxes:[{ticks:{min:0,max:100,stepSize:25},gridLines:{color:l}}]},tooltips:{enabled:!1}},t.lineChartColors=[{borderColor:p,backgroundColor:o,pointBackgroundColor:"transparent",pointBorderColor:"transparent"}],setInterval(function(){t.updateChartData()},40),t}return Object(o.__extends)(a,n),a.prototype.updateChartData=function(){this.lineChartData=new Array,this.lineChartData.push({data:this.getRandomData(),borderWidth:1})},a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(n<0?0:n>100?100:n)}for(var a=[],s=0;s<this.livedata.length;++s)a.push({x:s,y:this.livedata[s]});return a},Object(o.__decorate)([Object(u.a)("ChartsLiveChartComponent")],a)}(e.a),k={category:p.b.resolveCategoryData(p.a.Charts,"Live Chart")},d=function(){return function(n,a){a.registerResolver(n)}}(),h=s("WmtN"),m=s("HRZI"),g=s("pMnS"),v=s("GBPT"),C=s("rYg0"),b=s("f5YR"),f=s("9hoY"),y=s("+gXg"),x=s("rpQh"),w=s("2RDK"),D=s("r1ng"),S=s("COk8"),R=s("ZYCi"),L=s("Ip0R"),M=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function O(n){return t["\u0275vid"](2,[(n()(),t["\u0275eld"](0,0,null,null,4,"div",[["class","flot-chart"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](2,0,null,null,1,"flot",[],null,null,null,null,null)),t["\u0275did"](3,999424,null,0,b.bc,[t.ElementRef,t.Injector],{dataset:[0,"dataset"],options:[1,"options"]},null),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](6,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,11,"uxd-api-properties",[],null,null,null,f.b,f.a)),t["\u0275did"](9,49152,null,0,y.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](11,0,null,0,8,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](12,0,null,null,2,"tr",[["name","data"],["required","true"],["type","number or array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](13,49152,null,0,w.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Coordinates in the Live chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](16,0,null,null,2,"tr",[["name","series"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](17,49152,null,0,w.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the chart type and its layout. Values include 'lines', 'bar' and 'points'.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](21,0,null,null,3,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(n()(),t["\u0275eld"](23,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["series"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](26,0,null,null,23,"uxd-api-properties",[],null,null,null,f.b,f.a)),t["\u0275did"](27,49152,null,0,y.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](29,0,null,0,20,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](30,0,null,null,2,"tr",[["name","lineWidth"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](31,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the thickness of the line chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](34,0,null,null,2,"tr",[["name","show"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](35,49152,null,0,w.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If set to true displays the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](38,0,null,null,2,"tr",[["name","fillColor"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](39,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Specifies the colors of the fill. For Line chart this produces area graphs. If more than one color is specified this will produce a gradient.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](42,0,null,null,2,"tr",[["name","fill"],["type","boolean or number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](43,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If set to true fills the chart with colors in the fillColors property. A number between 0 and 1 defines the opacity of the fill.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](46,0,null,null,2,"tr",[["name","shadowSize"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](47,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Default size of shadows in pixels. Set it to 0 to remove shadows.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](51,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Live Charts are defined by the "])),(n()(),t["\u0275eld"](53,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["flot"])),(n()(),t["\u0275ted"](-1,null,[" directive. The dataset and options attribute define the live chart data and options respectively.\nDataset and Options are defined within the LiveChartCtrl."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](57,0,null,null,18,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,m.mc,m.Y)),t["\u0275prd"](512,null,b.We,b.We,[]),t["\u0275did"](59,5423104,null,1,b.Ue,[b.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](62,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,m.lc,m.X)),t["\u0275did"](63,180224,[[1,4]],0,b.Ne,[b.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](65,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,D.b,D.a)),t["\u0275did"](66,114688,null,0,S.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](69,0,null,0,5,"ux-tab",[["heading","Javascript"]],null,null,null,m.lc,m.X)),t["\u0275did"](70,180224,[[1,4]],0,b.Ne,[b.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](72,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,D.b,D.a)),t["\u0275did"](73,114688,null,0,S.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](77,0,null,null,7,"uxd-api-properties",[],null,null,null,f.b,f.a)),t["\u0275did"](78,49152,null,0,y.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](80,0,null,0,4,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](81,0,null,null,2,"tr",[["name","markings"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](82,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Markings used to draw simple lines and rectangular areas in the background of the plot. It can be an array of ranges in the form of { xaxis: { from, to }, yaxis: { from, to } } or a function(above example) that returns this range.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](86,0,null,null,10,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](88,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](89,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": Refer to the "])),(n()(),t["\u0275eld"](92,0,null,null,2,"a",[["routerLink","/charts/flot-options"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(n,a,s){var l=!0;return"click"===a&&(l=!1!==t["\u0275nov"](n,93).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&l),l},null,null)),t["\u0275did"](93,671744,null,0,R.o,[R.m,R.a,L.LocationStrategy],{routerLink:[0,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["Flot Options"])),(n()(),t["\u0275ted"](-1,null,[" page for details of chart options."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](98,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To support users of assistive technologies, provide a text summary of the chart with an "])),(n()(),t["\u0275eld"](100,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["aria-label"])),(n()(),t["\u0275ted"](-1,null,[" or "])),(n()(),t["\u0275eld"](103,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["span"])),(n()(),t["\u0275ted"](-1,null,[" hidden with the "])),(n()(),t["\u0275eld"](106,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["sr-only"])),(n()(),t["\u0275ted"](-1,null,[" class. For live charts the most appropriate information to convey will vary depending on the chart\u2019s purpose, but may typically be the highest or most recent data point."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](110,0,null,null,6,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](112,0,null,null,3,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](113,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": This component can be used in an Angular application by importing the HybridModule."])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,3,0,s.series,s.options),n(a,13,0,"data","true","number or array"),n(a,17,0,"series","true","string"),n(a,31,0,"lineWidth","number"),n(a,35,0,"show","true","boolean"),n(a,39,0,"fillColor","array"),n(a,43,0,"fill","boolean or number"),n(a,47,0,"shadowSize","number"),n(a,59,0,!1),n(a,63,0,"HTML"),n(a,66,0,"html",s.snippets.compiled.chartHtml),n(a,70,0,"Javascript"),n(a,73,0,"javascript",s.snippets.compiled.chartJs),n(a,82,0,"markings","array"),n(a,93,0,"/charts/flot-options")},function(n,a){n(a,57,0,"left"===t["\u0275nov"](a,59).stacked,"right"===t["\u0275nov"](a,59).stacked),n(a,92,0,t["\u0275nov"](a,93).target,t["\u0275nov"](a,93).href)})}function T(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-charts-live-chart-ng1",[],null,null,null,O,M)),t["\u0275did"](1,49152,null,0,i,[b.H],null,null)],null,null)}var F=t["\u0275ccf"]("uxd-charts-live-chart-ng1",i,T,{},{},[]),A=s("xdbM"),N=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function j(n){return t["\u0275vid"](0,[t["\u0275qud"](402653184,1,{baseChart:0}),(n()(),t["\u0275eld"](1,0,null,null,5,"div",[["class","demo-chart-container"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](3,0,null,null,2,"canvas",[["baseChart",""],["chartType","line"]],null,null,null,null,null)),t["\u0275did"](4,737280,[[1,4]],0,A.BaseChartDirective,[t.ElementRef],{datasets:[0,"datasets"],options:[1,"options"],chartType:[2,"chartType"],colors:[3,"colors"],legend:[4,"legend"]},null),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](10,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    Live Charts can be added using the "])),(n()(),t["\u0275eld"](12,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ng2-charts"])),(n()(),t["\u0275ted"](-1,null,[" library. \n    The "])),(n()(),t["\u0275eld"](15,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["chart.js"])),(n()(),t["\u0275ted"](-1,null,[" library needs to be imported and the "])),(n()(),t["\u0275eld"](18,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ChartsModule"])),(n()(),t["\u0275ted"](-1,null,[" needs to be added to the appropriate NgModule.\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](22,0,null,null,0,"br",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](24,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The "])),(n()(),t["\u0275eld"](26,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["baseChart"])),(n()(),t["\u0275ted"](-1,null,[" directive should be added to a "])),(n()(),t["\u0275eld"](29,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["canvas"])),(n()(),t["\u0275ted"](-1,null,[" element and the following attributes can be used to customize the chart behavior and appearance:"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](33,0,null,null,41,"uxd-api-properties",[["tableTitle","Inputs"]],null,null,null,f.b,f.a)),t["\u0275did"](34,49152,null,0,y.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](36,0,null,0,38,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](37,0,null,null,2,"tr",[["name","dataSets"],["type","object[]"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](38,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Contains the data and properties for each data set to be displayed in the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](41,0,null,null,20,"tr",[["name","chartType"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](42,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Indicates the type of the chart. Possible options are: "])),(n()(),t["\u0275eld"](44,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["line"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](47,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["bar"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](50,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["radar"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](53,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["pie"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](56,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["polarArea"])),(n()(),t["\u0275ted"](-1,0,[", "])),(n()(),t["\u0275eld"](59,0,null,0,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["doughnut"])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](63,0,null,null,2,"tr",[["name","options"],["type","ChartOptions"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](64,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Configures the appearance and behavior of all aspects of the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](67,0,null,null,2,"tr",[["name","colors"],["type","object[]"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](68,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Configure the color values to be used within the chart.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](71,0,null,null,2,"tr",[["name","legend"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](72,49152,null,0,w.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Determines whether or not the legend should be displayed.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](76,0,null,null,11,"uxd-api-properties",[["tableTitle","Outputs"]],null,null,null,f.b,f.a)),t["\u0275did"](77,49152,null,0,y.a,[],{tableTitle:[0,"tableTitle"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](79,0,null,0,8,"tbody",[],null,null,null,null,null)),(n()(),t["\u0275eld"](80,0,null,null,2,"tr",[["name","chartClick"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](81,49152,null,0,w.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Fires when click on a chart has occurred, returns information regarding active points and labels.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](84,0,null,null,2,"tr",[["name","chartHover"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](85,49152,null,0,w.a,[],{name:[0,"name"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Fires when mousemove (hover) on a chart has occurred, returns information regarding active points and labels.\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](89,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Complete documentation on the directive and chart options can be found at the documentation links below."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](92,0,null,null,1,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following code can be used to create the example above: "])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](95,0,null,null,25,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,m.mc,m.Y)),t["\u0275prd"](512,null,b.We,b.We,[]),t["\u0275did"](97,5423104,null,1,b.Ue,[b.We],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,2,{tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](100,0,null,0,5,"ux-tab",[["heading","HTML"]],null,null,null,m.lc,m.X)),t["\u0275did"](101,180224,[[2,4]],0,b.Ne,[b.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](103,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,D.b,D.a)),t["\u0275did"](104,114688,null,0,S.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](107,0,null,0,5,"ux-tab",[["heading","TypeScript"]],null,null,null,m.lc,m.X)),t["\u0275did"](108,180224,[[2,4]],0,b.Ne,[b.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](110,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,D.b,D.a)),t["\u0275did"](111,114688,null,0,S.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](114,0,null,0,5,"ux-tab",[["heading","CSS"]],null,null,null,m.lc,m.X)),t["\u0275did"](115,180224,[[2,4]],0,b.Ne,[b.We],{heading:[0,"heading"]},null),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](117,0,null,0,1,"uxd-snippet",[["language","css"]],null,null,null,D.b,D.a)),t["\u0275did"](118,114688,null,0,S.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](122,0,null,null,0,"br",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](124,0,null,null,48,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](126,0,null,null,12,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](128,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Dependencies: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](131,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/ng2-charts"]],null,null,null,null,null)),t["\u0275did"](132,212992,null,0,b.ib,[t.ElementRef,b.hc,b.c,t.NgZone,[2,b.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["ng2-charts"])),(n()(),t["\u0275ted"](-1,null,[", \n        "])),(n()(),t["\u0275eld"](135,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/chart.js"]],null,null,null,null,null)),t["\u0275did"](136,212992,null,0,b.ib,[t.ElementRef,b.hc,b.c,t.NgZone,[2,b.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["chart.js"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](140,0,null,null,8,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](142,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Type Definitions: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](145,0,null,null,2,"a",[["class","hyperlink"],["href","https://www.npmjs.com/package/@types/chart.js"]],null,null,null,null,null)),t["\u0275did"](146,212992,null,0,b.ib,[t.ElementRef,b.hc,b.c,t.NgZone,[2,b.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["@types/chart.js"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n    "])),(n()(),t["\u0275eld"](150,0,null,null,7,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](152,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Modules: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](155,0,null,null,1,"span",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["ChartsModule"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n\n\n    "])),(n()(),t["\u0275eld"](159,0,null,null,12,"p",[["class","m-b-nil"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](161,0,null,null,1,"b",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Documentation: "])),(n()(),t["\u0275ted"](-1,null,["\n        "])),(n()(),t["\u0275eld"](164,0,null,null,2,"a",[["class","hyperlink"],["href","http://valor-software.com/ng2-charts/"]],null,null,null,null,null)),t["\u0275did"](165,212992,null,0,b.ib,[t.ElementRef,b.hc,b.c,t.NgZone,[2,b.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["Angular Directive Documentation"])),(n()(),t["\u0275ted"](-1,null,[", \n        "])),(n()(),t["\u0275eld"](168,0,null,null,2,"a",[["class","hyperlink"],["href","http://www.chartjs.org/docs/"]],null,null,null,null,null)),t["\u0275did"](169,212992,null,0,b.ib,[t.ElementRef,b.hc,b.c,t.NgZone,[2,b.Gc]],null,null),(n()(),t["\u0275ted"](-1,null,["Chart Library Documentation"])),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275ted"](-1,null,["\n"]))],function(n,a){var s=a.component;n(a,4,0,s.lineChartData,s.lineChartOptions,"line",s.lineChartColors,s.lineChartLegend),n(a,34,0,"Inputs"),n(a,38,0,"dataSets","object[]"),n(a,42,0,"chartType","string"),n(a,64,0,"options","ChartOptions"),n(a,68,0,"colors","object[]"),n(a,72,0,"legend","boolean"),n(a,77,0,"Outputs"),n(a,81,0,"chartClick"),n(a,85,0,"chartHover"),n(a,97,0,!1),n(a,101,0,"HTML"),n(a,104,0,"html",s.snippets.compiled.liveChartHtml),n(a,108,0,"TypeScript"),n(a,111,0,"javascript",s.snippets.compiled.liveChartTs),n(a,115,0,"CSS"),n(a,118,0,"css",s.snippets.compiled.liveChartCss),n(a,132,0),n(a,136,0),n(a,146,0),n(a,165,0),n(a,169,0)},function(n,a){n(a,95,0,"left"===t["\u0275nov"](a,97).stacked,"right"===t["\u0275nov"](a,97).stacked)})}function H(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-charts-live-chart",[],null,null,null,j,N)),t["\u0275did"](1,49152,null,0,r,[b.H],null,null)],null,null)}var z=t["\u0275ccf"]("uxd-charts-live-chart",r,H,{},{},[]),$=s("dWZg"),B=s("lLAP"),W=s("x4zH"),U=s("gIcY"),E=s("Fzqc"),Z=s("qAlS"),I=s("eDkP"),q=s("M2Lx"),_=s("qina"),X=s("zCE2"),G=s("4c35"),P=s("FLOw"),V=s("XtaT");s.d(a,"ChartsLiveChartsModuleNgFactory",function(){return Y});var Y=t["\u0275cmf"](d,[],function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[h.a,m.ob,m.a,g.a,v.a,C.a,F,z]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,L.NgLocalization,L.NgLocaleLocalization,[t.LOCALE_ID,[2,L["\u0275angular_packages_common_common_a"]]]),t["\u0275mpd"](4608,$.a,$.a,[]),t["\u0275mpd"](4608,B.i,B.i,[$.a]),t["\u0275mpd"](4608,B.h,B.h,[B.i,t.NgZone,L.DOCUMENT]),t["\u0275mpd"](136192,B.c,B.b,[[3,B.c],L.DOCUMENT]),t["\u0275mpd"](5120,B.l,B.k,[[3,B.l],[2,B.j],L.DOCUMENT]),t["\u0275mpd"](5120,B.g,B.e,[[3,B.g],t.NgZone,$.a]),t["\u0275mpd"](5120,b.H,b.r,[[3,b.H],[2,b.s]]),t["\u0275mpd"](4608,b.c,b.c,[[2,b.a]]),t["\u0275mpd"](4608,b.S,b.S,[]),t["\u0275mpd"](5120,b.gc,b.sb,[[3,b.gc]]),t["\u0275mpd"](4608,b.hc,b.hc,[B.g,b.c,b.gc,[2,b.a],t.RendererFactory2]),t["\u0275mpd"](4608,b.Hc,b.Hc,[t.RendererFactory2]),t["\u0275mpd"](5120,"flotDataService",W.b,["$injector"]),t["\u0275mpd"](5120,"lineDataService",W.c,["$injector"]),t["\u0275mpd"](5120,"$navigationMenu",b.Jf,["$injector"]),t["\u0275mpd"](5120,"$pdf",b.Kf,["$injector"]),t["\u0275mpd"](5120,"timeAgoService",b.Lf,["$injector"]),t["\u0275mpd"](4608,b.Ze,b.Ze,["timeAgoService"]),t["\u0275mpd"](4608,b.vd,b.vd,["$pdf"]),t["\u0275mpd"](4608,b.Xc,b.Xc,["$navigationMenu"]),t["\u0275mpd"](4608,U.B,U.B,[]),t["\u0275mpd"](6144,E.b,null,[L.DOCUMENT]),t["\u0275mpd"](4608,E.c,E.c,[[2,E.b]]),t["\u0275mpd"](5120,Z.c,Z.a,[[3,Z.c],t.NgZone,$.a]),t["\u0275mpd"](5120,Z.f,Z.e,[[3,Z.f],$.a,t.NgZone]),t["\u0275mpd"](4608,I.f,I.f,[Z.c,Z.f,t.NgZone,L.DOCUMENT]),t["\u0275mpd"](5120,I.b,I.g,[[3,I.b],L.DOCUMENT]),t["\u0275mpd"](4608,I.e,I.e,[Z.f,L.DOCUMENT]),t["\u0275mpd"](5120,I.c,I.j,[[3,I.c],L.DOCUMENT]),t["\u0275mpd"](4608,I.a,I.a,[I.f,I.b,t.ComponentFactoryResolver,I.e,I.c,t.ApplicationRef,t.Injector,t.NgZone,L.DOCUMENT]),t["\u0275mpd"](5120,I.h,I.i,[I.a]),t["\u0275mpd"](4608,q.b,q.b,[]),t["\u0275mpd"](4608,b.pf,b.pf,[]),t["\u0275mpd"](4608,b.Ad,b.Ad,[]),t["\u0275mpd"](1073742336,L.CommonModule,L.CommonModule,[]),t["\u0275mpd"](1073742336,$.b,$.b,[]),t["\u0275mpd"](1073742336,B.a,B.a,[]),t["\u0275mpd"](1073742336,b.I,b.I,[]),t["\u0275mpd"](1073742336,b.b,b.b,[]),t["\u0275mpd"](1073742336,b.Ve,b.Ve,[]),t["\u0275mpd"](1073742336,W.a,W.a,[]),t["\u0275mpd"](1073742336,b.uc,b.uc,[]),t["\u0275mpd"](1073742336,A.ChartsModule,A.ChartsModule,[]),t["\u0275mpd"](1073742336,_.a,_.a,[]),t["\u0275mpd"](1073742336,X.a,X.a,[]),t["\u0275mpd"](1073742336,b.rb,b.rb,[]),t["\u0275mpd"](1073742336,U.y,U.y,[]),t["\u0275mpd"](1073742336,U.l,U.l,[]),t["\u0275mpd"](1073742336,E.a,E.a,[]),t["\u0275mpd"](1073742336,G.c,G.c,[]),t["\u0275mpd"](1073742336,Z.b,Z.b,[]),t["\u0275mpd"](1073742336,I.d,I.d,[]),t["\u0275mpd"](1073742336,q.c,q.c,[]),t["\u0275mpd"](1073742336,b.B,b.B,[]),t["\u0275mpd"](1073742336,b.of,b.of,[]),t["\u0275mpd"](1073742336,b.Dd,b.Dd,[]),t["\u0275mpd"](1073742336,R.p,R.p,[[2,R.v],[2,R.m]]),t["\u0275mpd"](1073742336,b.Zd,b.Zd,[]),t["\u0275mpd"](1073742336,P.a,P.a,[]),t["\u0275mpd"](1073742336,b.zd,b.zd,[]),t["\u0275mpd"](1073742336,V.a,V.a,[]),t["\u0275mpd"](1073742336,d,d,[t.ComponentFactoryResolver,p.b]),t["\u0275mpd"](1024,R.k,function(){return[[{path:"**",component:l.a,data:k}]]},[])])})},"a+5N":function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'LiveChartCtrl\'</span><span class="token punctuation">,</span> LiveChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nLiveChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$interval\'</span><span class="token punctuation">,</span> <span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">LiveChartCtrl</span><span class="token punctuation">(</span>$interval<span class="token punctuation">,</span> $colorService<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> lc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\n        primary<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        gridColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        tickColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        borderColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        white<span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> livedata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> maximum <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            livedata <span class="token operator">=</span> livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> maximum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> previous <span class="token operator">=</span> livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> livedata<span class="token punctuation">[</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">var</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n            livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n\n        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    lc<span class="token punctuation">.</span>liveChart <span class="token operator">=</span> <span class="token punctuation">{</span>\n        series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            data<span class="token punctuation">:</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            lines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fill<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                lineWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                fillColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            shadowSize<span class="token punctuation">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                tickColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>tickColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token string">"right"</span><span class="token punctuation">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                minBorderMargin<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n                labelMargin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                margin<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    top<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n                    bottom<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n                    left<span class="token punctuation">:</span> <span class="token number">20</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                markings<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>axes<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">var</span> markings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                    <span class="token keyword">var</span> xaxis <span class="token operator">=</span> axes<span class="token punctuation">.</span>xaxis<span class="token punctuation">;</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>xaxis<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> xaxis<span class="token punctuation">.</span>max<span class="token punctuation">;</span> x <span class="token operator">+=</span> xaxis<span class="token punctuation">.</span>tickSize <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        markings<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                                <span class="token keyword">from</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>\n                                to<span class="token punctuation">:</span> x <span class="token operator">+</span> xaxis<span class="token punctuation">.</span>tickSize\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">return</span> markings<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                tickFormatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                max<span class="token punctuation">:</span> <span class="token number">110</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">$interval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        lc<span class="token punctuation">.</span>liveChart<span class="token punctuation">.</span>series<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('LiveChartCtrl', LiveChartCtrl);\n\nLiveChartCtrl.$inject = ['$interval', '$colorService'];\n\nfunction LiveChartCtrl($interval, $colorService) {\n\n    var lc = this;\n\n    var flotChartColors = {\n        primary: $colorService.getColor('chart1').toRgb(),\n        gridColor: $colorService.getColor('grey4').toHex(),\n        tickColor: $colorService.getColor('grey6').toHex(),\n        borderColor: $colorService.getColor('grey2').setAlpha(0.5).toRgba(),\n        white: \"#FFFFFF\"\n    };\n\n    var livedata = [];\n    var maximum = 300;\n\n    function getRandomData() {\n\n        if (livedata.length) {\n            livedata = livedata.slice(1);\n        }\n\n        while (livedata.length < maximum) {\n            var previous = livedata.length ? livedata[livedata.length - 1] : 50;\n            var y = previous + Math.random() * 10 - 5;\n            livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n\n        var res = [];\n        for (var i = 0; i < livedata.length; ++i) {\n            res.push([i, livedata[i]]);\n        }\n\n        return res;\n    }\n\n    lc.liveChart = {\n        series: [{\n            data: getRandomData(),\n            lines: {\n                fill: true,\n                lineWidth: 1,\n                fillColor: {\n                    colors: [{\n                        opacity: 0.1\n                    }, {\n                        opacity: 0.1\n                    }]\n                }\n            },\n            shadowSize: 0\n        }],\n        options: {\n            grid: {\n                color: [flotChartColors.gridColor],\n                tickColor: [flotChartColors.tickColor],\n                borderWidth: {\n                    \"top\": 0,\n                    \"bottom\": 1,\n                    \"left\": 1,\n                    \"right\": 0\n                },\n                borderColor: {\n                    \"bottom\": [flotChartColors.borderColor],\n                    \"left\": [flotChartColors.borderColor]\n                },\n                minBorderMargin: 20,\n                labelMargin: 10,\n                backgroundColor: {\n                    colors: [\n                        [flotChartColors.white],\n                        [flotChartColors.white]\n                    ]\n                },\n                margin: {\n                    top: 8,\n                    bottom: 20,\n                    left: 20\n                },\n                markings: function (axes) {\n                    var markings = [];\n                    var xaxis = axes.xaxis;\n                    for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\n                        markings.push({\n                            xaxis: {\n                                from: x,\n                                to: x + xaxis.tickSize\n                            },\n                            color: [flotChartColors.white]\n                        });\n                    }\n                    return markings;\n                }\n            },\n            colors: [flotChartColors.primary],\n            xaxis: {\n                tickFormatter: function () {\n                    return \"\";\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 110\n            },\n            legend: {\n                show: true\n            }\n        }\n\n    };\n\n    $interval(function () {\n        lc.liveChart.series[0].data = getRandomData();\n    }, 40);\n\n\n}"}},aaOX:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.series<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\n    <flot dataset="lc.liveChart.series" options="lc.liveChart.options" on-plot-click="lc.liveChart.onPlotClick(event,pos,item)"\n        on-hover-click="lc.liveChart.onPlotHover(event,pos,item)">\n    </flot>\n</div>'}},"fRG/":function(n,a){n.exports={snippet:'<span class="token selector">.demo-chart-container</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',example:".demo-chart-container {\n    display: block;\n    position: relative;\n    height: 200px;\n}"}},"lR+T":function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo-chart-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">baseChart</span> \n            <span class="token attr-name">[datasets]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartData<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[options]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartOptions<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[legend]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartLegend<span class="token punctuation">"</span></span>\n            <span class="token attr-name">[colors]</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lineChartColors<span class="token punctuation">"</span></span>\n            <span class="token attr-name">chartType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="demo-chart-container">\n\n    <canvas baseChart \n            [datasets]="lineChartData"\n            [options]="lineChartOptions"\n            [legend]="lineChartLegend"\n            [colors]="lineChartColors"\n            chartType="line">\n    </canvas>\n\n</div>'}},s89H:function(n,a,s){var t={"./live-chart.css":"fRG/","./live-chart.html":"lR+T","./live-chart.ts":"9LNQ"};function l(n){var a=p(n);return s(a)}function p(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}l.keys=function(){return Object.keys(t)},l.resolve=p,n.exports=l,l.id="s89H"}}]);