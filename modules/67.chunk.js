(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{EVit:function(l,n,e){"use strict";e.r(n);var t=e("CcnG"),u=e("YZ8U"),a=e("mrSG"),o=e("yHOM"),d=function(){return Object(a.__decorate)([Object(o.a)("ChartsFlotOptionsNg1Component")],(function(){}))}(),r=e("T/2f"),i={category:u.b.resolveCategoryData(u.a.Charts,"Flot Options")},p=function(){return function(l,n){n.registerResolver(l)}}(),s=e("WmtN"),m=e("HRZI"),y=e("pMnS"),h=e("GBPT"),c=e("rYg0"),b=e("9hoY"),f=e("+gXg"),x=e("rpQh"),g=e("2RDK"),w=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function v(l){return t["\u0275vid"](2,[(l()(),t["\u0275eld"](0,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["Listed below are the options which can be specified in the controller for a chart:"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](3,0,null,null,46,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](4,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](6,0,null,0,2,"tr",[["name","series"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](7,49152,null,0,g.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the chart type and its layout. Values include 'lines', 'bars', 'points', 'pie' etc. E.g. If data represents a bar chart, then the value is set to 'bars' etc.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](10,0,null,0,2,"tr",[["name","xaxis"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](11,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Configures the X-axis with options like show, color, etc.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](14,0,null,0,2,"tr",[["name","yaxis"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](15,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Configures the Y-axis with options.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](18,0,null,0,2,"tr",[["name","margin"],["type","object"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](19,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Defined with "top", "left", "bottom" and "right", space in pixels between the canvas edge and the grid.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](22,0,null,0,2,"tr",[["name","markings"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](23,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Markings, used to draw simple lines and rectangular areas in the background of the plot. It can be an array\n        of ranges in the form of { xaxis: { from, to }, yaxis: { from, to } } or a function(above example) that\n        returns this range (note: markings are only used for Live Charts).\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](26,0,null,0,2,"tr",[["name","colors"],["type","array(colors)"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](27,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies colors used to represent a chart.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](30,0,null,0,2,"tr",[["name","grid"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](31,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Helps configure the grid options.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](34,0,null,0,2,"tr",[["name","legend"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](35,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the data series labels and label boxes with the color of the series.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](38,0,null,0,2,"tr",[["name","tooltip"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](39,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines how a tooltip should be shown.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](42,0,null,0,2,"tr",[["name","onPlotClick"],["type","function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](43,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Called when plot area is clicked. Parameters are event, the position and a nearby data item object. This option works when the "clickable" attribute is set to true.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](46,0,null,0,2,"tr",[["name","onPlotHover"],["type","function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](47,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Called when plot area is hovered. Parameters are event, the position and a nearby data item object. This option works when the "hoverable" attribute is set to true. If "autoHighlight" is true (the default), nearby data items are highlighted automatically.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](51,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](53,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](55,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["series"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](58,0,null,null,58,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](59,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](61,0,null,0,2,"tr",[["name","show"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](62,49152,null,0,g.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true the chart is displayed.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](65,0,null,0,2,"tr",[["name","fillColor"],["type","array(colors)"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](66,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies the colors of the fill. If more than one color is specified this will produce a gradient.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](69,0,null,0,2,"tr",[["name","fill"],["type","boolean or number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](70,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true fills the chart with colors in the fillColors property. A number between 0 and 1 defines the opacity of the fill.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](73,0,null,0,2,"tr",[["name","lineWidth"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](74,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the thickness of the line or outline in pixels.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](77,0,null,0,2,"tr",[["name","align"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](78,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Centers the axis labels if set to `center`.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](81,0,null,0,2,"tr",[["name","highlightColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](82,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Default color of the translucent overlay used to highlight on mouse hover.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](85,0,null,0,2,"tr",[["name","forecastFillColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](86,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the fill color for the portion representing forecast data.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](89,0,null,0,2,"tr",[["name","forecastColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](90,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the stroke color for the portion representing forecast data.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](93,0,null,0,2,"tr",[["name","forecastHighLightColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](94,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Default color of the translucent overlay used to highlight on mouse hover for the portion representing forecast data.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](97,0,null,0,2,"tr",[["defaultValue","[5]"],["name","forecastDashStyle"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](98,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines a list of numbers that specifies distances to alternately draw a line and a gap (in coordinate space units). Similar to this property in HTML5 Canvas.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](101,0,null,0,2,"tr",[["name","shadowSize"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](102,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Default size of shadows in pixels. Set it to 0 to remove shadows.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](105,0,null,0,2,"tr",[["name","horizontal"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](106,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If true the bars will be presented horizontally (note: this can only be set for Bar Charts).\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](109,0,null,0,2,"tr",[["name","stack"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](110,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true shows the chart in stacked form (note: this can only be used to create Stacked Bar/Line Charts).\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](113,0,null,0,2,"tr",[["name","valueLabels"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](114,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Allows labels to be displayed beside bars or data points.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](118,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](120,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](122,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["valueLabels"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](125,0,null,null,34,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](126,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](128,0,null,0,2,"tr",[["name","show"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](129,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        When set to true labels will be displayed.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](132,0,null,0,2,"tr",[["name","valign"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](133,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the vertical alignment of the text. The available options are: 'top', 'above', 'below', 'middle' or 'bottom'.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](136,0,null,0,2,"tr",[["name","plotAxis"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](137,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the axis you wish to display the values of. The available options are: 'x' or 'y'.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](140,0,null,0,2,"tr",[["name","xoffset"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](141,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the number of pixels the label should move to the left or right of its original position.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](144,0,null,0,2,"tr",[["name","yoffset"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](145,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the number of pixels the label should move up or down from its original position.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](148,0,null,0,2,"tr",[["name","font"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](149,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the font size and font family the labels should use.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](152,0,null,0,2,"tr",[["name","fontColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](153,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Sets the text color of the labels.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](156,0,null,0,2,"tr",[["name","labelFormatter"],["type","function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](157,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Should accept one argument that will contain the axis position of the associated data. The function can be used to change the text in the label and should do this by returning the desired text.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](161,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](163,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](165,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["xaxis"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](168,0,null,null,38,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](169,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](171,0,null,0,2,"tr",[["name","show"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](172,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true displays the axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](175,0,null,0,2,"tr",[["defaultValue","auto-detected"],["name","tickDecimals"],["type","null or number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](176,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"],defaultValue:[2,"defaultValue"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Describes ticks of the axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](179,0,null,0,2,"tr",[["name","min"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](180,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set the start value of the x-axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](183,0,null,0,2,"tr",[["name","max"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](184,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set the end value of the x-axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](187,0,null,0,2,"tr",[["name","color"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](188,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the color of the axis lines.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](191,0,null,0,2,"tr",[["name","ticks"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](192,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Sets the x-axis labels to a specified value.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](195,0,null,0,2,"tr",[["name","tickFormatter"],["type","function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](196,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines how ticks are formatted.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](199,0,null,0,2,"tr",[["name","mode"],["type","null or time"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](200,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines how data is represented on the x-axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](203,0,null,0,2,"tr",[["name","position"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](204,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Set as "top" or "bottom", specifies the position of the axis.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](208,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](210,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](212,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["yaxis"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](215,0,null,null,26,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](216,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](218,0,null,0,2,"tr",[["name","show"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](219,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true displays the axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](222,0,null,0,2,"tr",[["name","min"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](223,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set the start value of the y-axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](226,0,null,0,2,"tr",[["name","max"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](227,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set the end value of the y-axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](230,0,null,0,2,"tr",[["name","tickFormatter"],["type","function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](231,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines how ticks are formatted.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](234,0,null,0,2,"tr",[["name","alignTicksWithAxis"],["type","null or number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](235,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Aligns the ticks of this axis with the ticks of the other axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](238,0,null,0,2,"tr",[["name","position"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](239,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Set as "right" or "left", specifies the position of the axis.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](243,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](245,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](247,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["grid"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](250,0,null,null,38,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](251,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](253,0,null,0,2,"tr",[["name","color"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](254,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies the color of the grid lines.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](257,0,null,0,2,"tr",[["name","hoverable"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](258,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true enables interactivity in the grid.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](261,0,null,0,2,"tr",[["name","clickable"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](262,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true enables interactivity in the grid.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](265,0,null,0,2,"tr",[["name","borderWidth"],["type","number or object"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](266,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the width of the grid border.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](269,0,null,0,2,"tr",[["name","tickColor"],["type","null or color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](270,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies the colors of the ticks in an axis.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](273,0,null,0,2,"tr",[["name","borderColor"],["type","color"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](274,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Defines the border grid lines.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](277,0,null,0,2,"tr",[["name","preventOverlap"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](278,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true this will prevent any x-axis labels from overlapping.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](281,0,null,0,2,"tr",[["name","minBorderMargin"],["type","number or null"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](282,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies the default minimum margin around the border. Used to make sure that points aren't accidentally clipped by the canvas edge.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](285,0,null,0,2,"tr",[["name","backgroundColor"],["type","color or object"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](286,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Specifies the background color or background gradient colors of the chart.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](290,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](292,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](294,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["legend"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](297,0,null,null,18,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](298,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](300,0,null,0,2,"tr",[["name","show"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](301,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        If set to true shows the legend.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](304,0,null,0,2,"tr",[["name","container"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](305,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        The id or class name of the container to hold the legend.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](308,0,null,0,2,"tr",[["name","noColumns"],["type","number"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](309,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        The number of columns for the legend.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](312,0,null,0,2,"tr",[["name","position"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](313,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        "ne" or "nw" or "se" or "sw", defines the position of the legend.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](317,0,null,null,0,"hr",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](319,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(l()(),t["\u0275eld"](321,0,null,null,1,"code",[],null,null,null,null,null)),(l()(),t["\u0275ted"](-1,null,["tooltip"])),(l()(),t["\u0275ted"](-1,null,["\n\n"])),(l()(),t["\u0275eld"](324,0,null,null,30,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](325,49152,null,0,f.a,[],null,null),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](327,0,null,0,2,"tr",[["name","show"],["type","booleans"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](328,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set to true to show the tooltip.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](331,0,null,0,2,"tr",[["name","cssClass"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](332,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set to the name of a custom css class to style the tooltip.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](335,0,null,0,2,"tr",[["name","defaultTheme"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](336,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set to false if you are using a custom css class.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](339,0,null,0,2,"tr",[["name","snap"],["type","boolean"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](340,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Set to true to have tooltip in fixed position. When set to false, the tooltip moves along with the mouse pointer.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](343,0,null,0,2,"tr",[["name","shifts"],["type","array"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](344,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Values to shift tooltip position relative to the mouse pointer for x and y, negative values are allowed.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](347,0,null,0,2,"tr",[["name","content"],["type","string or function"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](348,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,['\n        Specifies the tooltip text e.g. "x : %x, y : %y" - displays x : x-value, y : y-value. Function can be used if you require more control over how the content is generated. Note that if you wish to access the axis labels rather than the number value (co-ordinates) assigned to them when using a function, you must use the "%" identifier followed by the axis (x or y) rather than the "xval" or "yval" parameters that are passed to the function.\n    '])),(l()(),t["\u0275ted"](-1,0,["\n    "])),(l()(),t["\u0275eld"](351,0,null,0,2,"tr",[["name","xDateFormat"],["type","string"],["uxd-api-property",""]],null,null,null,x.b,x.a)),t["\u0275did"](352,49152,null,0,g.a,[],{name:[0,"name"],type:[1,"type"]},null),(l()(),t["\u0275ted"](-1,0,["\n        Provides the format of the x-axis Date.\n    "])),(l()(),t["\u0275ted"](-1,0,["\n"])),(l()(),t["\u0275ted"](-1,null,["\n"]))],(function(l,n){l(n,7,0,"series","true","string"),l(n,11,0,"xaxis","array"),l(n,15,0,"yaxis","array"),l(n,19,0,"margin","object"),l(n,23,0,"markings","array"),l(n,27,0,"colors","array(colors)"),l(n,31,0,"grid","array"),l(n,35,0,"legend","array"),l(n,39,0,"tooltip","array"),l(n,43,0,"onPlotClick","function"),l(n,47,0,"onPlotHover","function"),l(n,62,0,"show","true","boolean"),l(n,66,0,"fillColor","array(colors)"),l(n,70,0,"fill","boolean or number"),l(n,74,0,"lineWidth","number"),l(n,78,0,"align","string"),l(n,82,0,"highlightColor","color"),l(n,86,0,"forecastFillColor","color"),l(n,90,0,"forecastColor","color"),l(n,94,0,"forecastHighLightColor","color"),l(n,98,0,"forecastDashStyle","array","[5]"),l(n,102,0,"shadowSize","number"),l(n,106,0,"horizontal","boolean"),l(n,110,0,"stack","boolean"),l(n,114,0,"valueLabels","array"),l(n,129,0,"show","boolean"),l(n,133,0,"valign","string"),l(n,137,0,"plotAxis","string"),l(n,141,0,"xoffset","number"),l(n,145,0,"yoffset","number"),l(n,149,0,"font","string"),l(n,153,0,"fontColor","color"),l(n,157,0,"labelFormatter","function"),l(n,172,0,"show","boolean"),l(n,176,0,"tickDecimals","null or number","auto-detected"),l(n,180,0,"min","number"),l(n,184,0,"max","number"),l(n,188,0,"color","color"),l(n,192,0,"ticks","array"),l(n,196,0,"tickFormatter","function"),l(n,200,0,"mode","null or time"),l(n,204,0,"position","string"),l(n,219,0,"show","boolean"),l(n,223,0,"min","number"),l(n,227,0,"max","number"),l(n,231,0,"tickFormatter","function"),l(n,235,0,"alignTicksWithAxis","null or number"),l(n,239,0,"position","string"),l(n,254,0,"color","color"),l(n,258,0,"hoverable","boolean"),l(n,262,0,"clickable","boolean"),l(n,266,0,"borderWidth","number or object"),l(n,270,0,"tickColor","null or color"),l(n,274,0,"borderColor","color"),l(n,278,0,"preventOverlap","boolean"),l(n,282,0,"minBorderMargin","number or null"),l(n,286,0,"backgroundColor","color or object"),l(n,301,0,"show","boolean"),l(n,305,0,"container","string"),l(n,309,0,"noColumns","number"),l(n,313,0,"position","string"),l(n,328,0,"show","booleans"),l(n,332,0,"cssClass","string"),l(n,336,0,"defaultTheme","boolean"),l(n,340,0,"snap","boolean"),l(n,344,0,"shifts","array"),l(n,348,0,"content","string or function"),l(n,352,0,"xDateFormat","string")}),null)}function C(l){return t["\u0275vid"](0,[(l()(),t["\u0275eld"](0,0,null,null,1,"uxd-charts-flot-options-ng1",[],null,null,null,v,w)),t["\u0275did"](1,49152,null,0,d,[],null,null)],null,null)}var k=t["\u0275ccf"]("uxd-charts-flot-options-ng1",d,C,{},{},[]),D=e("Ip0R"),S=e("M2Lx"),F=e("f5YR"),T=e("lLAP"),I=e("gIcY"),L=e("eDkP"),j=e("Fzqc"),q=e("dWZg"),R=e("qina"),H=e("zCE2"),W=e("4c35"),A=e("qAlS"),O=e("ZYCi"),P=e("FLOw"),z=e("XtaT");e.d(n,"ChartsFlotOptionsModuleNgFactory",(function(){return M}));var M=t["\u0275cmf"](p,[],(function(l){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[s.a,m.q,m.a,y.a,h.a,c.a,k]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,D.p,D.o,[t.LOCALE_ID,[2,D.C]]),t["\u0275mpd"](4608,S.c,S.c,[]),t["\u0275mpd"](4608,F.c,F.c,[[2,F.a]]),t["\u0275mpd"](4608,F.G,F.G,[]),t["\u0275mpd"](4608,F.Lb,F.Lb,[T.d,F.c,F.Kb,[2,F.a],t.RendererFactory2]),t["\u0275mpd"](4608,F.jc,F.jc,[t.RendererFactory2]),t["\u0275mpd"](4608,F.Zb,F.Zb,[[3,F.Zb],[2,F.Wb]]),t["\u0275mpd"](4608,I.q,I.q,[]),t["\u0275mpd"](4608,F.ed,F.ed,[]),t["\u0275mpd"](4608,L.a,L.a,[L.f,L.b,t.ComponentFactoryResolver,L.e,L.c,t.Injector,t.NgZone,D.d,j.b]),t["\u0275mpd"](5120,L.g,L.h,[L.a]),t["\u0275mpd"](4608,F.He,F.He,[]),t["\u0275mpd"](1073742336,D.c,D.c,[]),t["\u0275mpd"](1073742336,q.b,q.b,[]),t["\u0275mpd"](1073742336,S.d,S.d,[]),t["\u0275mpd"](1073742336,T.a,T.a,[]),t["\u0275mpd"](1073742336,F.B,F.B,[]),t["\u0275mpd"](1073742336,F.b,F.b,[]),t["\u0275mpd"](1073742336,F.Yb,F.Yb,[]),t["\u0275mpd"](1073742336,F.i,F.i,[]),t["\u0275mpd"](1073742336,R.a,R.a,[]),t["\u0275mpd"](1073742336,H.a,H.a,[]),t["\u0275mpd"](1073742336,F.db,F.db,[]),t["\u0275mpd"](1073742336,I.p,I.p,[]),t["\u0275mpd"](1073742336,I.e,I.e,[]),t["\u0275mpd"](1073742336,F.dd,F.dd,[]),t["\u0275mpd"](1073742336,j.a,j.a,[]),t["\u0275mpd"](1073742336,W.c,W.c,[]),t["\u0275mpd"](1073742336,A.a,A.a,[]),t["\u0275mpd"](1073742336,L.d,L.d,[]),t["\u0275mpd"](1073742336,F.w,F.w,[]),t["\u0275mpd"](1073742336,F.Ge,F.Ge,[]),t["\u0275mpd"](1073742336,F.hd,F.hd,[]),t["\u0275mpd"](1073742336,O.s,O.s,[[2,O.x],[2,O.o]]),t["\u0275mpd"](1073742336,F.Cd,F.Cd,[]),t["\u0275mpd"](1073742336,P.a,P.a,[]),t["\u0275mpd"](1073742336,z.a,z.a,[]),t["\u0275mpd"](1073742336,p,p,[t.ComponentFactoryResolver,u.b]),t["\u0275mpd"](1024,O.m,(function(){return[[{path:"**",component:r.a,data:i}]]}),[])])}))}}]);