(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{"1k8U":function(n,a,s){var t={"./chart.html":"aaOX","./chart.js":"a+5N"};function p(n){var a=o(n);return s(a)}function o(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}p.keys=function(){return Object.keys(t)},p.resolve=o,n.exports=p,p.id="1k8U"},ZgaH:function(n,a,s){"use strict";s.r(a);var t=s("CcnG"),p=s("T/2f"),o=s("YZ8U"),l=s("mrSG"),e=s("AVdU"),u=s("yHOM"),c=s("W9B5"),i=function(n){function a(a){var t=n.call(this,s("1k8U"))||this;t.livedata=[],t.playground=Object(c.a)({html:t.snippets.raw.chartHtml,htmlAttributes:{"ng-controller":"LiveChartCtrl as lc"},js:[t.snippets.raw.chartJs]});var p={primary:a.getColor("chart1").toRgb(),gridColor:a.getColor("grey4").toHex(),tickColor:a.getColor("grey6").toHex(),borderColor:a.getColor("grey2").setAlpha(.5).toRgba(),white:"#FFFFFF"};return t.series=[{data:t.getRandomData(),lines:{fill:!0,lineWidth:1,fillColor:{colors:[{opacity:.1},{opacity:.1}]}},shadowSize:0}],t.options={grid:{color:[p.gridColor],tickColor:[p.tickColor],borderWidth:{top:0,bottom:1,left:1,right:0},borderColor:{bottom:[p.borderColor],left:[p.borderColor]},minBorderMargin:20,labelMargin:10,backgroundColor:{colors:[[p.white],[p.white]]},margin:{top:8,bottom:20,left:20},markings:function(n){for(var a=[],s=n.xaxis,t=Math.floor(s.min);t<s.max;t+=2*s.tickSize)a.push({xaxis:{from:t,to:t+s.tickSize},color:[p.white]});return a}},colors:[p.primary],xaxis:{tickFormatter:function(){return""}},yaxis:{min:0,max:110},legend:{show:!0}},setInterval((function(){t.series[0].data=t.getRandomData()}),40),t}return Object(l.__extends)(a,n),a.prototype.getRandomData=function(){for(this.livedata.length&&(this.livedata=this.livedata.slice(1));this.livedata.length<300;){var n=(this.livedata.length?this.livedata[this.livedata.length-1]:50)+10*Math.random()-5;this.livedata.push(n<0?0:n>100?100:n)}for(var a=[],s=0;s<this.livedata.length;++s)a.push([s,this.livedata[s]]);return a},Object(l.__decorate)([Object(u.a)("ChartsLiveChartNg1Component")],a)}(e.a),r={category:o.b.resolveCategoryData(o.a.Charts,"Live Chart")},k=function(){return function(n,a){a.registerResolver(n)}}(),d=s("WmtN"),m=s("HRZI"),h=s("pMnS"),g=s("GBPT"),v=s("rYg0"),f=s("f5YR"),b=s("9hoY"),C=s("+gXg"),y=s("rpQh"),x=s("2RDK"),w=s("r1ng"),F=s("COk8"),R=s("ZYCi"),S=s("Ip0R"),L=t["\u0275crt"]({encapsulation:2,styles:[],data:{}});function $(n){return t["\u0275vid"](2,[(n()(),t["\u0275eld"](0,0,null,null,4,"div",[["class","flot-chart"]],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](2,0,null,null,1,"flot",[],null,null,null,null,null)),t["\u0275did"](3,999424,null,0,f.Fb,[t.ElementRef,t.Injector],{dataset:[0,"dataset"],options:[1,"options"]},null),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](6,0,null,null,0,"hr",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](8,0,null,null,10,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](9,49152,null,0,C.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](11,0,null,0,2,"tr",[["name","data"],["required","true"],["type","number or array"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](12,49152,null,0,x.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Coordinates in the Live chart.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](15,0,null,0,2,"tr",[["name","series"],["required","true"],["type","string"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](16,49152,null,0,x.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the chart type and its layout. Values include 'lines', 'bar' and 'points'.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](20,0,null,null,3,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["The following attributes should be defined within "])),(n()(),t["\u0275eld"](22,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["series"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](25,0,null,null,22,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](26,49152,null,0,C.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](28,0,null,0,2,"tr",[["name","lineWidth"],["type","number"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](29,49152,null,0,x.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Defines the thickness of the line chart.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](32,0,null,0,2,"tr",[["name","show"],["required","true"],["type","boolean"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](33,49152,null,0,x.a,[],{name:[0,"name"],required:[1,"required"],type:[2,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If set to true displays the chart.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](36,0,null,0,2,"tr",[["name","fillColor"],["type","array"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](37,49152,null,0,x.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Specifies the colors of the fill. For Line chart this produces area graphs. If more than one color is specified this will produce a gradient.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](40,0,null,0,2,"tr",[["name","fill"],["type","boolean or number"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](41,49152,null,0,x.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        If set to true fills the chart with colors in the fillColors property. A number between 0 and 1 defines the opacity of the fill.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](44,0,null,0,2,"tr",[["name","shadowSize"],["type","number"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](45,49152,null,0,x.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Default size of shadows in pixels. Set it to 0 to remove shadows.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](49,0,null,null,4,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Live Charts are defined by the "])),(n()(),t["\u0275eld"](51,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["flot"])),(n()(),t["\u0275ted"](-1,null,[" directive. The dataset and options attribute define the live chart data and options respectively.\nDataset and Options are defined within the LiveChartCtrl."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](55,0,null,null,20,"ux-tabset",[],[[2,"tabs-left",null],[2,"tabs-right",null]],null,null,m.B,m.l)),t["\u0275prd"](512,null,f.qe,f.qe,[]),t["\u0275did"](57,4374528,null,1,f.oe,[f.qe,t.ChangeDetectorRef],{minimal:[0,"minimal"]},null),t["\u0275qud"](603979776,1,{_tabs:1}),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](60,0,null,0,6,"ux-tab",[["heading","HTML"]],null,null,null,m.A,m.k)),t["\u0275did"](61,245760,[[1,4]],1,f.je,[f.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,2,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](64,0,null,0,1,"uxd-snippet",[["language","html"]],null,null,null,w.b,w.a)),t["\u0275did"](65,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n\n    "])),(n()(),t["\u0275eld"](68,0,null,0,6,"ux-tab",[["heading","Javascript"]],null,null,null,m.A,m.k)),t["\u0275did"](69,245760,[[1,4]],1,f.je,[f.qe,t.ChangeDetectorRef],{heading:[0,"heading"]},null),t["\u0275qud"](603979776,3,{headingRef:0}),(n()(),t["\u0275ted"](-1,0,["\n        "])),(n()(),t["\u0275eld"](72,0,null,0,1,"uxd-snippet",[["language","javascript"]],null,null,null,w.b,w.a)),t["\u0275did"](73,114688,null,0,F.a,[],{language:[0,"language"],content:[1,"content"]},null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](77,0,null,null,6,"uxd-api-properties",[],null,null,null,b.b,b.a)),t["\u0275did"](78,49152,null,0,C.a,[],null,null),(n()(),t["\u0275ted"](-1,0,["\n    "])),(n()(),t["\u0275eld"](80,0,null,0,2,"tr",[["name","markings"],["type","array"],["uxd-api-property",""]],null,null,null,y.b,y.a)),t["\u0275did"](81,49152,null,0,x.a,[],{name:[0,"name"],type:[1,"type"]},null),(n()(),t["\u0275ted"](-1,0,["\n        Markings used to draw simple lines and rectangular areas in the background of the plot. It can be an array of ranges in the form of { xaxis: { from, to }, yaxis: { from, to } } or a function(above example) that returns this range.\n    "])),(n()(),t["\u0275ted"](-1,0,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](85,0,null,null,10,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n  "])),(n()(),t["\u0275eld"](87,0,null,null,7,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](88,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": Refer to the "])),(n()(),t["\u0275eld"](91,0,null,null,2,"a",[["routerLink","/charts/flot-options"]],[[1,"target",0],[8,"href",4]],[[null,"click"]],(function(n,a,s){var p=!0;return"click"===a&&(p=!1!==t["\u0275nov"](n,92).onClick(s.button,s.ctrlKey,s.metaKey,s.shiftKey)&&p),p}),null,null)),t["\u0275did"](92,671744,null,0,R.r,[R.o,R.a,S.k],{routerLink:[0,"routerLink"]},null),(n()(),t["\u0275ted"](-1,null,["Flot Options"])),(n()(),t["\u0275ted"](-1,null,[" page for details of chart options."])),(n()(),t["\u0275ted"](-1,null,["\n"])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](97,0,null,null,10,"p",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["To support users of assistive technologies, provide a text summary of the chart with an "])),(n()(),t["\u0275eld"](99,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["aria-label"])),(n()(),t["\u0275ted"](-1,null,[" or "])),(n()(),t["\u0275eld"](102,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["span"])),(n()(),t["\u0275ted"](-1,null,[" hidden with the "])),(n()(),t["\u0275eld"](105,0,null,null,1,"code",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["sr-only"])),(n()(),t["\u0275ted"](-1,null,[" class. For live charts the most appropriate information to convey will vary depending on the chart\u2019s purpose, but may typically be the highest or most recent data point."])),(n()(),t["\u0275ted"](-1,null,["\n\n"])),(n()(),t["\u0275eld"](109,0,null,null,6,"blockquote",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["\n    "])),(n()(),t["\u0275eld"](111,0,null,null,3,"p",[],null,null,null,null,null)),(n()(),t["\u0275eld"](112,0,null,null,1,"strong",[],null,null,null,null,null)),(n()(),t["\u0275ted"](-1,null,["Note"])),(n()(),t["\u0275ted"](-1,null,[": This component can be used in an Angular application by importing the HybridModule."])),(n()(),t["\u0275ted"](-1,null,["\n"]))],(function(n,a){var s=a.component;n(a,3,0,s.series,s.options),n(a,12,0,"data","true","number or array"),n(a,16,0,"series","true","string"),n(a,29,0,"lineWidth","number"),n(a,33,0,"show","true","boolean"),n(a,37,0,"fillColor","array"),n(a,41,0,"fill","boolean or number"),n(a,45,0,"shadowSize","number"),n(a,57,0,!1),n(a,61,0,"HTML"),n(a,65,0,"html",s.snippets.compiled.chartHtml),n(a,69,0,"Javascript"),n(a,73,0,"javascript",s.snippets.compiled.chartJs),n(a,81,0,"markings","array"),n(a,92,0,"/charts/flot-options")}),(function(n,a){n(a,55,0,"left"===t["\u0275nov"](a,57).stacked,"right"===t["\u0275nov"](a,57).stacked),n(a,91,0,t["\u0275nov"](a,92).target,t["\u0275nov"](a,92).href)}))}function M(n){return t["\u0275vid"](0,[(n()(),t["\u0275eld"](0,0,null,null,1,"uxd-charts-live-chart-ng1",[],null,null,null,$,L)),t["\u0275did"](1,49152,null,0,i,[f.A],null,null)],null,null)}var q=t["\u0275ccf"]("uxd-charts-live-chart-ng1",i,M,{},{},[]),D=s("M2Lx"),j=s("lLAP"),H=s("x4zH"),z=s("gIcY"),O=s("eDkP"),A=s("Fzqc"),W=s("dWZg"),I=s("xdbM"),N=s("qina"),Z=s("zCE2"),B=s("4c35"),T=s("qAlS"),U=s("FLOw"),Y=s("XtaT");s.d(a,"ChartsLiveChartsModuleNgFactory",(function(){return _}));var _=t["\u0275cmf"](k,[],(function(n){return t["\u0275mod"]([t["\u0275mpd"](512,t.ComponentFactoryResolver,t["\u0275CodegenComponentFactoryResolver"],[[8,[d.a,m.q,m.a,h.a,g.a,v.a,q]],[3,t.ComponentFactoryResolver],t.NgModuleRef]),t["\u0275mpd"](4608,S.p,S.o,[t.LOCALE_ID,[2,S.C]]),t["\u0275mpd"](4608,D.c,D.c,[]),t["\u0275mpd"](4608,f.c,f.c,[[2,f.a]]),t["\u0275mpd"](4608,f.G,f.G,[]),t["\u0275mpd"](4608,f.Lb,f.Lb,[j.d,f.c,f.Kb,[2,f.a],t.RendererFactory2]),t["\u0275mpd"](4608,f.jc,f.jc,[t.RendererFactory2]),t["\u0275mpd"](5120,"flotDataService",H.b,["$injector"]),t["\u0275mpd"](5120,"lineDataService",H.c,["$injector"]),t["\u0275mpd"](5120,"$navigationMenu",f.Ue,["$injector"]),t["\u0275mpd"](5120,"$pdf",f.Ve,["$injector"]),t["\u0275mpd"](5120,"timeAgoService",f.We,["$injector"]),t["\u0275mpd"](4608,f.te,f.te,["timeAgoService"]),t["\u0275mpd"](4608,f.Zc,f.Zc,["$pdf"]),t["\u0275mpd"](4608,f.Bc,f.Bc,["$navigationMenu"]),t["\u0275mpd"](4608,f.Zb,f.Zb,[[3,f.Zb],[2,f.Wb]]),t["\u0275mpd"](4608,z.q,z.q,[]),t["\u0275mpd"](4608,f.ed,f.ed,[]),t["\u0275mpd"](4608,O.a,O.a,[O.f,O.b,t.ComponentFactoryResolver,O.e,O.c,t.Injector,t.NgZone,S.d,A.b,[2,S.j]]),t["\u0275mpd"](5120,O.g,O.h,[O.a]),t["\u0275mpd"](4608,f.He,f.He,[]),t["\u0275mpd"](1073742336,S.c,S.c,[]),t["\u0275mpd"](1073742336,W.b,W.b,[]),t["\u0275mpd"](1073742336,D.d,D.d,[]),t["\u0275mpd"](1073742336,j.a,j.a,[]),t["\u0275mpd"](1073742336,f.B,f.B,[]),t["\u0275mpd"](1073742336,f.b,f.b,[]),t["\u0275mpd"](1073742336,f.pe,f.pe,[]),t["\u0275mpd"](1073742336,H.a,H.a,[]),t["\u0275mpd"](1073742336,f.Vb,f.Vb,[]),t["\u0275mpd"](1073742336,I.ChartsModule,I.ChartsModule,[]),t["\u0275mpd"](1073742336,f.Yb,f.Yb,[]),t["\u0275mpd"](1073742336,f.i,f.i,[]),t["\u0275mpd"](1073742336,N.a,N.a,[]),t["\u0275mpd"](1073742336,Z.a,Z.a,[]),t["\u0275mpd"](1073742336,f.db,f.db,[]),t["\u0275mpd"](1073742336,z.p,z.p,[]),t["\u0275mpd"](1073742336,z.e,z.e,[]),t["\u0275mpd"](1073742336,f.dd,f.dd,[]),t["\u0275mpd"](1073742336,A.a,A.a,[]),t["\u0275mpd"](1073742336,B.c,B.c,[]),t["\u0275mpd"](1073742336,T.b,T.b,[]),t["\u0275mpd"](1073742336,O.d,O.d,[]),t["\u0275mpd"](1073742336,f.w,f.w,[]),t["\u0275mpd"](1073742336,f.Ge,f.Ge,[]),t["\u0275mpd"](1073742336,f.hd,f.hd,[]),t["\u0275mpd"](1073742336,R.s,R.s,[[2,R.x],[2,R.o]]),t["\u0275mpd"](1073742336,f.Cd,f.Cd,[]),t["\u0275mpd"](1073742336,U.a,U.a,[]),t["\u0275mpd"](1073742336,Y.a,Y.a,[]),t["\u0275mpd"](1073742336,k,k,[t.ComponentFactoryResolver,o.b]),t["\u0275mpd"](1024,R.m,(function(){return[[{path:"**",component:p.a,data:r}]]}),[])])}))},"a+5N":function(n,a){n.exports={snippet:'angular<span class="token punctuation">.</span><span class="token function">module</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">controller</span><span class="token punctuation">(</span><span class="token string">\'LiveChartCtrl\'</span><span class="token punctuation">,</span> LiveChartCtrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nLiveChartCtrl<span class="token punctuation">.</span>$inject <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'$interval\'</span><span class="token punctuation">,</span> <span class="token string">\'$colorService\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">LiveChartCtrl</span><span class="token punctuation">(</span><span class="token parameter">$interval<span class="token punctuation">,</span> $colorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">var</span> lc <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> flotChartColors <span class="token operator">=</span> <span class="token punctuation">{</span>\n        primary<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'chart1\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        gridColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey4\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        tickColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey6\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        borderColor<span class="token punctuation">:</span> $colorService<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token string">\'grey2\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toRgba</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        white<span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> livedata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> maximum <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            livedata <span class="token operator">=</span> livedata<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>livedata<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> maximum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">var</span> previous <span class="token operator">=</span> livedata<span class="token punctuation">.</span>length <span class="token operator">?</span> livedata<span class="token punctuation">[</span>livedata<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">;</span>\n            <span class="token keyword">var</span> y <span class="token operator">=</span> previous <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>\n            livedata<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> y <span class="token operator">></span> <span class="token number">100</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// zip the generated y values with the x values</span>\n\n        <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> livedata<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span> livedata<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> res<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    lc<span class="token punctuation">.</span>liveChart <span class="token operator">=</span> <span class="token punctuation">{</span>\n        series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            data<span class="token punctuation">:</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            lines<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fill<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                lineWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                fillColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                        opacity<span class="token punctuation">:</span> <span class="token number">0.1</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            shadowSize<span class="token punctuation">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            grid<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>gridColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                tickColor<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>tickColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                borderWidth<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    <span class="token string">"top"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token string">"right"</span><span class="token punctuation">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                borderColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    <span class="token string">"bottom"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                    <span class="token string">"left"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                minBorderMargin<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n                labelMargin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n                backgroundColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\n                    <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                margin<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                    top<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n                    bottom<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n                    left<span class="token punctuation">:</span> <span class="token number">20</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">markings</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">axes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">var</span> markings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n                    <span class="token keyword">var</span> xaxis <span class="token operator">=</span> axes<span class="token punctuation">.</span>xaxis<span class="token punctuation">;</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>xaxis<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> xaxis<span class="token punctuation">.</span>max<span class="token punctuation">;</span> x <span class="token operator">+=</span> xaxis<span class="token punctuation">.</span>tickSize <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        markings<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                                <span class="token keyword">from</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>\n                                to<span class="token punctuation">:</span> x <span class="token operator">+</span> xaxis<span class="token punctuation">.</span>tickSize\n                            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                            color<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>white<span class="token punctuation">]</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">return</span> markings<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            colors<span class="token punctuation">:</span> <span class="token punctuation">[</span>flotChartColors<span class="token punctuation">.</span>primary<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            xaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                <span class="token function-variable function">tickFormatter</span><span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            yaxis<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                min<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                max<span class="token punctuation">:</span> <span class="token number">110</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                show<span class="token punctuation">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">$interval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        lc<span class="token punctuation">.</span>liveChart<span class="token punctuation">.</span>series<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">getRandomData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token punctuation">}</span>',example:"angular.module('app').controller('LiveChartCtrl', LiveChartCtrl);\n\nLiveChartCtrl.$inject = ['$interval', '$colorService'];\n\nfunction LiveChartCtrl($interval, $colorService) {\n\n    var lc = this;\n\n    var flotChartColors = {\n        primary: $colorService.getColor('chart1').toRgb(),\n        gridColor: $colorService.getColor('grey4').toHex(),\n        tickColor: $colorService.getColor('grey6').toHex(),\n        borderColor: $colorService.getColor('grey2').setAlpha(0.5).toRgba(),\n        white: \"#FFFFFF\"\n    };\n\n    var livedata = [];\n    var maximum = 300;\n\n    function getRandomData() {\n\n        if (livedata.length) {\n            livedata = livedata.slice(1);\n        }\n\n        while (livedata.length < maximum) {\n            var previous = livedata.length ? livedata[livedata.length - 1] : 50;\n            var y = previous + Math.random() * 10 - 5;\n            livedata.push(y < 0 ? 0 : y > 100 ? 100 : y);\n        }\n\n        // zip the generated y values with the x values\n\n        var res = [];\n        for (var i = 0; i < livedata.length; ++i) {\n            res.push([i, livedata[i]]);\n        }\n\n        return res;\n    }\n\n    lc.liveChart = {\n        series: [{\n            data: getRandomData(),\n            lines: {\n                fill: true,\n                lineWidth: 1,\n                fillColor: {\n                    colors: [{\n                        opacity: 0.1\n                    }, {\n                        opacity: 0.1\n                    }]\n                }\n            },\n            shadowSize: 0\n        }],\n        options: {\n            grid: {\n                color: [flotChartColors.gridColor],\n                tickColor: [flotChartColors.tickColor],\n                borderWidth: {\n                    \"top\": 0,\n                    \"bottom\": 1,\n                    \"left\": 1,\n                    \"right\": 0\n                },\n                borderColor: {\n                    \"bottom\": [flotChartColors.borderColor],\n                    \"left\": [flotChartColors.borderColor]\n                },\n                minBorderMargin: 20,\n                labelMargin: 10,\n                backgroundColor: {\n                    colors: [\n                        [flotChartColors.white],\n                        [flotChartColors.white]\n                    ]\n                },\n                margin: {\n                    top: 8,\n                    bottom: 20,\n                    left: 20\n                },\n                markings: function (axes) {\n                    var markings = [];\n                    var xaxis = axes.xaxis;\n                    for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\n                        markings.push({\n                            xaxis: {\n                                from: x,\n                                to: x + xaxis.tickSize\n                            },\n                            color: [flotChartColors.white]\n                        });\n                    }\n                    return markings;\n                }\n            },\n            colors: [flotChartColors.primary],\n            xaxis: {\n                tickFormatter: function () {\n                    return \"\";\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 110\n            },\n            legend: {\n                show: true\n            }\n        }\n\n    };\n\n    $interval(function () {\n        lc.liveChart.series[0].data = getRandomData();\n    }, 40);\n\n\n}"}},aaOX:function(n,a){n.exports={snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flot-chart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flot</span> <span class="token attr-name">dataset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.series<span class="token punctuation">"</span></span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.options<span class="token punctuation">"</span></span> <span class="token attr-name">on-plot-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotClick(event,pos,item)<span class="token punctuation">"</span></span>\n        <span class="token attr-name">on-hover-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lc.liveChart.onPlotHover(event,pos,item)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flot</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',example:'<div class="flot-chart">\n    <flot dataset="lc.liveChart.series" options="lc.liveChart.options" on-plot-click="lc.liveChart.onPlotClick(event,pos,item)"\n        on-hover-click="lc.liveChart.onPlotHover(event,pos,item)">\n    </flot>\n</div>'}}}]);